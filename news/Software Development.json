"{\"title\":{\"3520\":\"stack overflow podcast episode 31\",\"3508\":\"stack exchange podcast episode 45 keeping sharp c\",\"1850\":\"use pyqt 's qthread prevent freezing guis\",\"931\":\"advice getting started testing python\",\"3410\":\"tfw accidentally delete database\",\"4853\":\"morgan stanley interview experience spring internship off-campus 2021\",\"3512\":\"stack exchange podcast episode 34 kyle brandt nick craver\",\"3536\":\"making kubernetes work like 's 1999 kelsey hightower\",\"215\":\"rt sentdex thanks early xmas drop sentdex daniel_kukiela long awaited hardcover version neural networks scratch python get copy http \\/\\/nnfs.io thank later neuralnetworks\",\"3300\":\"contact tracing civil liberties part 2\",\"3549\":\"stack overflow podcast episode 07\",\"3533\":\"stack overflow podcast episode 51\",\"3477\":\"stack exchange podcast episode 21 w\\/ david fullerton\",\"3542\":\"stack overflow podcast episode 52\",\"890\":\"nobody sentdex cyberpython 2077 https \\/\\/www.youtube.com\\/watch v=duu6zsjlzkq\",\"3460\":\"stack exchange podcast episode 05 w\\/ josh heyer\",\"1828\":\"build career tech jordan jackson connects dots\",\"3301\":\"stack exchange podcast episode 62 delete whole episode\",\"3354\":\"stack overflow podcast episode 24\",\"3383\":\"stack overflow podcast episode 78\",\"567\":\"machine coding cache new addition system design course\",\"953\":\"effective python python google scale\",\"3568\":\"stack exchange podcast episode 32 rep-ocalypse\",\"3493\":\"stack exchange podcast episode 03 w\\/ scott hanselman\",\"596\":\"python interview linkedin engineer merge linked lists order\",\"3840\":\"minimum time required fill given n slots\",\"3592\":\"podcast 297 time highs talking crypto li ouyang\",\"608\":\"c++ interview snap engineer print linked list reverse\",\"1810\":\"hashedin interview experience on-campus 2020\",\"3421\":\"stack overflow podcast episode 33\",\"3340\":\"javascript ready get place\",\"3478\":\"stack exchange podcast episode 11 w\\/ rory blyth\",\"1835\":\"java testing junit 5 crash course\",\"3293\":\"stack overflow podcast episode 40\",\"3294\":\"stack exchange podcast episode 20 w\\/ john siracusa\",\"3487\":\"'s hard get hacked worse\",\"3284\":\"stack overflow podcast 117 friendly neighborhood code mentor\",\"3599\":\"podcast 305 mean \\u201c senior \\u201d software engineer\",\"1821\":\"pointers c c++ full course\",\"1825\":\"build instagram clone react native firebase firestore redux expo full course\",\"525\":\"random boolean networks computerphile\",\"3598\":\"podcast 293 connecting apps data cloud apollo graphql ceo geoff schmidt\",\"5140\":\"creating interactive online python conference pycascades 2021\",\"926\":\"python wheels pass reference python\",\"3273\":\"stack exchange podcast episode 44 43\",\"3894\":\"wipro \\u2019 21 predictions 2021\",\"601\":\"python interview amazon engineer closest three sum\",\"3384\":\"episode 101 special segment stump alex miller\",\"1859\":\"handling missing keys python defaultdict type\",\"3501\":\"hire developers stack\",\"1848\":\"python manages memory\",\"3373\":\"code newbie 's approach education community\",\"933\":\"exploring new features python 3.9\",\"1849\":\"sentiment analysis first steps python 's nltk library\",\"3556\":\"stack exchange podcast episode 18\",\"3461\":\"stack overflow podcast episode 20\",\"3552\":\"stack exchange podcast episode 46 podcast sounds dirty n't\",\"4847\":\"amazon interview experience sde internship on-campus\",\"3494\":\"stack exchange podcast episode 63 plumber 's 67 coins\",\"939\":\"sentiment analysis fourier transforms python data science\",\"528\":\"prime numbers rsa encryption algorithm computerphile\",\"1819\":\"6 types anti patterns avoid software development\",\"3495\":\"stack exchange podcast episode 01\",\"3476\":\"buddy typing\",\"3505\":\"stack overflow podcast episode 09\",\"3334\":\"turning coding career rpg sai vennam\",\"1822\":\"data augmentation regularization resnets deep learning pytorch zero gans 5 6\",\"3394\":\"never program bed\",\"3472\":\"stack overflow podcast episode 77\",\"3612\":\"overflow 54 talking crypto\",\"1834\":\"image classification convolutional neural networks deep learning pytorch zero gans\",\"3588\":\"podcast 292 goodbye flash \\u2019 see rust\",\"3295\":\"stack html css\",\"925\":\"learn python skills creating games\",\"3371\":\"magic metric micro frontends breaking leases silicon valley offices\",\"943\":\"exploring k-means clustering building gradebook pandas\",\"2788\":\"introduction sorting algorithms python\",\"3402\":\"gpt-3 yeah know\",\"3575\":\"developer productivity measured\",\"3431\":\"podcast 107 're trying non-terrible\",\"3407\":\"digging deno 1.0\",\"3537\":\"stack exchange podcast episode 09 w\\/ greg wilson\",\"3289\":\"stack overflow podcast episode 65\",\"3555\":\"stack overflow podcast 98 scott hanselman better us everything\",\"3433\":\"pros cons spa\",\"1845\":\"numpy tutorial first steps data science python\",\"3480\":\"ca n't pay taxes website wo n't load\",\"3566\":\"stack exchange podcast episode 02\",\"3527\":\"dev.to quit\",\"1827\":\"build complete android app firebase full course kotlin\",\"920\":\"exploring circuitpython\",\"3446\":\"stack exchange podcast episode 22 w\\/ paul biggar\",\"3584\":\"overflow 50 cs degree big tech\",\"3401\":\"crypto christmas\",\"3324\":\"stack exchange podcast episode 64 diverse hiring cat named alan turing\",\"3328\":\"downside going viral programming joke\",\"3502\":\"stack exchange podcast episode 27 w\\/ dave winer\",\"3393\":\"try cooking turning employees stack users\",\"3569\":\"stack overflow podcast episode 39\",\"1853\":\"python 's .append add items lists place\",\"226\":\"rt sentdex finally got home christmas admire beautiful nnfs sentdex daniel_kukiela\",\"3326\":\"stack exchange podcast episode 13 w\\/ jin yang\",\"3265\":\"luck intentional serendipity uprisor innovation conversation mark searle\",\"1865\":\"formatting python strings\",\"1812\":\"count numbers given range prime non-prime digits prime non-prime positions respectively\",\"3286\":\"stack overflow podcast episode 19\",\"751\":\"sample audio computerphile\",\"3441\":\"podcast 111 sre occasionally maintaining infrastructure hate\",\"946\":\"python return statement best practices working map function\",\"3381\":\"program one tweet\",\"3261\":\"enterprise crowdsourcing stories \\u2013 paul hlivko all-in talent strategy way forward\",\"3306\":\"tim berners lee wants put pod web pod\",\"531\":\"rwall remote write computerphile\",\"3551\":\"diving headless automation active monitoring playwright puppeteer\",\"597\":\"java interview google engineer walls gates\",\"3571\":\"mi yodeya launch party\",\"3345\":\"stack exchange podcast episode 04 w\\/ jon skeet\",\"4973\":\"personalized feeds available teams\",\"3375\":\"stack overflow podcast episode 14\",\"3262\":\"breaking bad 2020 habits\",\"3597\":\"podcast 290 computer science degree brought big tech\",\"3607\":\"overflow 56 engineering argument\",\"4856\":\"hyperparameters random forest classifier\",\"3514\":\"stack overflow podcast episode 16\",\"3395\":\"stack exchange podcast episode 55 n't call comeback\",\"3591\":\"security considerations ota software updates iot gateway devices\",\"3281\":\"stack exchange podcast episode 15 w\\/ michael natkin\",\"4848\":\"tcs nqt interview experience 2020-21\",\"941\":\"leveling python literacy finding python projects study\",\"3468\":\"favorite haxx\",\"223\":\"4 hour long video regurgitating code 's mention github youtube video content description actual source response classic\",\"3310\":\"stack exchange podcast episode 67 firehose nerd-dom\",\"3400\":\"stack exchange podcast episode 26\",\"3837\":\"check x elements selected two arrays respectively maximum x less minimum\",\"3432\":\"stack overflow podcast episode 29\",\"3578\":\"ciao winter bash 2020\",\"3412\":\"jokes us\",\"3288\":\"stack overflow podcast 103 grandma\",\"209\":\"rt sentdex ca n't wait dig great book year keep making good content sentdex\",\"3451\":\"stack overflow podcast episode 66\",\"570\":\"low level design video course\",\"577\":\"india 's next big frontier aadhaar upi ... depa\",\"3385\":\"stack exchange podcast episode 41 neither us muscles\",\"3547\":\"stack overflow podcast episode 84\",\"3518\":\"news clip podcast 110 ibm dismantles remote work policy\",\"1862\":\"building django rest framework\",\"3506\":\"'s afraid little merge conflict\",\"3379\":\"stack overflow podcast 105 results developer survey 2017\",\"3491\":\"'s like learning program prison\",\"3329\":\"stack overflow podcast episode 18\",\"3358\":\"adventures javascriptlandia\",\"3353\":\"stack overflow podcast episode 50\",\"533\":\"story mel computerphile\",\"1823\":\"make landing page using html scss javascript full course\",\"3482\":\"stack overflow podcast episode 61\",\"3406\":\"stack overflow podcast episode 46\",\"1820\":\"hsbc interview experience on-campus 2021 virtual\",\"3498\":\"would d.i.e ide\",\"5095\":\"build shopping cart react typescript tutorial\",\"3503\":\"coding tutorials real drag\",\"3357\":\"chatting robin ginn executive director openjs foundation\",\"3497\":\".net devaroundthesun 're episode live\",\"3545\":\"stack overflow podcast episode 57\",\"3510\":\"ai n't real till break prod\",\"913\":\"python manages memory creating arrays np.linspace\",\"600\":\"python interview microsoft engineer lru cache\",\"3343\":\"podcast 110 ibm 're wrong\",\"4843\":\"real python podcast \\u2013 episode 44 creating interactive online python conference pycascades 2021\",\"3456\":\"stack overflow podcast episode 49\",\"3528\":\"react vue jquery flavor like vanilla js\",\"3269\":\"stack overflow podcast episode 37\",\"3404\":\"nyc pause\",\"3435\":\"stack overflow podcast episode 34\",\"3466\":\"stack exchange podcast episode 07 w\\/ sam saffron\",\"3469\":\"next level command line\",\"3439\":\"stack exchange podcast episode 54 one anachronisms\",\"1854\":\"real python podcast \\u2013 episode 41 2020 real python articles review\",\"3587\":\"overflow 52 semantic future web\",\"3436\":\"developers increasingly demanding ethics tech\",\"1826\":\"20 award-winning javascript games \\u2013 js13kgames 2020 winners\",\"3602\":\"semantic future web\",\"3320\":\"stack overflow podcast episode 26\",\"1851\":\"real python podcast \\u2013 episode 42 data engineering researching 10 million jupyter notebooks\",\"3455\":\"podcast 119 podcast definitely simulation\",\"3428\":\"maxing stats personal development nerds\",\"3457\":\"java goes outer space\",\"3448\":\"tiny open-source pillar holding entire internet\",\"4461\":\"10 tips first year computer science engineering students\",\"3550\":\"stack exchange podcast episode 36 hurricane\",\"3259\":\"tco20 north america regional recap\",\"3839\":\"count 1s present range indices l r given array\",\"3538\":\"emotional week way forward\",\"1839\":\"real python podcast \\u2013 episode 39 generators coroutines learning python exercises\",\"3459\":\"podcast 114 every conference needs break-dancing greeter\",\"3283\":\"stack exchange podcast episode 30 w\\/ robert rebecca\",\"3430\":\"conversation diversity representation\",\"1857\":\"data engineering right\",\"3369\":\"stack exchange podcast episode 40 random musings\",\"3267\":\"cleaning build systems gathering computer history adam gordon bell\",\"1863\":\"real python podcast \\u2013 episode 43 deep reinforcement learning notebook jupylet gaming synthesis\",\"527\":\"knapsack problem genetic algorithms computerphile\",\"3350\":\"mastering mainframe\",\"3424\":\"talking arduino bits boards dr. duino\",\"1843\":\"pass statement nothing python\",\"2836\":\"java interview wurl engineer evaluate unix path\",\"3416\":\"stack overflow podcast episode 72\",\"3356\":\"scripting next era stack overflow\",\"3509\":\"stack exchange podcast episode 23 w\\/ james portnow\",\"219\":\"pinned neural networks scratch print something everyone novices well-practiced deeplearning learning neuralnetworks actually work rather simply making imports method calls https \\/\\/youtu.be\\/snhim0doeag get https \\/\\/nnfs.io\",\"3845\":\"partition array two subsets minimum bitwise xor maximum minimum\",\"3522\":\"dash anil pinch glimmer splash glitch\",\"3391\":\"stack overflow podcast episode 68\",\"3614\":\"podcast 294 cleaning build systems gathering computer history\",\"3490\":\"stack exchange podcast episode 61 `` jay 's done wrong '' podcast\",\"1846\":\"real python podcast \\u2013 episode 37 teaching python finding resources students\",\"3398\":\"stack exchange podcast episode 25 w\\/ mark russinovich\",\"3397\":\"'re reacting\",\"3534\":\"stack overflow podcast episode 47\",\"3604\":\"podcast 296 adventures javascriptlandia\",\"3368\":\"stack overflow podcast episode 45\",\"3504\":\"stack exchange podcast episode 49 one edited title reference\",\"3337\":\"would pay \\/dev\\/null service\",\"1247\":\"nx xavier devkit latest updates nvidia\",\"4974\":\"overflow 57 \\/dev\\/null demand\",\"3489\":\"stack overflow podcast 95 shakespearian sql server\",\"3613\":\"podcast 302 programming powerpoint teach things\",\"3348\":\"stack overflow podcast 104 jenn schiffer talks us fog creek 's new glitch\",\"936\":\"deep reinforcement learning notebook jupylet gaming synthesis\",\"599\":\"python interview walmart engineer permutation string\",\"3540\":\"time major league hacking\",\"3426\":\"interpret compiler\",\"4851\":\"accenture interview experience 2021\",\"3576\":\"podcast episode 299 \\u2019 hard get hacked worse\",\"3583\":\"want teach kids code three apps help\",\"602\":\"python interview amazon engineer substring concatenation\",\"3318\":\"conversation author black software\",\"569\":\"google maps algorithm designing location based database\",\"3389\":\"stack overflow podcast episode 79\",\"3382\":\"getting know moderators\",\"3366\":\"stack overflow podcast episode 59\",\"3351\":\"paul explains\",\"3462\":\"dropping knowledge drupal 's creator dries\",\"3257\":\"giving 2021 opportunity become doer\",\"3474\":\"stack exchange podcast 72 jay n't get raise podcast\",\"3440\":\"stack exchange podcast 70 david wrong jason right\",\"3475\":\"stack exchange podcast episode 38 one 's least 4\\/10\",\"3376\":\"forming new habits 100 days code\",\"521\":\"tls handshake explained computerphile\",\"3308\":\"mayor open source town\",\"952\":\"preparing interview python practice problems\",\"3484\":\"stack overflow podcast episode 04\",\"3271\":\"\\u2019 back compilers turtles brand new crew\",\"921\":\"learning python errors\",\"3305\":\"stack exchange podcast episode 68 badger horse dik-dik documentation episode\",\"3314\":\"stack overflow podcast 91 stump nick craver\",\"3523\":\"stack overflow podcast episode 75\",\"3594\":\"write effective developer resume advice hiring manager\",\"1830\":\"java android app using rest api network data android course\",\"3321\":\"stack overflow podcast episode 74\",\"1815\":\"sap labs interview experience sde on-campus\",\"3292\":\"coaching developer interview\",\"3577\":\"loop community health indicator\",\"3380\":\"stack overflow podcast episode 32\",\"3299\":\"stack overflow podcast episode 76\",\"1824\":\"python microservices web app react django flask full course\",\"3344\":\"stack overflow podcast episode 86\",\"3579\":\"tips stay focused finish hobby project\",\"915\":\"python rest apis well-grounded python developer\",\"3332\":\"ben answers first question stack overflow\",\"3554\":\"goodbye flash 'll see rust\",\"218\":\"'s india thing see levied every time happens someone india india easily largest fastest growing population new devs\\/creators ... etc 's human thing\",\"3526\":\"stack overflow podcast episode 54\",\"526\":\"brute forcing countdown numbers game computerphile\",\"3297\":\"stack exchange podcast episode 51 return coding horror\",\"3535\":\"stack overflow podcast episode 56\",\"1239\":\"cyber python 2077 using computer vision read walk cyberpunk 2077 map\",\"1811\":\"service interview experience fte on-campus 2021\",\"3411\":\"make software reliable enough space travel\",\"3564\":\"stack overflow podcast episode 81\",\"579\":\"microservices coding tutorial java go\",\"4849\":\"web developer android developer \\u2013 one better career choice\",\"3544\":\"stack overflow podcast episode 38\",\"3609\":\"overflow 53 winter bash\",\"3470\":\"stack overflow podcast episode 87\",\"3586\":\"podcast 295 diving headless automation active monitoring playwright puppeteer\",\"3560\":\"stack overflow podcast episode 12\",\"1838\":\"real python podcast \\u2013 episode 35 security authorization python web applications\",\"3610\":\"hat season way join us winter bash 2020\",\"3333\":\"stack overflow podcast 88 documentation mostly\",\"214\":\"complaint facebook apple 's new ios privacy settings makes want buy apple products\",\"3479\":\"stack overflow podcast episode 25\",\"3311\":\"stack exchange podcast episode 24 w\\/ eric ries\",\"1837\":\"real python podcast \\u2013 episode 36 sentiment analysis fourier transforms python data science\",\"576\":\"system design course overview\",\"951\":\"show\",\"217\":\"neat https \\/\\/www.youtube.com\\/watch v=zc0gmhyhww0\",\"3408\":\"stack exchange podcast episode 28 w\\/ brent ozar\",\"3399\":\"stack overflow podcast episode 03\",\"944\":\"create cross-platform python gui apps beeware\",\"3425\":\"stack exchange podcast episode 33 's back\",\"3492\":\"stack overflow podcast episode 44\",\"3268\":\"stack exchange podcast episode 57 saw florp\",\"916\":\"docker python data science machine learning\",\"3317\":\"prison programming code cooperative\",\"1860\":\"develop data visualization interfaces python dash\",\"3270\":\"podcast 120 halloween spooktacular anil slash\",\"3541\":\"stack overflow podcast episode 43\",\"3467\":\"podcast 123 jon skeet wants feminist\",\"3507\":\"oracle wants tok nvidia arms\",\"1842\":\"real python podcast \\u2013 episode 40 python manages memory creating arrays np.linspace\",\"3606\":\"podcast 298 crypto christmas\",\"3290\":\"stack overflow podcast episode 80\",\"3338\":\"web comics react core rachel nabors\",\"604\":\"system design interview amazon engineer amazon ranking system\",\"3600\":\"tables turned nosql\",\"208\":\"3 malware brave browser see searching `` brave browser '' ddg google bing looks sketchy\",\"1245\":\"neural networks scratch p.4 batches layers objects\",\"3277\":\"podcast 108 welcome back joel\",\"5290\":\"neural networks scratch p.7 calculating loss categorical cross-entropy\",\"1852\":\"serializing objects python pickle module\",\"3413\":\"stack exchange podcast episode 47 even twitter bro\",\"3405\":\"stack overflow 's ceo reflects first year\",\"3374\":\"right back ya 're doubling podcast\",\"3335\":\"podcast 118 's travel-hacker anyway\",\"929\":\"building pdfs python reportlab\",\"598\":\"javascript interview amazon engineer max product stream\",\"1250\":\"deep learning chatbot r\",\"3444\":\"cleaning cloud help fight climate change\",\"574\":\"healthathon 2020 announcement hackathon ispirit\",\"949\":\"python decorators writing real python\",\"3546\":\"would react\",\"3312\":\"stack overflow podcast episode 28\",\"213\":\"\\ud83d\\ude0d\",\"3276\":\"buggin\",\"3454\":\"occam 's blazor\",\"3562\":\"stack overflow podcast episode 01\",\"3529\":\"stack overflow podcast 106 data team assemble\",\"3302\":\"could fix software technology would change\",\"3323\":\"director 's cutts\",\"3593\":\"fulfilling promise ci\\/cd\",\"3274\":\"stack overflow podcast episode 71\",\"568\":\"google low level design question part 1 implement logger\",\"1238\":\"neural networks scratch p.2 coding layer\",\"3313\":\"make\",\"3287\":\"stack overflow podcast episode 69\",\"3303\":\"stack exchange podcast episode 60 predictable\",\"3316\":\"cryptocurrency-based life form\",\"3325\":\"stack overflow podcast episode 41\",\"923\":\"linear programming pysimplegui\",\"3367\":\"stack exchange podcast episode 42 exception proves rule\",\"3420\":\"turn tune drop log\",\"3603\":\"organization need developer evangelist\",\"3570\":\"stack overflow podcast 102 learn uber\",\"1832\":\"image generation using gans deep learning pytorch zero gans part 6 6\",\"1241\":\"neural networks scratch p.5 hidden layer activation functions\",\"954\":\"asyncio music origins black managing python releases\",\"3304\":\"welcome 2021 special guest joel spolsky\",\"1861\":\"regular expressions building regexes python\",\"3418\":\"make monolith micro\",\"3355\":\"stack exchange podcast episode 43 false facts blood feuds\",\"932\":\"pdfs python projects raspberry pi\",\"3392\":\"stack overflow podcast episode 35\",\"3515\":\"stack overflow podcast 94 n't care bret famous\",\"3342\":\"stack overflow podcast episode 82\",\"3605\":\"podcast 291 developers demanding ethics tech\",\"3341\":\"stack overflow podcast episode 73\",\"3396\":\"podcast 115 stack overflow reads mean tweets\",\"225\":\"d'aww ty something tells coffeebreak_yt n't watch programming videos admit coffeezilla yt 100 guilty pleasure collab could possibly talk certain massive online course selling site 'm currently battle \\ud83e\\udd20\",\"3278\":\"stack overflow podcast 90 developer stories charger butts joel 's tiny hands\",\"3361\":\"stack exchange podcast 71 bunch bald yaks\",\"3471\":\"stack exchange podcast episode 37 back\",\"1240\":\"neural networks scratch p.6 softmax activation\",\"1864\":\"bitwise operators python\",\"3449\":\"stack exchange podcast episode 17 w\\/ kyle george\",\"609\":\"java interview fireeye engineer three sum\",\"4850\":\"tcs nqt interview experience 2020-21\",\"3429\":\"stack exchange podcast episode 19 w\\/ john sheehan\",\"3573\":\"stack overflow podcast episode 11\",\"3370\":\"25 years java present future\",\"1237\":\"neural networks scratch nnfs print\",\"3362\":\"stack overflow podcast 96 face full code\",\"3258\":\"open innovation prize competitions across government gsa \\u2019 jarah meador\",\"948\":\"ten years flask conversation creator armin ronacher\",\"212\":\"needs 1 cancel domain\",\"940\":\"python job hunting pandemic\",\"3387\":\"searching next frontier chris dixon\",\"603\":\"c interview google engineer maximum sum subarray\",\"3543\":\"podcast 121 another ducking episode\",\"3565\":\"stack exchange podcast episode 56 green red curae\",\"578\":\"garbage collection algorithms part ii\",\"606\":\"python interview jp morgan engineer smallest sufficient substring\",\"3836\":\"convert binary tree bst left shifting digits node values\",\"3567\":\"stack overflow podcast episode 05\",\"3434\":\"stack overflow podcast 97 get hat\",\"3386\":\"stack overflow podcast episode 10\",\"3842\":\"find node paths node leaf nodes color\",\"3437\":\"projectile productivity\",\"3517\":\"stack exchange podcast episode 53 let 's go rio\",\"565\":\"code reviews styles solutions software engineer yogita\",\"3835\":\"check array elements reduced less x\",\"4852\":\"sum distances nodes given node\",\"3322\":\"stack overflow podcast episode 63\",\"222\":\"neural networks scratch part 6 covering softmax activation function machinelearning deeplearning nnfs https \\/\\/www.youtube.com\\/watch v=omz_ndfgwyu\",\"3445\":\"stack overflow podcast episode 15\",\"3611\":\"podcast 301 program one tweet\",\"3530\":\"stack exchange podcast episode 16\",\"3447\":\"stack overflow podcast episode 55\",\"938\":\"python modulo operator managing data sqlite sqlalchemy\",\"4854\":\"perfios interview experience on-campus 2021\",\"1847\":\"python mysql database practical introduction\",\"3483\":\"podcast 112 please direct hate mail jay hanlon \\u2105 stack overflow ...\",\"3463\":\"stack exchange podcast episode 31 goodbye jeff\",\"3291\":\"stack overflow podcast 92 guerilla guide interviewing\",\"4855\":\"amazon wow interview experience\",\"3330\":\"stack overflow podcast episode 21\",\"927\":\"data engineering researching 10 million jupyter notebooks\",\"575\":\"containers virtualisation cloud computing\",\"3352\":\"'s like developer stack overflow\",\"3608\":\"episode 304 stack html css\",\"3282\":\"stack overflow podcast 101 matt mullenweg open source blogs beyonc\\u00e9\",\"216\":\"n't feel assured\",\"935\":\"5 years podcasting python michael kennedy growth gil async\",\"1249\":\"sentdex channel update\",\"3464\":\"stack exchange podcast episode 14 w\\/ miguel de icaza\",\"532\":\"distance vector algorithm bellman ford computerphile\",\"3360\":\"time highs talking crypto li ouyang coinbase\",\"1251\":\"neural networks scratch p.3 dot product\",\"3298\":\"stack overflow podcast episode 23\",\"3427\":\"tech titans act productizing tiny open source projects\",\"1243\":\"neat algorithm neat\",\"1818\":\"citrix interview experience on-campus\",\"3558\":\"maybe 's maebeline\",\"3519\":\"stack overflow podcast episode 58\",\"3559\":\"podcast 116 technology even know\",\"3339\":\"stack overflow podcast episode 60\",\"955\":\"generators coroutines learning python exercises\",\"3473\":\"managers developers ever make technical decisions\",\"3438\":\"stack exchange podcast episode 66 thank saying words us\",\"3417\":\"stack exchange podcast episode 39 one wil wheaton\",\"3296\":\"tik tok 's tech troubles developers flee san francisco\",\"3442\":\"stack exchange podcast episode 65 word two meanings see\",\"945\":\"web scraping python tools techniques legality\",\"1836\":\"make first python game rock paper scissors\",\"3453\":\"tech like `` rest world ''\",\"1829\":\"webhooks beginners full course\",\"524\":\"facebook 's code checker computerphile\",\"3443\":\"stack overflow podcast episode 30\",\"1816\":\"maximize sum selecting x different-indexed elements three given arrays\",\"522\":\"computer mouse works computerphile\",\"4972\":\"episode 306 gaming pcs heat home oceans cool data centers\",\"891\":\"image\",\"914\":\"security authorization python web applications\",\"1814\":\"permutation first n natural numbers product bitwise adjacent pairs exceeding 0\",\"3511\":\"data base\",\"3264\":\"single round match 797 editorials\",\"605\":\"programming interview microsoft engineer subarray sum equals k\",\"919\":\"teaching python finding resources students\",\"947\":\"going serverless python\",\"5774\":\"`` anonymous '' location data problems computerphile\",\"1813\":\"eq technologic interview experience on-campus 2020 virtual\",\"1246\":\"jetson nano 2gb nvidia\",\"3465\":\"stack overflow podcast episode 02\",\"595\":\"javascript interview linkedin engineer two sum\",\"3843\":\"count integers difference reverse equal\",\"3319\":\"find next stop\",\"1831\":\"build 12 data science apps python streamlit full course\",\"3315\":\"stack overflow podcast 100 jeff atwood back today\\u2026\",\"4462\":\"zoho interview experience off-campus 2021\",\"950\":\"options packaging python application wheels docker\",\"1841\":\"speed python concurrency\",\"3285\":\"podcast 113 frustrating miracles\",\"571\":\"git software engineers live classroom\",\"930\":\"going beyond basic stuff python al sweigart\",\"1817\":\"sap labs interview experience on-campus 2020\",\"3458\":\"stack exchange podcast episode 59 's one science-ists\",\"912\":\"python regular expressions views vs copies pandas\",\"3580\":\"podcast 303 would pay \\/dev\\/null service\",\"1858\":\"managing python dependencies\",\"3365\":\"great bluetooth trace\",\"3499\":\"stack overflow podcast episode 36\",\"3419\":\"stack overflow podcast episode 48\",\"3553\":\"new tools new times\",\"3557\":\"stack overflow podcast episode 13\",\"3422\":\"developers become successful writers\",\"1855\":\"real python podcast \\u2013 episode 34 python modulo operator managing data sqlite sqlalchemy\",\"3450\":\"stack overflow podcast 89 decline stack overflow greatly exaggerated\",\"3589\":\"overflow 49 container orchestration explained\",\"210\":\"rt sentdex nnfs book received today never purchased heavy book like going fun \\ud83e\\udd20 sentdex daniel_kukiela\",\"1248\":\"neural networks scratch p.1 intro neuron code\",\"3524\":\"podcast 122 hold closer tiny dancer dasher prancer vixen\",\"3532\":\"game developers fit world software\",\"1840\":\"python turtle beginners\",\"3390\":\"stack overflow podcast episode 62\",\"5093\":\"gaming pcs heat home oceans cool data centers\",\"607\":\"c++ interview google engineer alien dictionary\",\"520\":\"digital signatures computerphile\",\"918\":\"thinking pandas python data analysis right way\",\"3414\":\"stack exchange podcast episode 50 listen podcast\",\"3377\":\"stack overflow podcast episode 67\",\"3585\":\"podcast 289 react jquery vue \\u2019 favorite flavor vanilla js\",\"3423\":\"stack overflow podcast episode 85\",\"3309\":\"believe life keyboards\",\"924\":\"new `` python basics '' book filling gaps learning path\",\"211\":\"keep\",\"1833\":\"code discord bot python host free cloud\",\"221\":\"happy make right enjoy\",\"3363\":\"stack exchange podcast episode 35 scott hanselman\",\"3601\":\"macro problem microservices\",\"3388\":\"stack overflow podcast 93 spolsky halloween special\",\"3516\":\"great cobol crunch\",\"3539\":\"stack overflow podcast episode 27\",\"1844\":\"django admin customization\",\"3346\":\"stack overflow podcast episode 08\",\"3347\":\"stack overflow podcast episode 42\",\"566\":\"low level design part 2 solving concurrency locking\",\"3272\":\"contact tracing calibration balancing civil liberties fighting pandemic\",\"3951\":\"c python programmers\",\"934\":\"looping enumerate python guis pyqt\",\"3359\":\"stack exchange podcast episode 12 w\\/ patrick mckenzie\",\"3280\":\"chris anderson drones driverless cars creating communities around code\",\"3838\":\"count diagonal paths node leaf consisting valued nodes\",\"3452\":\"stack exchange podcast episode 06\",\"922\":\"advanced python import techniques managing users django\",\"3327\":\"glitch matrix\",\"1244\":\"ai-based game engines gamegan research paper\",\"3364\":\"connecting apps data cloud apollo graphql ceo geoff schmidt\",\"3485\":\"stack overflow podcast episode 17\",\"3581\":\"podcast 300 welcome 2021 joel spolsky\",\"1856\":\"real python podcast \\u2013 episode 38 looping enumerate python guis pyqt\",\"3415\":\"exactly mean `` senior '' software engineer\",\"530\":\"program correctness computerphile\",\"572\":\"dependency injection coding tutorial live\",\"3486\":\"story behind stack overflow russian nicolas chabanovsky\",\"3841\":\"maximize value pair two given arrays based given conditions\",\"917\":\"data version control python real python video transcripts\",\"3548\":\"stack exchange podcast episode 08 w\\/ marco arment\",\"3307\":\"stack overflow podcast episode 64\",\"942\":\"resolving package dependencies new version pip\",\"3563\":\"episode 272 pull requests welcome\",\"2823\":\"basics sql injection penetration testing ethical hackers\",\"3596\":\"open source funding problem\",\"3595\":\"overflow 55 great impractical ideas computer science\",\"3331\":\"ok vandalized wikipedia\",\"3372\":\"time keeps slipping\",\"5094\":\"neural networks scratch part 7 available covering loss categorical cross-entropy https \\/\\/www.youtube.com\\/watch v=dexpmqxoilc machinelearning deeplearning python nnfs\",\"3574\":\"stack overflow podcast 99 requested operation requires elevation\",\"534\":\"first internet worm morris worm computerphile\",\"3500\":\"embrace darkness\",\"573\":\"garbage collection algorithms part\",\"3336\":\"stack exchange podcast episode 29 w\\/ chris poole\",\"937\":\"2020 real python articles review\",\"529\":\"alohanet grandfather computer networks computerphile\",\"220\":\"rt sentdex sentdex time christmas\",\"3590\":\"overflow 51 finish hobby project\",\"3525\":\"programming powerpoint teach things\",\"523\":\"transport layer security tls computerphile\",\"3496\":\"scrum making worse engineer\",\"3263\":\"covid-19 pandemic checking yoki indonesia\",\"3513\":\"stack overflow podcast episode 53\",\"3488\":\"stack exchange podcast 69 's rainy parade\",\"4846\":\"mucrest technologies pvt ltd interview experience sde intern\",\"3561\":\"stack overflow podcast episode 22\",\"224\":\"awesome hope enjoy learn lots\",\"793\":\"gaurav sen debates pradeep poonia education 46 minutes\",\"3531\":\"stack overflow podcast episode 70\",\"928\":\"using pylance write better python inside visual studio code\",\"3572\":\"25 years java past present\",\"3266\":\"rookie srm 2 editorial\",\"3844\":\"print possible ways split array k subsets\",\"3521\":\"stack overflow podcast episode 83\",\"3582\":\"digital identity protects software\",\"3349\":\"stack overflow podcast episode 06\",\"3275\":\"big tech getting cozy computer science departments\",\"3279\":\"stack exchange podcast episode 48 sponsored powdermilk biscuits\",\"3481\":\"stack exchange podcast episode 58 pack 'em like bees\",\"3378\":\"podcast 109 nick hates making people cry ...\",\"3403\":\"stack exchange podcast episode 10 w\\/ steve karantza\",\"3260\":\"trend spotting consulting endurance sports barry matthews\",\"3409\":\"stack exchange podcast episode 52 n't need headphones\",\"1242\":\"nnfs update 2 content done\"},\"c1body\":{\"3520\":\"Stack Overflow Podcast - Episode #31 by The Stack Overflow Podcast\",\"3508\":\"Stack Exchange Podcast - Episode #45 - Keeping it Sharp (C#) by The Stack Overflow Podcast\",\"1850\":\"PyQt graphical user interface (GUI) applications have a main thread of execution that runs the event loop and GUI. If you launch a long-running task in this thread, then your GUI will freeze until the task terminates. During that time, the user won\\u2019t be able to interact with the application, resulting in a bad user experience. Luckily, PyQt\\u2019s QThread class allows you to work around this issue. In this tutorial, you\\u2019ll learn how to: Use PyQt\\u2019s QThread to prevent freezing GUIs Create reusable threads with QThreadPool and QRunnable Manage interthread communication using signals and slots Safely use shared resources with PyQt\\u2019s locks Use best practices for developing GUI applications with PyQt\\u2019s thread support For a better understanding of how to use PyQt\\u2019s threads, some previous knowledge of GUI programming with PyQt and Python multithreaded programming would be helpful. Free Bonus: Get a sample chapter from Python Basics: A Practical Introduction to Python 3 to see how you can go from beginner to intermediate in Python with a complete curriculum, up-to-date for Python 3.8. Freezing a GUI With Long-Running Tasks Long-running tasks occupying the main thread of a GUI application and causing the application to freeze is a common issue in GUI programming that almost always results in a bad user experience. For example, consider the following GUI application: Say you need the Counting label to reflect the total number of clicks on the Click me! button. Clicking the Long-Running Task! button will launch a task that takes a lot of time to finish. Your long-running task could be a file download, a query to a large database, or any other resource-intensive operation. Here\\u2019s a first approach to coding this application using PyQt and a single thread of execution: import sys from time import sleep from PyQt5.QtCore import Qt from PyQt5.QtWidgets import ( QApplication, QLabel, QMainWindow, QPushButton, QVBoxLayout, QWidget, ) class Window(QMainWindow): def __init__(self, parent=None): super().__init__(parent) self.clicksCount = 0 self.setupUi() def setupUi(self): self.setWindowTitle(\\\"Freezing GUI\\\") self.resize(300, 150) self.centralWidget = QWidget() self.setCentralWidget(self.centralWidget) # Create and connect widgets self.clicksLabel = QLabel(\\\"Counting: 0 clicks\\\", self) self.clicksLabel.setAlignment(Qt.AlignHCenter | Qt.AlignVCenter) self.stepLabel = QLabel(\\\"Long-Running Step: 0\\\") self.stepLabel.setAlignment(Qt.AlignHCenter | Qt.AlignVCenter) self.countBtn = QPushButton(\\\"Click me!\\\", self) self.countBtn.clicked.connect(self.countClicks) self.longRunningBtn = QPushButton(\\\"Long-Running Task!\\\", self) self.longRunningBtn.clicked.connect(self.runLongTask) # Set the layout layout = QVBoxLayout() layout.addWidget(self.clicksLabel) layout.addWidget(self.countBtn) layout.addStretch() layout.addWidget(self.stepLabel) layout.addWidget(self.longRunningBtn) self.centralWidget.setLayout(layout) def countClicks(self): self.clicksCount += 1 self.clicksLabel.setText(f\\\"Counting: {self.clicksCount} clicks\\\") def reportProgress(self, n): self.stepLabel.setText(f\\\"Long-Running Step: {n}\\\") def runLongTask(self): \\\"\\\"\\\"Long-running task in 5 steps.\\\"\\\"\\\" for i in range(5): sleep(1) self.reportProgress(i + 1) app = QApplication(sys.argv) win = Window() win.show() sys.exit(app.exec()) In this Freezing GUI application, .setupUi() creates all the required graphical components for the GUI. A click on the Click me! button calls .countClicks(), which makes the text of the Counting label reflect the number of button clicks. Note: PyQt was first developed to target Python 2, which has an exec keyword. To avoid a name conflict on those earlier versions of PyQt, an underscore was added to the end of .exec_(). Even though PyQt5 targets only Python 3, which doesn\\u2019t have an exec keyword, the library provides two methods to start an application\\u2019s event loop: .exec_() .exec() Both variations of the method work the same, so you can use either one in your applications. Clicking the Long-Running Task! button calls .runLongTask(), which performs a task that takes 5 seconds to complete. This is a hypothetical task that you coded using time.sleep(secs), which suspends the execution of the calling thread for the given number of seconds, secs. In .runLongTask(), you also call .reportProgress() to make the Long-Running Step label reflect the progress of the operation. Does this application work as you intend? Run the application and check out its behavior: When you click the Click me! button, the label shows the number of clicks. However, if you click the Long-Running Task! button, then the application becomes frozen and unresponsive. The buttons no longer respond to clicks and the labels don\\u2019t reflect the application\\u2019s state. After five seconds, the application\\u2019s GUI gets updated again. The Counting label shows ten clicks, reflecting five clicks that occurred while the GUI was frozen. The Long-Running Step label doesn\\u2019t reflect the progress of your long-running operation. It jumps from zero to five without showing the intermediate steps. Note: Even though your application\\u2019s GUI freezes during the long-running task, the application still registers events such as clicks and keystrokes. It\\u2019s just unable to process them until the main thread gets released. The application\\u2019s GUI freezes as a result of a blocked main thread. The main thread is busy processing a long-running task and doesn\\u2019t immediately respond to the user\\u2019s actions. This is an annoying behavior because the user doesn\\u2019t know for sure if the application is working correctly or if it\\u2019s crashed. Fortunately, there are some techniques you can use to work around this issue. A commonly used solution is to run your long-running task outside of the application\\u2019s main thread using a worker thread. In the sections below, you\\u2019ll learn how to use PyQt\\u2019s built-in thread support to solve the issue of unresponsive or frozen GUIs and provide the best possible user experience in your applications. Multithreading: The Basics Sometimes you can divide your programs into several smaller subprograms, or tasks, that you can run in several threads. This might make your programs faster, or it might help you improve the user experience by preventing your programs from freezing while executing long-running tasks. Read the full article at https:\\/\\/realpython.com\\/python-pyqt-qthread\\/ \\u00bb [ Improve Your Python With \\ud83d\\udc0d Python Tricks \\ud83d\\udc8c \\u2013 Get a short & sweet Python Trick delivered to your inbox every couple of days.\",\"931\":\"Have you wanted to get started with testing in Python? Maybe you feel a little nervous about diving in deeper than just confirming your code runs. What are the tools needed and what would be the next steps to level up your Python testing? This week on the show we have Anthony Shaw to discuss his article on this subject. Anthony is a member of the Real Python team and has written several articles for the site. We discuss getting started with built-in Python features for testing and the advantages of a tool like pytest. Anthony talks about his plug-ins for pytest, and we touch on the next level of testing involving continuous integration. Anthony recently finished a talk for PyCon 2020 Online, titled \\u201cWhy is Python Slow?\\u201d He had the idea for the talk while he was working on his upcoming book about the CPython source code. I also want to give an update on last weeks episode with Kyle Stratis, where we discussed Kyle being let go from his job due to the pandemic. Here\\u2019s some good news, Kyle will be joining a Boston startup called Vizit, as a senior data engineer. Congratulations Kyle! Course Spotlight: The Python print() Function: Go Beyond the Basics This course will get you up to speed with using Python print() effectively. Prepare for a deep dive as you go through the sections. You may be surprised how much print() has to offer! Topics: 00:00:00 \\u2013 Introduction 00:01:46 \\u2013 PyCon 2020 Online Talk - Why is Python slow? 00:04:05 \\u2013 CPython Internals Book 00:07:08 \\u2013 Attending Conferences 00:09:01 \\u2013 Getting Started with Testing in Python 00:12:32 \\u2013 Unittest 00:17:16 \\u2013 What does a tool like pytest add? 00:19:53 \\u2013 pytest plugins 00:21:03 \\u2013 Anthony\\u2019s pytest plugins 00:21:58 \\u2013 What does coverage mean? 00:25:23 \\u2013 Test runners 00:27:12 \\u2013 Testing environments with Tox 00:30:50 \\u2013 Real Python Video Course Spotlight 00:31:49 \\u2013 More on continuous integration (CI) 00:37:21 \\u2013 Recent changes to GitHub 00:38:21 \\u2013 PSF to move issue tracker to GitHub 00:41:01 \\u2013 DRY (Don\\u2019t Repeat Yourself) 00:43:46 \\u2013 Benefits of linters and code formatting 00:48:00 \\u2013 What is a little known part of Python? 00:52:16 \\u2013 What are you excited about in the world of Python? 00:56:06 \\u2013 What is something you thought you knew about Python, but were wrong about it? 00:57:27 \\u2013 Goodbye and thanks Show links: Why is Python slow?: PyCon 2020 Online Talk Your Guide to the CPython Source Code: Real Python article TalkPython Podcast Episode #265: Why is Python slow? Getting Started With Testing in Python: Real Python article pytest: helps you write better programs pytest-azurepipelines: Plugin for pytest that makes it simple to work with Azure Pipelines tox automation project: Command line driven CI frontend GitHub Actions: Automate your workflow from idea to production Continuous Integration With Python: An Introduction: Real Python article Brian K Okken - Multiply your Testing Effectiveness with Parameterized Testing: PyCon 2020 Online Talk Python Testing with pytest: Brian Okken - The Pragmatic Bookshelf Test & Code: Python Testing for Software Engineering: Podcast Python\\u2019s migration to GitHub Refactoring Python Applications for Simplicity: Real Python article Black: The uncompromising code formatter Wily: A command-line application for tracking, reporting on complexity of Python tests and applications PEP 554 \\u2013 Multiple Interpreters in the Stdlib Python Insider: Python core development news and information Support the podcast & join our community of Pythonistas\",\"3410\":\"Brian shares a delightful tale of the time one of his co-workers accidentally deleted the company's database, and how they recovered it through binary transaction logs. No better way to learn than a trial by fire. Juan explains why typing is taking over frontend development. First off, we discovered unit tests, and learned types can take care of it. Paul dreams of a day when object-oriented PHP runs in the browsers. Sara has had nightmares about similar scenarios. Splice has lots of interesting products for musicians and technologists and they're hiring. Brian helped to build the amazing Brooklyn JS, so if you're in the NYC area, be sure to check it out. Juan helps to run an amazing community of developers in Colombia, as well as the Bogota JS meetup. Dylan TallChief made a drum machine in Excel and it's something special.\",\"4853\":\"Hi everyone! I am sharing my off-campus interview process experience for Morgan Stanley. The profile I applied for, was the Spring Technology Analyst Intern, which\\u2026 Read More The post Morgan Stanley Interview Experience for Spring Internship | Off-Campus 2021 appeared first on GeeksforGeeks.\",\"3512\":\"Stack Exchange Podcast - Episode #34 - Kyle Brandt and Nick Craver by The Stack Overflow Podcast\",\"3536\":\"You can find Kelsey on Twitter here. His Github is here. His personal journey with Kubernetes is detailed in a nice piece here. Kelsey has an interesting role at Google. He sits at the director level but is an independent contributor with no direct reports. Instead he works to help galvanize interest in particular tools and topics, driving adoption at a broad scale.\",\"215\":\"Thanks for the early xmas drop @Sentdex and @daniel_kukiela ! The long awaited hardcover version of Neural Networks from Scratch in Python is here! Get your copy at nnfs.io you can thank me later #NeuralNetworks\",\"3300\":\"Sham Kakade is a professor of computer science, statistics, and data science at the University of Washington. A group from his university, along with volunteers from Microsoft, is creating a contact tracing app called Covid Safe. Sham explains how technology could make it possible for democratic nations to fight the pandemic while preserving civil liberties. You can read more about Sham\\u2019s app, Covid Safe, here. The app isn\\u2019t live in the iOS or Android app store yet, but you can download an Android demo here and help the team work out the bugs. You can also use that link to find their GitHub community. You can read Paul\\u2019s take on the contact tracing spec released by Apple and Google here.\",\"3549\":\"Stack Overflow Podcast - Episode #07 by The Stack Overflow Podcast\",\"3533\":\"Stack Overflow Podcast - Episode #51 by The Stack Overflow Podcast\",\"3477\":\"Stack Exchange Podcast - Episode #21 w\\/ David Fullerton by The Stack Overflow Podcast\",\"3542\":\"Stack Overflow Podcast - Episode #52 by The Stack Overflow Podcast\",\"890\":\"Nobody: Sentdex: CyberPython 2077!! invidious.snopyta.org\\/watch?v=dUU6ZsJl\\u2026\",\"3460\":\"Stack Exchange Podcast - Episode #05 w\\/ Josh Heyer by The Stack Overflow Podcast\",\"1828\":\"Jason Lengstorf interviews Jordan Jackson. Jordan Jackson started learning to code using freeCodeCamp.org while he was in the United States Air Force. Now he is a software engineer at Twitter. Jason Lengstorf works at Netlify and hosts Learn With Jason. He is trying his very best to follow his own advice. Follow him on Twitter here: https:\\/\\/twitter.com\\/jlengstorf -- Learn to code for free and get a developer job: https:\\/\\/www.freecodecamp.org Read hundreds of articles on programming: https:\\/\\/freecodecamp.org\\/news And subscribe for new videos on technology every day: https:\\/\\/youtube.com\\/subscription_center?add_user=freecodecamp\",\"3301\":\"Stack Exchange Podcast - Episode #62 - Delete This Whole Episode by The Stack Overflow Podcast\",\"3354\":\"Stack Overflow Podcast - Episode #24 by The Stack Overflow Podcast\",\"3383\":\"Stack Overflow Podcast - Episode #78 by The Stack Overflow Podcast\",\"567\":\"Big update on the system design course! We now have a new chapter on \\\"Machine coding of a cache\\\". This will deal with the low level design of a cache. We deep dive into engineering requirements like ordering and asynchronous processing, all the way from design to code. 3 more LLD chapters are on the way. Do let me know your suggestions for the future chapters in the course! Website Link: https:\\/\\/get.interviewready.io\\/ You can use the 'earlybird' coupon code for a 20% discount. More details on the course: Course Overview: https:\\/\\/youtu.be\\/beUzxZK6aKw LLD overview: https:\\/\\/youtu.be\\/mIcCBrZsj2E System Design Playlist: https:\\/\\/www.youtube.com\\/playlist?list=PLMCXHnjXnTnvo6alSjVkgxV-VH6EPyvoX You can follow me on: LinkedIn: https:\\/\\/www.linkedin.com\\/in\\/gaurav-sen-56b6a941\\/ Instagram: https:\\/\\/www.instagram.com\\/applepie404\\/ Quora: https:\\/\\/www.quora.com\\/profile\\/Gaurav-Sen-6 Twitter: https:\\/\\/twitter.com\\/gkcs_\",\"953\":\"Have you been using Python for a while, but want to be more effective with your code? This week we have Brett Slatkin on the show. We talk about the 2nd edition of his book Effective Python. Brett talks about the revisions he made for the book, and updating it for the newest versions of Python 3. He answers questions about who is the intended developer for the book. Brett also discusses working on Google App Engine, and what it\\u2019s like to develop and maintain Python applications at Google Scale. Brett mentions a brief anecdote about working with Guido van Rossum, while they both worked at Google. He also provides advice about maintaining a large and aging Python code base. Topics: 00:00:00 \\u2013 Introduction 00:01:13 \\u2013 Brett Slatkin - Programming background 00:02:00 \\u2013 Python background and start at Google 00:03:22 \\u2013 Working on Google infrastructure 00:05:36 \\u2013 Is Python a good tool for infrastructure? 00:07:28 \\u2013 PubSubHubbub 00:09:06 \\u2013 Lobste.rs 00:10:03 \\u2013 Starting to write Effective Python 00:11:12 \\u2013 Who is the intended developer for the book? 00:12:45 \\u2013 About the Effective series book structure 00:14:39 \\u2013 What were the sections you were excited to rewrite? 00:18:41 \\u2013 Moving away from Metaclasses in modern Python 00:20:43 \\u2013 Python 3.8 in the book 00:21:03 \\u2013 Using the walrus operator to build a switch\\/case statement 00:23:22 \\u2013 Why did you feel Python made you a more productive developer? 00:28:02 \\u2013 Working with Guido van Rossum 00:31:15 \\u2013 What\\u2019s it like to work on the same code base for years? 00:33:35 \\u2013 What is code rot? 00:35:10 \\u2013 What would you put in a book about refactoring? 00:37:06 \\u2013 What\\u2019s something you thought you knew about Python, but were wrong? 00:38:42 \\u2013 What are you excited about in the world of Python? 00:40:24 \\u2013 Do you listen to music when you code? 00:42:00 \\u2013 End Credits Show links: Brett\\u2019s Blog - One Big Fluke Real Python Community Interview with Brett Slatkin PubSubHubbub - An open, simple, web-scale and decentralized pubsub protocol Google App Engine Alex Martelli - Wikipedia Python in a Nutshell by Alex Martelli Effective Python - 2nd Edition \\u201cThe Best Python Books\\u201d - RP Review of \\u201cEffective Python\\u201d What is the appeal of dynamically-typed languages? Python Type Checking - Real Python Article Item 10: Prevent Repetition with Assignment Expressions Lobste.rs - Computing-focused community Scott Myers - Effective Effective Books - Blog Post Bret Victor - \\u201cThe Future of Programming\\u201d Bret Victor - References for \\u201cThe Future of Programming\\u201d PyCon 2016: \\u201cRefactoring Python: Why and how to restructure your code\\u201d What are you excited about in the world of Python? Brett\\u2019s Pick: PEP 554 \\u2013 Multiple Interpreters in the Stdlib Support the podcast & join our community of Pythonistas\",\"3568\":\"Stack Exchange Podcast - Episode #32 - Rep-Ocalypse by The Stack Overflow Podcast\",\"3493\":\"Stack Exchange Podcast - Episode #03 w\\/ Scott Hanselman by The Stack Overflow Podcast\",\"596\":\"Book a mock interview or coaching session with a Microsoft engineer as early as tomorrow on interviewing.io! Sign up here: https:\\/\\/interviewing.io\\/signup?utm_source=youtube.com&utm_medium=referral&utm_campaign=video_link Check out the feedback by the LinkedIn interviewer and the full transcript on https:\\/\\/interviewing.io\\/recordings\\/Python-Microsoft-11\\/ Disclaimer: All interviews are shared with explicit permission from the interviewer and the interviewee, and all interviews are anonymous. interviewing.io has the sole right to distribute this content.\",\"3840\":\"Given an integer N which denotes the number of slots, and an array arr[] consisting of K integers in the range [1, N] repreand. Each\\u2026 Read More The post Minimum time required to fill given N slots appeared first on GeeksforGeeks.\",\"3592\":\"In this episode, we chat with Li Ouyang, who made the transition from derivatives trader on Wall Street to programmer at a crypto startup. She talks about her education at The Flatiron School, her favorite programming languages, and the advice she gives family members who want to put their savings entirely into Bitcoin. There is a lot to think about when designing trading algorithms, especially in the world of cryptocurrency, where prices can be extremely volatile and limited liquidity means a single trader moving big volume can have a hefty influence on price. Bitcoin is at a record breaking price these days, but investing in it is not for the faint of heart. To learn more, we chat with Li, who is a software engineer at Coinbase. You can find her on Twitter here. If you\\u2019re interested in learning more about Bitcoin, we would have to recommend Bitcoin Developer. After all, they were kind enough to recommend our Bitcoin Stack Exchange as a key resource. TRANSCRIPT The post Podcast 297: All Time Highs: Talking crypto with Li Ouyang appeared first on Stack Overflow Blog.\",\"608\":\"Book a mock interview or coaching session with a Snap engineer as early as tomorrow on interviewing.io! Sign up here: https:\\/\\/interviewing.io\\/signup?utm_source=youtube.com&utm_medium=referral&utm_campaign=video_link Check out the feedback by the Square interviewer and the full transcript on https:\\/\\/interviewing.io\\/recordings\\/C++-Snap-3\\/ Disclaimer: All interviews are shared with explicit permission from the interviewer and the interviewee, and all interviews are anonymous. interviewing.io has the sole right to distribute this content.\",\"1810\":\"HashedIn came to our college in the mid of December. There were coding assessment, two technical rounds, and 1 HR round. Coding round: There were\\u2026 Read More The post HashedIn Interview Experience | On-Campus 2020 appeared first on GeeksforGeeks.\",\"3421\":\"Stack Overflow Podcast - Episode #33 by The Stack Overflow Podcast\",\"3340\":\"Has there ever been a tech startup that raised shy of $3 billion, inflation-adjusted for any era, while barely making a ripple with actual customers? Magic Leap just pocketed a fresh $350 million in funding, on the condition that its co-founder and CEO Rony Abovitz, agree to step aside and allow new leadership to take the reins. We chat AR\\/VR, dot-com flameouts, and why crazy tech is worth believing in. Sara hips us to the 11th anniversary of Node.js and the 25th anniversary of Javascript. The latter has the distinction of being the only language to appear in the top 10 for most loved and most hated languages on our 2020 developer survey. Paul and Sara reminisce about Javascript callbacks. Hard work builds character, don't ya know. This episode was recorded before the recent protests, and so does not contain any discussion of current events in the United States. We will touch on it in future episodes, but you can find Stack Overflow's statement on it here.\",\"3478\":\"Stack Exchange Podcast - Episode #11 w\\/ Rory Blyth by The Stack Overflow Podcast\",\"1835\":\"JUnit 5 is one of the most popular frameworks for testing Java applications. In this crash course, you will learn about Junit 5 and how to use it to write unit tests for your Java programs. \\u270f\\ufe0f Course created by Programming Techie. Check out their channel: https:\\/\\/www.youtube.com\\/channel\\/UCD20RZV_WHQImisCW2QZwDw \\ud83d\\udcbb Source Code for Starter Project: https:\\/\\/github.com\\/SaiUpadhyayula\\/contact-manager-starter \\ud83d\\udcbb Source Code for Completed Project: https:\\/\\/github.com\\/SaiUpadhyayula\\/contact-manager \\ud83d\\udd17 Written Tutorial: https:\\/\\/programmingtechie.com\\/2020\\/12\\/26\\/junit-5-complete-tutorial\\/ \\ud83d\\udd17 Maven Tutorial: https:\\/\\/www.youtube.com\\/watch?v=JhSBS2OpGdU \\u2b50\\ufe0f Course Contents \\u2b50\\ufe0f \\u2328\\ufe0f (00:00) Introduction \\u2328\\ufe0f (00:28) What is JUnit? \\u2328\\ufe0f (01:09) JUnit Architecture \\u2328\\ufe0f (02:19) First JUnit Test \\u2328\\ufe0f (08:26) Testing Exceptions using assertThrows() \\u2328\\ufe0f (10:10) Understanding JUnit Test Lifecycle \\u2328\\ufe0f (13:42) Conditional Executions \\u2328\\ufe0f (15:11) Assumptions \\u2328\\ufe0f (16:58) Repeated Tests \\u2328\\ufe0f (18:48) Parameterized Tests \\u2328\\ufe0f (23:47) Nested Tests \\u2328\\ufe0f (25:22) Disabled Tests -- Learn to code for free and get a developer job: https:\\/\\/www.freecodecamp.org Read hundreds of articles on programming: https:\\/\\/freecodecamp.org\\/news And subscribe for new videos on technology every day: https:\\/\\/youtube.com\\/subscription_center?add_user=freecodecamp\",\"3293\":\"Stack Overflow Podcast - Episode #40 by The Stack Overflow Podcast\",\"3294\":\"Stack Exchange Podcast - Episode #20 w\\/ John Siracusa by The Stack Overflow Podcast\",\"3487\":\"There is a nice breakdown of the Solarigate attack here, but the most important thing to know is that just seeing the words BusinessLayer.dll is enough to make our eyes glaze over and our defenses go down. One interesting second order effect of this intrusion is that it will be difficult to know when all malicious code and access has really been removed. It brought to mind the classic Turing Award Lecture, Reflections on Trusting Trust by Ken Thompson. If you're trying to entertain kids over the holidays, Ben will be messing around with Roblox, which lets you create your own mini-games and has several hooks to deeper programming capabilities. Our Lifeboat badge winner this week is Chinito, who answered the question of how you can: Set style using pure JavaScript\",\"3284\":\"On this week's edition of The Stack Overflow Podcast, we get a visit from Gitlab CEO Sid Sijbrandij. We also chat with UX Research Kristina Lustig about Stack Overflow's mentorship program experiment. As usual, the gang gets into other shenanigans.\",\"3599\":\"This week we chat with Jocelyn Harper, a senior software engineer at Paypal, about the journey from office manager at a construction company to java programmer at a major tech firm. Episode Notes Jocelyn hosts the Git Cute podcast, which you can find here. She\\u2019s working on a book about seniority in the software industry, which you can pre-order here. You can follow her on Twitter at javavvitch. Our lifeboat badge goes to LMc for explaining how one can: Count the Letter Frequency in a String with Python? Transcript The post Podcast 305: What does it mean to be a \\u201csenior\\u201d software engineer appeared first on Stack Overflow Blog.\",\"1821\":\"Pointers in C and C++ are often challenging to understand. In this course, they will be demystified, allowing you to use pointers more effectively in your code. The concepts you learn in this course apply to both C and C++. \\u270f\\ufe0f Course developed by Harsha and Animesh from MyCodeSchool. \\ud83d\\udd17 Read all about their amazing story here: https:\\/\\/www.freecodecamp.org\\/news\\/mycodeschool-youtube-channel-history\\/ \\ud83d\\udd17 Check out the MyCodeSchool channel: https:\\/\\/www.youtube.com\\/user\\/mycodeschool \\ud83d\\udd17 Check out the MyCodeSchool website: http:\\/\\/mycodeschool.com\\/ \\u2b50\\ufe0f Course Contents \\u2b50\\ufe0f \\u2328\\ufe0f (0:00:00) Introduction to pointers in C\\/C++ \\u2328\\ufe0f (0:10:29) Working with pointers \\u2328\\ufe0f (0:22:05) Pointer types, pointer arithmetic, void pointers \\u2328\\ufe0f (0:33:01) Pointers to Pointers in C\\/C++ \\u2328\\ufe0f (0:42:21) Pointers as function arguments - call by reference \\u2328\\ufe0f (0:56:36) Pointers and arrays \\u2328\\ufe0f (1:05:18) Arrays as function arguments \\u2328\\ufe0f (1:18:10) Character arrays and pointers - part 1 \\u2328\\ufe0f (1:32:49) Character arrays and pointers - part 2 \\u2328\\ufe0f (1:42:49) Pointers and 2-D arrays \\u2328\\ufe0f (1:55:07) Pointers and multidimensional arrays \\u2328\\ufe0f (2:11:50) Pointers and dynamic memory - stack vs heap \\u2328\\ufe0f (2:29:14) Dynamic memory allocation in C - malloc calloc realloc free \\u2328\\ufe0f (2:36:48) Pointers as function returns in C\\/C++ \\u2328\\ufe0f (3:02:01) Function Pointers in C \\/ C++ \\u2328\\ufe0f (3:13:57) Function pointers and callbacks \\u2328\\ufe0f (3:29:16) Memory leak in C\\/C++ \\u2b50\\ufe0f Special thanks to our Champion supporters! \\u2b50\\ufe0f \\ud83c\\udfc6 Loc Do \\ud83c\\udfc6 Joseph C \\ud83c\\udfc6 DeezMaster -- Learn to code for free and get a developer job: https:\\/\\/www.freecodecamp.org Read hundreds of articles on programming: https:\\/\\/freecodecamp.org\\/news And subscribe for new videos on technology every day: https:\\/\\/youtube.com\\/subscription_center?add_user=freecodecamp\",\"1825\":\"Learn how to build an Instagram clone using React Native, Firebase Firestore, Firebase storage, Redux, and Expo. The app includes an authentication system, database, storage, and more. \\ud83d\\udcbb Code: https:\\/\\/github.com\\/SimCoderYoutube\\/InstagramClone \\u270f\\ufe0f Course from SimCoder. Check out their channel: https:\\/\\/www.youtube.com\\/channel\\/UCQ5xY26cw5Noh6poIE-VBog \\u2b50\\ufe0f Links \\u2b50\\ufe0f \\ud83d\\udd17 https:\\/\\/firebase.google.com\\/docs\\/auth\\/web\\/start \\ud83d\\udd17 https:\\/\\/reactjs.org\\/docs\\/getting-started.html \\ud83d\\udd17 https:\\/\\/expo.io\\/ \\ud83d\\udd17 Redux tutorial: https:\\/\\/youtu.be\\/CVpUuw9XSjY \\u2b50\\ufe0f Course Contents \\u2b50\\ufe0f \\u2328\\ufe0f (0:00:00) Introduction \\u2328\\ufe0f (0:02:28) Setting up React Native Expo \\u2328\\ufe0f (0:16:34) Auth System With Firebase and React Native \\u2328\\ufe0f (0:56:33) Save Data Using Firebase And Redux \\u2328\\ufe0f (1:29:05) Handling Navigation on React Native \\u2328\\ufe0f (1:49:43) Using Camera And Image Gallery With React Native \\u2328\\ufe0f (2:12:57) Saving An Image Post Using Firebase Firestore and Firebase storage \\u2328\\ufe0f (2:42:38) Displaying User Profile With Firebase Firestore \\u2328\\ufe0f (3:11:57) Search User By Similar Name with Firebase Firestore \\u2328\\ufe0f (3:36:00) Follow System Using Firestore And React Native \\u2328\\ufe0f (3:55:42) Post Feed System With Firebase and React Native \\u2328\\ufe0f (4:27:48) Logout Firebase Auth And Redux React Native \\u2328\\ufe0f (4:35:24) Adding User Comments To Posts W\\/ Firebase Firestore \\u2328\\ufe0f (5:14:00) Like System Using Firestore \\u2328\\ufe0f (5:47:25) Redesign Release \\u2b50\\ufe0f Special thanks to our Champion supporters! \\u2b50\\ufe0f \\ud83c\\udfc6 Loc Do \\ud83c\\udfc6 Joseph C \\ud83c\\udfc6 DeezMaster\",\"525\":\"Demonstrating how complex systems can arise from simple rules, random boolean networks also have some surprising properties... sometimes! Dr Alex Turner generates some. https:\\/\\/www.facebook.com\\/computerphile https:\\/\\/twitter.com\\/computer_phile This video was filmed and edited by Sean Riley. Computer Science at the University of Nottingham: https:\\/\\/bit.ly\\/nottscomputer Computerphile is a sister project to Brady Haran's Numberphile. More at http:\\/\\/www.bradyharan.com\",\"3598\":\"This week we chat with Geoff Schmidt, CEO and co-founder of Apollo GraphQL, about the need modern web companies and mobile apps have to stitch together multiple databases and cloud services in a way that is simple to query. He talks about the foundation of these ideas with a previous venture, Meteor and how to balance a vibrant open source community with a for-profit SaaS company. You can read about GraphQL here and Apollo here. Cassidy Williams, who curates our newsletter, wrote about her experience as an early adopter of the technology last summer. You can find more on Meteor here. Schmidt also helped create Monument, which he describes as \\u201can affordable live\\/work art event space in downtown San Francisco. The upstairs is 24 private bedrooms and studio spaces and the downstairs is a 200+ capacity person event venue and makerspace. Our goal is to connect creative people across different fields, and in particular build bridges between art and technology.\\u201d Our lifeboat of the week goes to sll for explaining why: There is an error in XML document (1, 41) TRANSCRIPT The post Podcast 293: Connecting apps, data, and the cloud with Apollo GraphQL CEO Geoff Schmidt appeared first on Stack Overflow Blog.\",\"5140\":\"How do you create a virtual conference that retains the interactivity of an in-person event? What are the tools needed for talk submissions, ticketing, and live hosting? Can you find those tools written in Python? This week on the show, we have several of the organizers of the PyCascades 2021 conference. They share the process of restructuring a Python conference to meet those challenges. Nina Zakharenko and Seb Vetter are co-chairs, and Ashia Zawaduk is the conference program chair. PyCascades will be held online from February 19th through 21st, with a day of virtual social events, one of live-streamed talks, and another of mentored sprints. We discuss ways to recreate the elusive feel of the \\u201challway\\u201d track virtually. They share advice about submitting a talk proposal and ways that you can volunteer for conferences. Tickets are available now. PyCascades is looking for additional sponsors. If you work for an organization that can help, get in contact with them. Course Spotlight: Speed Up Python With Concurrency Learn what concurrency means in Python and why you might want to use it. You\\u2019ll see a simple, non-concurrent approach and then look into why you\\u2019d want threading, asyncio, or multiprocessing. Topics: 00:00:00 \\u2013 Introduction 00:01:53 \\u2013 Introducing the organizers 00:03:27 \\u2013 Structure and vision for the Conference 00:06:50 \\u2013 Tools for a virtual conference 00:10:34 \\u2013 Creating a virtual hallway track 00:12:32 \\u2013 Testing the platform 00:14:33 \\u2013 How does a virtual event change the type of audience? 00:15:54 \\u2013 Opening up the range of available speakers and topics 00:19:35 \\u2013 Tips for finding success in submitting talk proposals 00:24:28 \\u2013 Sponsor: PyCharm 00:25:10 \\u2013 How can someone assist at this and other conferences? 00:26:40 \\u2013 Preparing first time speakers 00:28:29 \\u2013 How did each of you get involved? 00:36:13 \\u2013 Video Course Spotlight 00:37:18 \\u2013 Currently scheduled talks 00:43:01 \\u2013 Mentored Sprints for Diverse Beginners 00:49:37 \\u2013 User groups and meetups 00:52:23 \\u2013 PyCascades sponsors 00:57:02 \\u2013 What are you excited about in the world of Python? 01:02:39 \\u2013 Callout: Get Your Tickets and thanks Show Links: PyCascades 2021 PyCascades: The Team PyConline AU 2020 PyCon AU: YouTube Channel pretalx: From Call for Papers to schedule \\u2013 build your conference! pretalx: GitHub pretix: Event Ticketing Software pretix: GitHub venueless: Host Your Events Online venueless: GitHub Next Day Video Resources for Virtual Events: PSF The Ultimate Guide To Memorable Tech Talks \\u2014 Nina\\u2019s series of posts with lots of advice on giving excellent tech talks. Volunteer at PyCascades PyColorado 2019 PyCascades 2021: Schedule Mentored Sprints for Diverse Beginners at PyCon US 2020: readthedocs Episode 8: Docker + Python for Data Science and Machine Learning With Tania Allard PyLadies Puget Sound Programming Python (PuPPy): Meetup PyCascades: Sponsors Become Our Sponsor: PyCascades nnjaio: Nina\\u2019s Twitch Channel AlSweigart: Twitch Channel anthonywritescode: Anthony Sottile Twitch Channel crazy4pi314: Dr. Sarah Kaiser Twitch Channel TheLiveCoders: Twitch Channel MicrosoftDeveloper: Twitch Channel Architecture Patterns in Python: O\\u2019Reilly Episode 7: AsyncIO + Music, Origins of Black, and Managing Python Releases import asyncio: Learn Python\\u2019s AsyncIO #1 - The Async Ecosystem: YouTube Wagtail : The Powerful CMS for Modern Websites Support the podcast & join our community of Pythonistas\",\"926\":\"Have you wondered what are Python wheels? How are they used to package Python code? Does Python use pass by value or pass by reference? This week on the show, David Amos is here to help answer these questions, and he has brought another batch of PyCoder\\u2019s Weekly articles and projects. We talk about an article called \\u201cWhat are Python Wheels, and Why Should You Care.\\u201d David talks about a Real Python article about pass by reference in Python. We cover several other articles and projects from the Python community including: transcribing speech to text, 4 powerful features Python is still missing, 10 awesome pythonic one-liners, and even more options for packaging your Python code. Course Spotlight: Practical Recipes for Working With Files in Python In this course, you\\u2019ll learn how you can work with files in Python by using built-in modules to perform practical tasks that involve groups of files, like renaming them, moving them around, archiving them, and getting their metadata. Topics: 00:00:00 \\u2013 Introduction 00:01:25 \\u2013 4 Powerful Features Python Is Still Missing 00:14:41 \\u2013 What Are Python Wheels and Why Should You Care? 00:23:58 \\u2013 10 Awesome Pythonic One-Liners Explained 00:38:11 \\u2013 Video Course Spotlight 00:39:14 \\u2013 How to Transcribe Speech Recordings Into Text With Python 00:43:34 \\u2013 Pass by Reference in Python: Background and Best Practices 00:49:54 \\u2013 Options for Packaging Your Python Code: Wheels, Conda, Docker, and More 00:55:53 \\u2013 PyOxidizer: A Modern Python Application Packaging and Distribution Tool 01:00:13 \\u2013 Python and PDF: A Review of Existing Tools 01:04:01 \\u2013 Thanks and Goodbye Show Links: 4 Powerful Features Python Is Still Missing \\u2013 Python doesn\\u2019t have true constants, nor does it implement features like tail recursion optimization that many compiled languages employ. Find out what other features Python is \\u201cmissing\\u201d when compared to other languages, and why the core developers haven\\u2019t added these features to the language. What Are Python Wheels and Why Should You Care? \\u2013 In this tutorial, you\\u2019ll learn what Python wheels are and why you should care as both a developer and end user of Python packages. You\\u2019ll see how the wheel format has gained momentum over the last decade and how it has made the package installation process faster and more stable. 10 Awesome Pythonic One-Liners Explained \\u2013 Some things in Python are just better on one line. How to Transcribe Speech Recordings Into Text With Python \\u2013 Learn to transcribe speech in recordings like MP3s into text with Python and AssemblyAI\\u2019s API Pass by Reference in Python: Background and Best Practices \\u2013 In this tutorial, you\\u2019ll explore the concept of passing by reference and learn how it relates to Python\\u2019s own system for handling function arguments. You\\u2019ll look at several use cases for passing by reference and learn some best practices for implementing pass-by-reference constructs in Python. Options for Packaging Your Python Code: Wheels, Conda, Docker, and More \\u2013 There\\u2019s a lot of ways to package your Python code. Find out which one is right for you. PyOxidizer: A Modern Python Application Packaging and Distribution Tool Python and PDF: A Review of Existing Tools \\u2013 The ultimate list of PDF tools in Python. Additional Links: Cool New Features in Python 3.8: More Precise Types - Real Python article Python 101 - Chapter 39 \\u2013 Python wheels Language Design Is Not Just Solving Puzzles: Guido Van Rossum How to Publish an Open-Source Python Package to PyPI - Real Python article AssemblyAI: Speech-to-Text API Support the podcast & join our community of Pythonistas\",\"3273\":\"Stack Exchange Podcast - Episode #44 - This Should Have Been #43 by The Stack Overflow Podcast\",\"3894\":\"What\\u2019s in store for 2021? Wipro recently surveyed and captured insights from industry leaders about the lasting impacts of 2020, and what we can expect looking ahead. What they shared was inspiring, surprising, and thought-provoking. Read the piece for revealing quotes on: Leadership & Vision Science & Technology Work Culture and Diversity Employee Health and Wellness Remote Team Dynamics Open Talent Platforms Themes of agility and resilience carried through many of the predictions, as well the continuing ripples affects of changes to how we work and workplace culture. Hear from Topcoder CEO Michael Morris, Chief Technology Officer Dave Messinger, recent Uprisor podcast guests John Winsor, of Open Assembly, Steve Rader, Deputy Director for the Center of Excellence for Collaborative Innovation at NASA, and many others. A few excerpts: Michael Morris \\u2022 Topcoder CEO \\u201cHow you choose to act, how you choose to set-up your workforce strategy so that you are dynamic in your very fabric is a crucial step so many organizations will think, plan, and act on in 2021.\\u201d Clinton Bonner \\u2022 VP of Marketing, Topcoder \\u201cForget the \\u2018new normal\\u2019, it\\u2019s just what\\u2019s next.\\u201d Eleanor Matthews \\u2022 Director, Re-source \\u201cThe future of work in 2021 will be hybrid \\u2014 humans and digital workers, in-office and remote, from inside and outside the enterprise.\\u201d 2020 forced us all to be more resilient and adaptive. Now, we\\u2019re looking forward to seeing how these new attitudes will positively impact what we create in 2021. Read the piece here. Be Prepared ACE THESE 5 QUESTIONS YOU\\u2019LL HAVE TO ANSWER ON CROWDSOURCING download the paper The post Wipro\\u2019s 21 Predictions for 2021 appeared first on Topcoder.\",\"601\":\"Book a mock interview or coaching session with an Amazon engineer as early as tomorrow on interviewing.io! Sign up here: https:\\/\\/interviewing.io\\/signup?utm_source=youtube.com&utm_medium=referral&utm_campaign=video_link Check out the feedback by the Amazon interviewer and the full transcript on https:\\/\\/interviewing.io\\/recordings\\/Python-Amazon-7\\/ Disclaimer: All interviews are shared with explicit permission from the interviewer and the interviewee, and all interviews are anonymous. interviewing.io has the sole right to distribute this content.\",\"3384\":\"This week, Nick Craver wasn't available. So we decided to Stump Alex Miller. Will he win a fantastic prize?\",\"1859\":\"The Python defaultdict type behaves almost exactly like a regular Python dictionary, but if you try to access or modify a missing key, then defaultdict will automatically create the key and generate a default value for it. This makes defaultdict a valuable option for handling missing keys in dictionaries. In this course, you\\u2019ll learn: How to use the Python defaultdict type for handling missing keys in a dictionary When and why to use a Python defaultdict rather than a regular dict How to use a defaultdict for grouping, counting, and accumulating operations [ Improve Your Python With \\ud83d\\udc0d Python Tricks \\ud83d\\udc8c \\u2013 Get a short & sweet Python Trick delivered to your inbox every couple of days.\",\"3501\":\"When it comes to hardware that cranks, Paul is a fan of Micro Center's in-house brand - PowerSpec. This week we chew through a great post from Jon Chan about how Stack Overflow hires developers. Sara recalls flunking her first few code screenings while applying for jobs. The hard lesson she learned? Sometimes, it pays to skip the collaboration and just show off. Ben wishes that he had known about real-time tests back when he was hiring bloggers. Last but not least, this week's lifeboat goes to Yigit, who answered the following question: \\\"In Android Rooms persistence library, how would I write the following SQL statement: SELECT * FROM table WHERE field LIKE %:value% As a @Query? This syntax is invalid, and I can't find anything about it in the docs.\\\" Thanks Yigit for sharing your knowledge and helping the Stack Overflow community to grow and thrive.\",\"1848\":\"Ever wonder how Python handles your data behind the scenes? How are your variables stored in memory? When do they get deleted? In this course, we\\u2019re going to do a deep dive into the internals of Python to understand how it handles memory management. By the end of this course, you\\u2019ll: Learn more about low-level computing, specifically as relates to memory Understand how Python abstracts lower-level operations Learn about Python\\u2019s internal memory management algorithms [ Improve Your Python With \\ud83d\\udc0d Python Tricks \\ud83d\\udc8c \\u2013 Get a short & sweet Python Trick delivered to your inbox every couple of days.\",\"3373\":\"Saron explains how she went from working in the marketing department of a startup to learning code, creating a supportive community for novice developers, and founding two podcasts about the art and science of learning to program. You can read more about the Dev acquisition and what the dynamic duo have planned here. Sara and Paul spend some time bantering with Saron on that classic developer debate: why learn computer science? Besides the ego boost and the desire to avoid imposter syndrome, how much of a four-year-degree is actually useful when you're a new graduate trying to land your first job? Later on, we dig into the debate over toxic positivity. During these challenging times, it can be addictive to watch others flaunt their hustle and hard work on social media. But there is a downside to tuning out the failures and negative emotions we all live with. You can read more about it here. Ever wondered about the difference between a subview and a superview? Find out more with this week's lifeboat badge.\",\"933\":\"Python 3.9 has arrived! This week on the show, former guest and Real Python author Geir Arne Hjelle returns to talk about his recent article, \\u201cPython 3.9: Cool New Features for You to Try\\u201d. Also joining the conversation is Real Python video course instructor and author Christopher Trudeau. Christopher has created a video course, which was released this week also, based on Geir Arne\\u2019s article. We talk about time zones, merging dictionaries, the new parser, type hints, and more. Geir Arne and Christopher not only cover the new features, but they also offer advice about ways you might incorporate them into your code. We discuss what you should think about before updating your code. Course Spotlight: Cool New Features in Python 3.9 In this course, you\\u2019ll explore some of the coolest and most useful features in the newly released Python 3.9. You\\u2019ll learn how Python 3.9 makes it easier to work with time zones, dictionaries, decorators, and several other techniques that will make your code cleaner and more efficient. Topics: 00:00:00 \\u2013 Introduction 00:02:02 \\u2013 Proper Time Zone support 00:05:38 \\u2013 What to do if your OS does not have tzdata? 00:07:11 \\u2013 How do you add time zone info to your Python code? 00:08:24 \\u2013 Historic changes to time zones 00:10:48 \\u2013 New operators for updating dictionaries 00:15:44 \\u2013 Geir Arne\\u2019s PyCon 2020 decorators tutorial 00:18:02 \\u2013 Changes to decorator syntax 00:24:08 \\u2013 Annotated type hints 00:32:36 \\u2013 Video Course Spotlight 00:33:26 \\u2013 The PEG parser 00:37:51 \\u2013 Potential for new enhancements in upcoming releases 00:42:40 \\u2013 String methods to remove prefixes and suffixes 00:44:22 \\u2013 Type hint lists and dictionaries directly 00:47:29 \\u2013 Topological Sort 00:52:03 \\u2013 Greatest Common Divisor (GCD) and Least Common Multiple (LCM) 00:53:50 \\u2013 New HTTP status codes 00:58:29 \\u2013 Should you upgrade? 01:07:58 \\u2013 Potential issue with Python 3.10 versioning 01:10:18 \\u2013 What are you excited about in the world of Python? 01:12:52 \\u2013 What do you want to learn next? 01:14:08 \\u2013 Thanks and goodbyes Show Links: Python 3.9: Cool New Features for You to Try: Real Python article Cool New Features in Python 3.9: Real Python video course dateutil - Powerful extensions to datetime Paul Ganssle: Blog IANA - Internet Assigned Numbers Authority: Time Zone Database Dictionaries in Python: Real Python article PEP 584 \\u2013 Add Union Operators To dict: python.org Primer on Python Decorators: Real Python article PEP 614 \\u2013 Relaxing Grammar Restrictions On Decorators: python.org Introduction to Decorators: Power Up Your Python Code - PyCon 2020 Online Tutorial Python Type Checking (Guide) - Annotations:Real Python article PEP 484 \\u2013 Type Hints: python.org PEP 593 \\u2013 Flexible function and variable annotations: python.org PEP 617 \\u2013 New PEG parser for CPython: python.org PEG Parsing Series Overview: Guido van Rossum PEP 622 \\u2013 Structural Pattern Matching: python.org PEP 616 \\u2013 String methods to remove prefixes and suffixes: python.org PEP 585 \\u2013 Type Hinting Generics In Standard Collections: python.org Topological sorting: Wikipedia article graphlib \\u2014 Functionality to operate with graph-like structures: docs.python.org Greatest common divisor: Wikipedia article Least common multiple: Wikipedia article Hypertext Transfer Protocol (HTTP) Status Code Registry Hyper Text Coffee Pot Control Protocol (HTCPCP\\/1.0) PEP 602 \\u2013 Annual Release Cycle for Python: \\u0141ukasz Langa - python.org Porting to Python 3.9: docs.python.org CPython Internals: Your Guide to the Python3 Interpreter Panel: A high-level app and dashboarding solution for Python PyQt: GUI Library Pandas Python and PyQt: Building a GUI Desktop Calculator - Real Python article GIS in Python GeoPandas Support the podcast & join our community of Pythonistas\",\"1849\":\"Once you understand the basics of Python, familiarizing yourself with its most popular packages will not only boost your mastery over the language but also rapidly increase your versatility. In this tutorial, you\\u2019ll learn the amazing capabilities of the Natural Language Toolkit (NLTK) for processing and analyzing text, from basic functions to sentiment analysis powered by machine learning! Sentiment analysis can help you determine the ratio of positive to negative engagements about a specific topic. You can analyze bodies of text, such as comments, tweets, and product reviews, to obtain insights from your audience. In this tutorial, you\\u2019ll learn the important features of NLTK for processing text data and the different approaches you can use to perform sentiment analysis on your data. By the end of this tutorial, you\\u2019ll be ready to: Split and filter text data in preparation for analysis Analyze word frequency Find concordance and collocations using different methods Perform quick sentiment analysis with NLTK\\u2019s built-in classifier Define features for custom classification Use and compare classifiers for sentiment analysis with NLTK Free Bonus: Click here to get our free Python Cheat Sheet that shows you the basics of Python 3, like working with data types, dictionaries, lists, and Python functions. Getting Started With NLTK The NLTK library contains various utilities that allow you to effectively manipulate and analyze linguistic data. Among its advanced features are text classifiers that you can use for many kinds of classification, including sentiment analysis. Sentiment analysis is the practice of using algorithms to classify various samples of related text into overall positive and negative categories. With NLTK, you can employ these algorithms through powerful built-in machine learning operations to obtain insights from linguistic data. Installing and Importing You\\u2019ll begin by installing some prerequisites, including NLTK itself as well as specific resources you\\u2019ll need throughout this tutorial. First, use pip to install NLTK: $ python3 -m pip install nltk While this will install the NLTK module, you\\u2019ll still need to obtain a few additional resources. Some of them are text samples, and others are data models that certain NLTK functions require. To get the resources you\\u2019ll need, use nltk.download(): import nltk nltk.download() NLTK will display a download manager showing all available and installed resources. Here are the ones you\\u2019ll need to download for this tutorial: names: A list of common English names compiled by Mark Kantrowitz stopwords: A list of really common words, like articles, pronouns, prepositions, and conjunctions state_union: A sample of transcribed State of the Union addresses by different US presidents, compiled by Kathleen Ahrens twitter_samples: A list of social media phrases posted to Twitter movie_reviews: Two thousand movie reviews categorized by Bo Pang and Lillian Lee averaged_perceptron_tagger: A data model that NLTK uses to categorize words into their part of speech vader_lexicon: A scored list of words and jargon that NLTK references when performing sentiment analysis, created by C.J. Hutto and Eric Gilbert punkt: A data model created by Jan Strunk that NLTK uses to split full texts into word lists Note: Throughout this tutorial, you\\u2019ll find many references to the word corpus and its plural form, corpora. A corpus is a large collection of related text samples. In the context of NLTK, corpora are compiled with features for natural language processing (NLP), such as categories and numerical scores for particular features. A quick way to download specific resources directly from the console is to pass a list to nltk.download():\",\"3556\":\"Stack Exchange Podcast - Episode #18 by The Stack Overflow Podcast\",\"3461\":\"Stack Overflow Podcast - Episode #20 by The Stack Overflow Podcast\",\"3552\":\"Stack Exchange Podcast - Episode #46 - The Podcast That Sounds Dirty But Isn't by The Stack Overflow Podcast\",\"4847\":\"Amazon Visited our campus, and they had put a cutoff of 7 CGPA on the basis of which they shortlisted students. After 2 days all\\u2026 Read More The post Amazon Interview Experience for SDE Internship (On-Campus) appeared first on GeeksforGeeks.\",\"3494\":\"Stack Exchange Podcast - Episode #63 - The Plumber's Up To 67 Coins by The Stack Overflow Podcast\",\"939\":\"Are you interested in learning more about Natural Language Processing? Have you heard of sentiment analysis? This week on the show, Kyle Stratis returns to talk about his new article titled, Use Sentiment Analysis With Python to Classify Movie Reviews. David Amos is also here, and all of us cover another batch of PyCoder\\u2019s Weekly articles and projects. Kyle discusses an article about distance metrics for machine learning. David shares a Real Python article about Python signal processing and Fourier transforms with scipy.fft. We also cover several other articles and projects from the Python community including, simulating real-world processes in Python with SimPy, working with Microsoft Excel using Python and OpenPyXL, why running code during import is a bad idea, what I wish I knew as a junior dev, the Raspberry Pi 400 personal computer, dynamic sky replacement and harmonization in videos with SkyAR. Course Spotlight: Simulating Real-World Processes in Python With SimPy In this step-by-step course, you\\u2019ll see how you can use the SimPy package to model real-world processes with a high potential for congestion. You\\u2019ll create an algorithm to approximate a complex system, and then you\\u2019ll design and run a simulation of that system in Python. Topics: 00:00:00 \\u2013 Introduction 00:02:56 \\u2013 Use Sentiment Analysis With Python to Classify Movie Reviews 00:09:49 \\u2013 OpenPyXL: Working with Microsoft Excel Using Python 00:12:41 \\u2013 An Illustration of Why Running Code During Import Is a Bad Idea 00:16:52 \\u2013 Distance Metrics for Machine Learning 00:22:52 \\u2013 Sponsor: linode.com 00:22:52 \\u2013 What I Wish I Knew as a Junior Dev 00:35:29 \\u2013 Fourier Transforms With scipy.fft: Python Signal Processing 00:39:44 \\u2013 Simulating Real-World Processes in Python With SimPy 00:43:30 \\u2013 Video Course Spotlight 00:44:35 \\u2013 Raspberry Pi 400 Personal Computer Kit Now Available 00:49:55 \\u2013 SkyAR: Dynamic Sky Replacement and Harmonization in Videos 00:52:04 \\u2013 Creating an Idea Factory with Roam Research 00:56:02 \\u2013 Thanks and goodbye Show Links: Use Sentiment Analysis With Python to Classify Movie Reviews \\u2013 In this tutorial, you\\u2019ll learn about sentiment analysis and how it works in Python. You\\u2019ll then build your own sentiment analysis classifier with spaCy that can predict whether a movie review is positive or negative. OpenPyXL: Working with Microsoft Excel Using Python \\u2013 Ah, Excel. Everyone loves to hate it. But let\\u2019s face it. Excel is one of the most popular pieces of software ever written. But you love Python, not Excel, which is why you might want to learn OpenPyXL. An Illustration of Why Running Code During Import Is a Bad Idea (And How It Happens Anyway) \\u2013 Code that runs when a module is imported is usually a code smell. But sometimes there\\u2019s no way around it. Distance Metrics for Machine Learning \\u2013 Many machine learning algorithms can be summarized as transforming data to n-dimensional vectors and computing similarity between points by means of some distance metric. This article explores four of these metrics\\u2014the Euclidean, Manhattan, Minkowski, and Hamming distances\\u2014and how to compute them with Python. What I Wish I Knew as a Junior Dev \\u2013 Some of these are things even senior devs need to be reminded of sometimes! Fourier Transforms With scipy.fft: Python Signal Processing \\u2013 In this tutorial, you\\u2019ll learn how to use the Fourier transform, a powerful tool for analyzing signals with applications ranging from audio processing to image compression. You\\u2019ll explore several different transforms provided by Python\\u2019s scipy.fft module. Projects: Simulating Real-World Processes in Python With SimPy Raspberry Pi 400 Personal Computer Kit Now Available SkyAR: Dynamic Sky Replacement and Harmonization in Videos Additional Links: Python Job Hunting in a Pandemic: RPP Episode 10 Natural language processing: Wikipedia spaCy: Industrial-Strength Natural Language Processing in Python Natural Language Toolkit Building PDFs in Python with ReportLab: RPP Episode 20 Mouse vs Python: Mike Driscoll Blog Python 101: 2nd Edition openpyxl - A Python library to read\\/write Excel 2010 xlsx\\/xlsm files Editing Excel Spreadsheets in Python With openpyxl How to Read a Book: The Ultimate Guide by Mortimer Adler import antigravity: The History of Python Blog How to Take Smart Notes by S\\u00f6nke Ahrens - Summary Kyle Stratis\\u2019 YouTube Channel Creating an Idea Factory with Roam Research Support the podcast & join our community of Pythonistas\",\"528\":\"RSA is widespread on the Internet, and uses large prime numbers - but how does it work? Dr Tim Muller takes us through the details. Apologies for the poor audio quality of this video which is due to the remote nature in which it was recorded. https:\\/\\/www.facebook.com\\/computerphile https:\\/\\/twitter.com\\/computer_phile This video was filmed and edited by Sean Riley. Computer Science at the University of Nottingham: https:\\/\\/bit.ly\\/nottscomputer Computerphile is a sister project to Brady Haran's Numberphile. More at http:\\/\\/www.bradyharan.com\",\"1819\":\"This blog is for all those developers who started hiding their faces in front of senior engineers when they were caught red-handed because of the\\u2026 Read More The post 6 Types of Anti Patterns to Avoid in Software Development appeared first on GeeksforGeeks.\",\"3495\":\"Stack Exchange Podcast - Episode #01 by The Stack Overflow Podcast\",\"3476\":\"What happens when millions of minimum byte packets start pinging off your network every few seconds? Bandwidth is a restriction most network engineers are familiar with. It's less often they have to think about packets per second. Teresa shares an awesome story of how a new feature for AOL Instant Messenger, AIM for you 90s nerds, turned up the heat on AOL's servers. After regaling us with war stories from the days of dial-up internet, we chat about what the job of a chief product officer is today. At a place like Stack Overflow, how do you unite functional departments across the company - from marketing to sales to engineering? How do you figure out the right incentives, so that the data you're measuring against is aligned with the long term health of the company and the community? \\\"I don't focus on shipping, I focus on impact,\\\" Teresa told us. \\\"That's where product management, engineering, and design come together. Product management is focused on value. Engineering is focused on quality, and design is focused on usability. If you think of that as Venn diagram, impact is where those three things overlap and happen.\\\" Lastly, we chat about the incredible velocity with which new coding languages and development frameworks emerge in the tech industry. Teresa shares her philosophy for encouraging an engineering team to level up and learn new skills while ensuring that this kind of continuous evolution doesn't create a lot of friction for the overall organization. \\\"That which we measure, we incentivize towards,\\\" is one of her favorite sayings, and Teresa applies it to scoping an overall product roadmap for a company, including what tools, new and old, to use along the way.\",\"3505\":\"Stack Overflow Podcast - Episode #09 by The Stack Overflow Podcast\",\"3334\":\"You can find Sai's videos here. Come for the deep dives on Docker, stay for the live lightboard magic. Yes, I know what the comments say, but no, he isn't writing backwards. Sai also does a lot of work around OpenShift, the containerization software products created by Red Hat. He talks about what the tie up between IBM and Red Hat has been like and how the enterprise is increasingly learning to work with open source. Our lifeboat badge of the week goes to Alex for explaining why you're Getting this as undefined when using arrow function. If you want to find more from Sai, you can follow him on Twitter here.\",\"1822\":\"\\u201cDeep Learning with PyTorch: Zero to GANs\\u201d is a beginner-friendly online course offering a practical and coding-focused introduction to deep learning using the PyTorch framework. Learn more and register for a certificate of accomplishment here: http:\\/\\/zerotogans.com Watch the entire series here: https:\\/\\/www.youtube.com\\/playlist?list=PLWKjhJtqVAbm5dir5TLEy2aZQMG7cHEZp Code and Resources: \\ud83d\\udd17 Classifying CIFAR10 images using ResNet and Regularization techniques in PyTorch: https:\\/\\/jovian.ai\\/aakashns\\/05b-cifar10-resnet \\ud83d\\udd17 Image Classification using Convolutional Neural Networks in PyTorch: https:\\/\\/jovian.ai\\/aakashns\\/05-cifar10-cnn \\ud83d\\udd17 Discussion forum: https:\\/\\/jovian.ai\\/forum\\/t\\/lecture-5-data-augmentation-regularization-and-resnets\\/13772 Topics covered in this video: * Improving the dataset using data normalization and data augmentation * Improving the model using residual connections and batch normalization * Improving the training loop using learning rate annealing, weight decay, and gradient clip * Training a state of the art image classifier from scratch in 10 minutes This course is taught by Aakash N S, co-founder & CEO of Jovian - a data science platform and global community. - YouTube: https:\\/\\/youtube.com\\/jovianml - Twitter: https:\\/\\/twitter.com\\/jovianml - LinkedIn: https:\\/\\/linkedin.com\\/company\\/jovianml -- Learn to code for free and get a developer job: https:\\/\\/www.freecodecamp.org Read hundreds of articles on programming: https:\\/\\/freecodecamp.org\\/news And subscribe for new videos on technology every day: https:\\/\\/youtube.com\\/subscription_center?add_user=freecodecamp\",\"3394\":\"Is there any more fitting end to a day of working from home, deep into months of a fully remote world, than using your smartphone to finish up a little Python code with your head resting on your pillow? Paul has no regrets. If you look at that big, bright, shiny computer monitor late at night, you'll never fall asleep. Sara helps us trace the origin of the word software. It was originally meant as a joke, a clever play on computer \\\"hardware\\\" used in casual conversation, not as an iron clad piece of marketing. Over time, as it was used in correspondence - at public talks, and eventually in academic papers - it began to take on serious weight as a term of art for the product you produce with computers and code. Ben would prefer to be Less Wrong, and is starting to use the podcast to put his deference to a supreme AI into the historical record, just in case Roko's basilisk rears its ugly head. Our lifeboat this week is about an error in some non-standard syntax. Who among has not missed a paren, but hey, sometimes you just need another pair of eyes. Two kind members of our community answered this question, elaborated on how to improve the code, and earned a lifeboat. Congrats! And finally, a bit of recommended reading on just how much power is consumed by the data centers that make cloud computing run 24\\/7, and what that means for our planet.\",\"3472\":\"Stack Overflow Podcast - Episode #77 by The Stack Overflow Podcast\",\"3612\":\"Welcome to ISSUE #54 of the Overflow! This newsletter is by developers, for developers, written and curated by the Stack Overflow team and Cassidy Williams at Netlify. While we are off for the holidays, we still have some sweet newsletter presents to give: your digital identity and you, dealing with sudden bursts of errors, and the secret origin story of the hero known only as C. From the blog How digital identity protects your software stackoverflow.blog Digital identity is the online representation of a person, organization, or a machine, and it is what gives us access to the data we use daily. Here\\u2019s a brief overview of identity, why it\\u2019s vital to information security, and why you should know more about it Podcast 297: All Time Highs: Talking crypto with Li Ouyang stackoverflow.blog If you want to understand what\\u2019s going on with Bitcoin, chat with someone who understands finance and software with equal precision. Need speed? Automate your incident response with xMatters promotion Nothing\\u2019s more important than a great customer experience, but sometimes services get disrupted. xMatters helps teams resolve incidents fast before impacting customers. Try for free and see why millions trust xMatters. Interesting questions Why should \\u2018boneheaded\\u2019 exceptions not be caught, especially in server code? softwareengineering.stackexchange.com Detecting a problem with a crash is better than letting the program continue with an undetected error. What spectral type of star has an absolute magnitude of exactly 0? astronomy.stackexchange.com What, having a star with an absolute magnitude of roughly zero not good enough for you? Is there a general solution to the problem of \\u201csudden unexpected bursts of errors\\u201d in software? softwareengineering.stackexchange.com Your code should both execute gracefully and fail gracefully. What is the difference between pressing Alt+Tab and Ctrl+Alt+Tab? superuser.com One of them offers you greater Ctrl over window selection. Links from around the web Writing a fully unit testable android app dev.to Android was not exactly set up with unit testing in mind, but you still can do it! Here\\u2019s a guide for setting up a \\u201cblueprint\\u201d for yourself to get your projects set up for success. \\u201cA damn stupid thing to do\\u201d\\u2014the origins of C arstechnica.com The creators of the C language never dreamed it would become as popular as it did. The history of it is fascinating (and also funny). Font Family Reunion: Compatibility tables for default local fonts. fontfamily.io Here\\u2019s a nice and easy way to look up a system\\u2019s default fonts for all of your CSS needs. Think \\u201cCan I Use\\u201d but for fonts. The Node.js best practices list (December 2020) github.com This repo is a summary and curation of the top-ranked content on Node.js best practices, growing and updated every week. Definitely worth a bookmark! Spend less time in Slack. Try Stack Overflow for Teams. The post The Overflow #54: Talking crypto appeared first on Stack Overflow Blog.\",\"1834\":\"\\u201cDeep Learning with PyTorch: Zero to GANs\\u201d is a beginner-friendly online course offering a practical and coding-focused introduction to deep learning using the PyTorch framework. Learn more and register for a certificate of accomplishment here: http:\\/\\/zerotogans.com Watch the entire series here: https:\\/\\/www.youtube.com\\/playlist?list=PLWKjhJtqVAbm5dir5TLEy2aZQMG7cHEZp Code and Resources: \\ud83d\\udd17 Image Classification using Convolutional Neural Networks: https:\\/\\/jovian.ai\\/aakashns\\/05-cifar10-cnn \\ud83d\\udd17 Classifying images of everyday objects using a neural network: https:\\/\\/jovian.ai\\/aakashns\\/03-cifar10-feedforward \\ud83d\\udd17 Discussion forum: https:\\/\\/jovian.ai\\/forum\\/t\\/lecture-4-image-classification-with-convolutional-neural-networks\\/13766 Topics covered in this video: * Working with the 3-channel RGB images from the CIFAR10 dataset * Introduction to Convolutions, kernels & features maps * Underfitting, overfitting, and techniques to improve model performance This course is taught by Aakash N S, co-founder & CEO of Jovian - a data science platform and global community. - YouTube: https:\\/\\/youtube.com\\/jovianml - Twitter: https:\\/\\/twitter.com\\/jovianml - LinkedIn: https:\\/\\/linkedin.com\\/company\\/jovianml -- Learn to code for free and get a developer job: https:\\/\\/www.freecodecamp.org Read hundreds of articles on programming: https:\\/\\/freecodecamp.org\\/news And subscribe for new videos on technology every day: https:\\/\\/youtube.com\\/subscription_center?add_user=freecodecamp\",\"3588\":\"As Adobe ends its support for Flash, we look back at its impact on gaming, graphics, and the web. And fear not, some kind folks have written a Flash emulator in Rust called Ruffle. Later, we discuss how to lay out your resume in order to get noticed and a Supreme Court case in the US that considers whether scraping data from public sites should be illegal. Gone in a Flash. Actually it took quite a while. Adobe explains its decision to stop supporting Flash here. You can learn more about Ruffle, the Flash emulator written in Rust, here. Here are some tips on writing a developer resume from a hiring manager who\\u2019s written an entire book on the topic. You can read more about the Supreme Court case considering the limits of the Computer Fraud and Abuse Act here and here Our Lifeboat badge of the week goes to a user named simply 4386427, who answered the most basic and frustrating question: why does \\u201cprintf\\u201d not work? TRANSCRIPT The post Podcast 292: Goodbye to Flash, we\\u2019ll see you in Rust appeared first on Stack Overflow Blog.\",\"3295\":\"The title of this week's episode comes from a Hacker News thread where Guillermo argued that the complexity of front end performance goes beyond simplifying your stack to bare web primitives. You can find out more about Vercel, which recently raised a $40 million round, on Guillermo's blog, where he details what the company has planned for the future. You can find more info on Next.JS here. It's a very active tag on Stack Overflow with dozens of new questions a day. Our lifeboat badge for this episode goes to paxdiablo for answering the question: What does .split() return if the string has no match?\",\"925\":\"Is game programming a good way to develop your Python programming skills? This week we have Jon Fincher on the show. Jon is an author on the Real Python team, and we talk about his recent articles on PyGame and Arcade. Jon talks about his background working at Microsoft. We discuss if a game would make a good portfolio piece. We compare and contrasts the two popular Python game libraries of Arcade and PyGame. Jon also reveals ways to find assets for your own creations. Want your question featured on the show? Here\\u2019s a new thing we\\u2019re trying out. Send us your question at realpython.com\\/podcast-question and we might feature it on a future episode of the show. Topics: 00:00:00 \\u2013 Introduction 00:00:56 \\u2013 Jon Fincher 00:05:17 \\u2013 Start with Real Python 00:07:08 \\u2013 Is game programming a good way to learn? 00:13:16 \\u2013 Setting specific goals and limits 00:19:28 \\u2013 Is a game a good portfolio piece? 00:21:07 \\u2013 PyWeek 29 00:22:58 \\u2013 Al Sweigart books 00:25:00 \\u2013 Comparing PyGame and Arcade 00:37:34 \\u2013 Finding game art and other assets 00:41:04 \\u2013 Licensing game assets 00:44:29 \\u2013 Packaging your game and sharing 00:47:34 \\u2013 What are you excited about in the world of Python 00:50:20 \\u2013 Final Thoughts 00:54:13 \\u2013 Conclusion Show links: TEALS: Help us close the computer science gap Scrum for One Raymond Chen: The Old New Thing Blog - You don\\u2019t know what you do until you know what you don\\u2019t do PyGame Real Python Article - PyGame: A Primer on Game Programming in Python Pygame Zero Arcade Real Python Article - Arcade: A Primer on the Python Game Framework The Python Arcade Library: Reddit Group PyWeek 29: March 22, 2020 Quill Creates Quill Twitch Stream Al Sweigart Twitch Stream: Al Sweigart: Automate the Boring Stuff With Python Al Sweigart: Invent With Python & Pygame Scratch (non-Python) Snap! (non-Python) Godot Game engine (non-Python) Unity Game Engine (non-Python) Unreal Game Engine (non-Python) Tiled Map Editor Pymunk: Pythonic 2D Physics library OpenGameArt Font assets Distributing your Game: Real Python article on PyInstaller Beeware: Write once. Deploy everywhere Audacity: Free, Open Source, Cross-platform audio software What are you excited about in the world of Python? Jon\\u2019s pick: ursina 3D Engine: Open Source Game Engine Panda3D: The Open Source Framework for 3D Rendering and Games Chris\\u2019s pick: Real Python Podcast: Submit a Question Support the podcast & join our community of Pythonistas\",\"3371\":\"Every experienced software engineer can tell you a story about a standardization effort that ended up causing more problems than it solved. Queen Elizabeth's decree adding 280 feet to each mile made it easy to divide up acres, but has haunted those of us stuck with Imperial units ever since. Sara dives into micro frontend services and how they can help to add agility to a modern development team. There is a nice article on the topic here, and Sara found it through the Thought Works Tech Radar. Pinterest paid just under $90 million dollars to break its lease in San Francisco. Paul and Sara are hearing about lots of developers who are fleeing major cities, and it seems clear that Pinterest won't be the last company to abandon expansion plans or ditch fancy corporate offices for at least the next few years. Our lifeboat badge of the week the week goes to Sravya Nagumalli, who explained why Angular is associated with the Single Page App and just what an SPA is anyway. Thanks for sharing some knowledge, Sravya!\",\"943\":\"Do you want to learn the how and when of implementing K-means clustering in Python? Would you like to practice your pandas skills with a real-world project? This week on the show, David Amos is back with another batch of PyCoder\\u2019s Weekly articles and projects. David talks about a Real Python article about how to perform K-means clustering in Python. We also talk about a new project based article on the site about how to create a gradebook using pandas, practicing the skills of importing, merging, and calculating across groups of data. We cover several other articles and projects from the Python community including: JPEG image decoding, object-oriented development with interfaces and mixins, sparking joy with Python, five package picks from Real Python authors, and more. Course Spotlight: Reading and Writing CSV Files This course teaches how to read and write data to CSV files using Python\\u2019s built in csv module and the pandas library. You\\u2019ll learn how to handle standard and non-standard data such as CSV files without headers, or files containing delimiters in the data. Topics: 00:00:00 \\u2013 Introduction 00:01:34 \\u2013 Understanding and Decoding a JPEG Image Using Python 00:08:41 \\u2013 K-Means Clustering in Python: A Practical Guide 00:12:49 \\u2013 Pandas Project: Make a Gradebook With Pandas 00:17:54 \\u2013 Video Course Spotlight 00:18:53 \\u2013 Interfaces, Mixins and Building Powerful Custom Data Structures in Python 00:32:29 \\u2013 Sparking Joy With Python 00:43:33 \\u2013 Python Packages: Five Real Python Favorites 00:52:15 \\u2013 zxcvbn-python: Dropbox\\u2019s Realistic Password Strength Estimator 00:55:43 \\u2013 Manim: Animation Engine for Explanatory Math Videos 01:00:34 \\u2013 Thanks and Goodbye Show Links: Understanding and Decoding a JPEG Image Using Python \\u2013 Learn about the JPEG compression algorithm in this comprehensive guide to decoding JPEGs with Python. K-Means Clustering in Python: A Practical Guide \\u2013 Learn how to perform k-means clustering in Python. You\\u2019ll review evaluation metrics for choosing an appropriate number of clusters and build an end-to-end k-means clustering pipeline in scikit-learn. Pandas Project: Make a Gradebook With Pandas \\u2013 With this follow-along Python project, you\\u2019ll build a script to calculate grades for a class using pandas. The script will quickly and accurately calculate grades from a variety of data sources. You\\u2019ll see examples of loading, merging, and saving data with pandas, as well as plotting some summary statistics. Interfaces, Mixins and Building Powerful Custom Data Structures in Python \\u2013 How to supercharge Python\\u2019s built-in data structures and build powerful custom data structures with mixin classes. Sparking Joy With Python \\u2013 After a fling with TypeScript, one Python programmer shares some thoughts on keeping the flame alive with Python. Python Packages: Five Real Python Favorites \\u2013 In this tutorial, several Real Python authors share Python packages we like to use as alternatives to modules in the standard library. You\\u2019ll get to know a number of useful packages, including pudb, requests, parse, dateutil, and typer. Projects: zxcvbn-python: Dropbox\\u2019s Realistic Password Strength Estimator Manim: Animation engine for explanatory math videos Additional Links: JPEG - Wikipedia article YCbCr - Wikipedia article Python Type Checking (Guide) - Real Python article The Pandas DataFrame: Make Working With Data Delightful - Real Python article Implementing an Interface in Python - Real Python article TypeScript: Open-source language which builds on JavaScript 3Blue1Brown - YouTube channel Getting Started Animating with manim and Python 3.7 Support the podcast & join our community of Pythonistas\",\"2788\":\"Sorting is a basic building block that many other algorithms are built upon. It\\u2019s related to several exciting ideas that you\\u2019ll see throughout your programming career. Understanding how sorting algorithms in Python work behind the scenes is a fundamental step toward implementing correct and efficient algorithms that solve real-world problems. In this course, you\\u2019ll learn: How different sorting algorithms in Python work and how they compare under different circumstances How Python\\u2019s built-in sort functionality works behind the scenes How different computer science concepts like recursion and divide and conquer apply to sorting What Big O notation is and how to use it to compare the efficiency of different algorithms [ Improve Your Python With \\ud83d\\udc0d Python Tricks \\ud83d\\udc8c \\u2013 Get a short & sweet Python Trick delivered to your inbox every couple of days.\",\"3402\":\"If you're wondering why GPT-3 matters and how it compares to prior efforts in this area, here is a good summary. If you want to dive deeper into the effect anxiety has on the interview process and hiring in tech, you can read up on the research here. This week's lifeboat badge goes to PerformanceDBA, who left an incredbily long and detailed answer, complete with charts and code snippets, on the following question: how to organize a relational data model for double entry accounting?\",\"3575\":\"Defining and measuring programmer productivity is something of a great white whale in the software industry. It\\u2019s the basis of enormous investment, the value proposition of numerous startups, and one of the most difficult parts of an engineering manager or CTO\\u2019s job description. It\\u2019s also a source of anxiety for developers at all experience levels: how do you know if you\\u2019re doing enough, both on and off the clock? When everything you do is intangible, how should you measure it? Can it be measured at all? In this article I\\u2019ll discuss the biggest pitfalls of productivity measurement and a few ways to do it well. In software development, as in any other field, many people think of productivity in terms of inputs and outputs. A full-time developer works 40 hours per week for an average salary of $107,510 per year in the United States. Hours and salary are visible, easily quantifiable inputs. The developer then produces software features, documentation, deployments, and\\/or bug fixes on a recurring basis. These are outputs. If developers are as simple as the software we imagine they are writing, then increasing their productivity should be as simple as asking them to work more hours or paying them higher salaries. Of course, this is a fairy tale. Neither developers nor software work like that. The problems of input measurement \\u201cHours worked\\u201d is one of several false metrics used as a proxy for job performance. I mention it first because it\\u2019s an oft-unexamined default, a path of least resistance. If a company doesn\\u2019t intentionally avoid doing so, it will sooner or later deteriorate into an hours-only environment. Outside of a pandemic where remote work is the norm, the symptoms of an hours-only environment are easy to recognize. Working hours are seen as non-negotiable, and being present at the office is seen as proof that someone is working. Anyone who tries to leave the office a couple hours early is met with hostility (sometimes as muted as a few raised eyebrows, sometimes more brazen). Anyone who works late into the evening or comes in on the weekend is seen as a high performer. The incentives of this \\u201clast to leave the gym\\u201d culture are unfortunate: developers are pushed to spend more and more of their lives at work, left without any other way to demonstrate their value, and lulled into paying only secondary attention to their work output. As time goes on, the workplace becomes more and more a place where everyone is working but nothing is getting done. The problems don\\u2019t end there. If we assume that all work is \\u201cpositive work\\u201d\\u2014that is, that all work represents progress toward a goal\\u2014then we are mistaken. Developers who have worked while exhausted, distracted, or sick tend to be familiar with the concept of \\u201cnegative work\\u201d: work so poorly done that it must be undone or compensated for later, thus increasing rather than decreasing the amount of work remaining. Software development is complex, abstract, attentive work, and therefore hypersensitive to a developer\\u2019s mental state. That is, there are hidden inputs at play: anxiety, depression, burnout, toxicity at work, grief, microaggressions, and a hundred other things that can reduce or invert individual productivity on any given day. If company culture demands long hours week after week, or even just eight-hour days with no flexibility or vacation time, developers will inevitably spend time doing negative work: they will literally accomplish less by staying late than they would have if they had gone home earlier. And due to fatigue, they\\u2019ll accomplish less the next day too. On the other hand, an hours-only environment is not the worst case scenario. It has a spectre of fairness about it: if two developers are working the same number of hours, there is one clear dimension on which they are equals. Neither of them appears to be slacking off, neither appears to be doing more than their fair share. If they produce less than expected, well, at least they put in their time. And the \\u201chours worked\\u201d metric doesn\\u2019t explicitly incentivize bad code like some metrics do. So while it\\u2019s a poor metric, and even works against productivity in many situations, there are much worse metrics we should discuss. Consider the other obvious input to software development: money. I have jokingly suggested to my manager once or twice that productivity should be measured by salary, and if my salary were doubled I would produce code at the level of a world-class software architect. Of course, you know intuitively that this is ridiculous. Paying someone more money doesn\\u2019t immediately make them more productive (although, indirectly and on a limited scale, it may). Yet, in my mind, money and hours belong to the same category: not just inputs, but auxiliary ones, only tenuously driving productivity. One is given by the employer, the other by the employee, but this exchange is incidental to the creation of useful software. Long story short, measuring inputs is a deficient technique because software development is not an equation and code cannot be built by assembly line. So let\\u2019s talk about outputs. The pitfalls of output measurement Here, perhaps counterintuitively, we find many of the worst metrics in the software development world. Some have famously fallen into the trap of thinking that the work output of software development is lines of code or commits in version control. Certainly these are part of the process, but they\\u2019re more like byproducts than results. Strictly speaking, a line of code that doesn\\u2019t solve a problem is worse than no code at all. So measuring a developer\\u2019s productivity by how much code they contribute is like measuring a power plant by how much waste they produce or measuring Congress by how many bills they pass; it\\u2019s tangential to actual value. What\\u2019s worse, gaming these measurements is trivially easy. A developer who gets paid per line of code can easily earn an entire year\\u2019s salary in a single day without creating any business value whatsoever. Most developers will adopt a subtler approach, but all the same, you should be careful what you wish for. When a measure becomes a target, it ceases to be a good measure. ~Goodhart\\u2019s Law Developers, by and large, understand this\\u2014and yet, embarrassingly, we still tend to use commits and lines of code as proverbial peacock feathers. Our eyes widen when we read that Google (meaning all Google-branded products, as of 2015) spans over two billion lines of code, or that the Windows team does over 8,400 code pushes per day, even though we know that neither of these is what makes Google or Windows useful. Sometimes the community even produces nonsense like this: What's stopping you from coding like this? pic.twitter.com\\/ZBi5NIISUn \\u2014 Hays Stanford (@haysstanford) September 16, 2020 (As an aside, I congratulate the person whose contribution graph this is for building a daily coding habit, and also for taking a day off now and then. Both positive signs as far as I\\u2019m concerned, although I wouldn\\u2019t go so far as to say this person is productive without a much deeper look at their contribution history.) In any case, we can add these measures to our list of ineffective proxies. Measuring productivity in terms of bugs fixed, tasks completed, or features shipped is equally futile, if marginally more difficult to game. If the goal is to fix more bugs, developers can write intentionally buggy software and then write a plethora of fixes; or, to achieve the opposite goal, they can reduce their bug count by writing features as slowly as possible. If the goal is to ship features, they can write them quickly and naively, resulting in slow and barely-functioning software; if the goal is to finish tasks, the entire team can dissolve into politics as each developer jockeys for the easiest (or most overestimated) ones. A good team may be able to ignore your measures and just work, but even in the best of circumstances a bad measure is a hindrance that\\u2019s hard to ignore. Some organizations, in a display of profound paranoia, install spyware on their employees\\u2019 computers to track the minutiae of their moment-to-moment work with artifacts like mouse movements, keypresses, and screenshots. It\\u2019s unclear to me how any employee can do creative work under this kind of scrutiny. I expect most developers would quit immediately. But as with the measures discussed above, this one\\u2019s most obvious failing is that it doesn\\u2019t capture anything truly meaningful to the business or its customers. Would you discipline a highly productive developer because they spend a lot of time on Reddit or don\\u2019t move their mouse enough? Would you promote a developer because they spend a lot of time typing in Visual Studio, even if they\\u2019re difficult to work with? Some managers apparently do, but hopefully most of us are smarter than that. Measuring productivity at the right level Now you\\u2019ve been warned off the worst measures you might be tempted to use, let\\u2019s talk about a few good ones. Unfortunately, individual performance can rarely be measured beyond a binary state of \\u201cthis team member contributes\\u201d or \\u201cthis team member does not contribute.\\u201d And it cannot be measured at a distance. A software development team is not a group of isolated individuals working alone; each team member\\u2019s work output is a function of work output from all their teammates, not to mention several meaningful non-measurable interactions throughout the day. The interdependencies and nuances of individual work are too complex to be measured by an outside observer. For example, some team members are force multipliers for the rest of their team\\u2014they may not accomplish a lot on their own, but their teammates would be significantly less productive without their help and influence. Individuals like this are a secret weapon of effective engineering organizations, but their productivity cannot be measured on an individual scale. Other team members may not produce a lot of features, but act as \\u201ccode janitors,\\u201d carefully testing, cleaning up, and refactoring code wherever they go so that their teammates can develop features more quickly and painlessly. Their productivity as individuals is also impossible to measure, but their effect on the team\\u2019s productivity is exponential. Even for programmers that regularly ship new features, productivity tends to vary greatly over the short term, stifling efforts to track it with any specificity. For reasons like this, individual performance is best left for individual contributors to measure in themselves and each other. Team performance, on the other hand, is far more visible. Perhaps the best way to track it is to ask, does this team consistently produce useful software on a timescale of weeks to months? This echoes the third Agile principle: \\u201cDeliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale.\\u201d A team that produces useful software on a regular basis is productive. A team that doesn\\u2019t should be asked why not. There are usually legitimate reasons for a lack of productivity; most unproductive teams want to be productive, and most productive teams want to be more productive. Team productivity can be measured at an organizational scale with simple, holistic observations. And since teammates tend to be well aware of each other\\u2019s contributions (whether measurable or not), any serious failings in individual productivity can be discovered by means of good organizational habits, such as having frequent one-on-one interviews between managers and their direct reports; regularly gathering honest, anonymous feedback; and encouraging each team member to exercise personal accountability by reporting their accomplishments and taking responsibility for their failures. There\\u2019s a lot here that depends on human beings rather than trend charts and raw data. This is an inescapable fact of software: it\\u2019s far more about humans than ones and zeros, and always has been. Productivity tracking tools and incentive programs will never have as great an impact as a positive culture in the workplace. And when accountability and healthy communication are baked into this type of culture, critical moments for productivity will quickly become visible to the people most able to address them. Many organizations use velocity as their preferred metric for team productivity, and when done right, this can be a useful tool for understanding the software development process. Velocity is an aggregate measure of tasks completed by a team over time, usually taking into account developers\\u2019 own estimates of the relative complexity of each task. It answers questions like, \\u201chow much work can this team do in the next two weeks?\\u201d The baseline answer is \\u201cabout as much as they did in the last two weeks,\\u201d and velocity is the context for that statement. It\\u2019s a planning measure, not a retrospective measure, and anyone who tries to attach incentives to it will find that its accuracy evaporates under pressure (for more on this, see The Nature of Software Development by Ron Jeffries). Understanding the velocity of a team, department or company can be foundational as you prioritize feature development, set expectations with clients, and plan the future of your products. There is no useful measure that operates at a finer grain than \\u201ctasks multiplied by complexity.\\u201d Measuring commits, lines of code, or hours spent coding, as some tools do, is no more useful at a team scale than it is at an individual scale. There simply is no relation between the number of code artifacts a team produces, or the amount of time they spend on them, and the value of their contributions. Many organizations thrive without any hard-and-fast measures at all. In organizations where useful software is well-understood to be both the goal and the primary (albeit hard-to-quantify) measured result of development work and inputs are correspondingly deprioritized, there are profound and far-reaching implications. Developers are liberated to do their best work, whenever and wherever they\\u2019re most productive. This may or may not look like a 9-to-5. Some will, by preference or necessity, do the bulk of their work early in the morning and late at night. Others will work in odd chunks: an hour here, a few more hours there. Some will work at home, some at the office, and others on the road. This is a feature, not a bug. It emphasizes true productivity rather than trying to shoehorn it into an observable heuristic, and it makes the workplace viable for a deeper talent pool that includes, for example, working parents and people with disabilities. Much has been written and said about the benefits of Results Only Work Environments (ROWE), remote work, reducing time spent in meetings, and flexible hours; each of these is just a manifestation of savvy productivity measures. It\\u2019s been said that you get what you measure. So it follows that you should only measure what you really, truly want\\u2014whether or not it can be drawn as a line graph. For some, it can be frustrating to do or manage work that can\\u2019t be reduced to a number. But with work as nuanced and abstract as software development, the further we entrench ourselves in details, the more we defeat our own purposes. Useful software is our goal, and we shouldn\\u2019t settle for (or measure) anything less. The post Can developer productivity be measured? appeared first on Stack Overflow Blog.\",\"3431\":\"Anil Dash joins us for hosting duties again this week along with co-founders Jess Lee and Ben Halpern of the Practical Dev. Topics include Shabbat elevators, Failure, and racist AI.\",\"3407\":\"You can read up on Deno 1.0 here. The star-studded ceremony for the 2020 Webby's can be watched on repeat here (not that we're doing that...) This is the Wired story about Lee Holloway, a brilliant coder who helped build Cloudflare, but then mysteriously fell into decline. It's a sad but beautifully written tale. Thanks to Stack Overflow user htamas for saving a question and winning a lifeboat : Gradle project refresh failed, unable to get the CMake. Ryan's piece on how coders beg, borrow, and steal can be found here.\",\"3537\":\"Stack Exchange Podcast - Episode #09 w\\/ Greg Wilson by The Stack Overflow Podcast\",\"3289\":\"Stack Overflow Podcast - Episode #65 by The Stack Overflow Podcast\",\"3555\":\"On this week's episode, Joel rants about travel for the first time ever, Jay explains the Developer Survey (launched last week), and the hosts ponder the reason for Connecticut's existence. Also, our friend Scott Hanselman tells us what we should be doing.\",\"3433\":\"Pawel Skolski wrote this definition of the SPA in 2016. \\\"A single-page application is an app that works inside a browser and does not require page reloading during use. You are using these type of applications every day. These are, for instance: Gmail, Google Maps, Facebook or GitHub. SPAs are all about serving an outstanding UX by trying to imitate a \\u201cnatural\\u201d environment in the browser \\u2014 no page reloads, no extra wait time. It is just one web page that you visit which then loads all other content using JavaScript \\u2014 which they heavily depend on.\\\" Tom McWright recently sparked some good discussion in the developer world with his article, If Not SPAs, What? He had written before about his belief that SPAs had done little to reduce the complexity of web development, but hadn't really given readers other options. In his latest post, he tried to offer some possible alternatives. Our lifeboat of the week of the week goes to Glortho for explaining how to add http:\\/\\/ to url if no protocol is defined in javascript?\",\"1845\":\"NumPy is a Python library that provides a simple yet powerful data structure: the n-dimensional array. This is the foundation on which almost all the power of Python\\u2019s data science toolkit is built, and learning NumPy is the first step on any Python data scientist\\u2019s journey. This tutorial will provide you with the knowledge you need to use NumPy and the higher-level libraries that rely on it. In this tutorial you\\u2019ll learn: What core concepts in data science are made possible by NumPy How to create NumPy arrays using various methods How to manipulate NumPy arrays to perform useful calculations How to apply these new skills to real-world problems To get the most out of this NumPy tutorial, you should be familiar with writing Python code. Working through the Introduction to Python learning path is a great way to make sure you\\u2019ve got the basic skills covered. If you\\u2019re familiar with matrix mathematics, then that will certainly be helpful as well. You don\\u2019t need to know anything about data science, however. You\\u2019ll learn that here. There\\u2019s also a repository of NumPy code samples that you\\u2019ll see throughout this tutorial. You can use it for reference and experiment with the examples to see how changing the code changes the outcome. To download the code, click the link below: Get Sample Code: Click here to get the sample code you\\u2019ll use to learn about NumPy in this tutorial. Choosing NumPy: The Benefits Since you already know Python, you may be asking yourself if you really have to learn a whole new paradigm to do data science. Python\\u2019s for loops are awesome! Reading and writing CSV files can be done with traditional code. However, there are some convincing arguments for learning a new paradigm. Here are the top four benefits that NumPy can bring to your code: More speed: NumPy uses algorithms written in C that complete in nanoseconds rather than seconds. Fewer loops: NumPy helps you to reduce loops and keep from getting tangled up in iteration indices. Clearer code: Without loops, your code will look more like the equations you\\u2019re trying to calculate. Better quality: There are thousands of contributors working to keep NumPy fast, friendly, and bug free. Because of these benefits, NumPy is the de facto standard for multidimensional arrays in Python data science, and many of the most popular libraries are built on top of it. Learning NumPy is a great way to set down a solid foundation as you expand your knowledge into more specific areas of data science. Installing NumPy It\\u2019s time to get everything set up so you can start learning how to work with NumPy. There are a few different ways to do this, and you can\\u2019t go wrong by following the instructions on the NumPy website. But there are some extra details to be aware of that are outlined below. You\\u2019ll also be installing Matplotlib. You\\u2019ll use it in one of the later examples to explore how other libraries make use of NumPy. Using Repl.it as an Online Editor If you just want to get started with some examples, follow along with this tutorial, and start building some muscle memory with NumPy, then Repl.it is a great option for in-browser editing. You can sign up and fire up a Python environment in minutes. Along the left side, there\\u2019s a tab for packages. You can add as many as you want. For this NumPy tutorial, go with the current versions of NumPy and Matplotlib. Here\\u2019s where you can find the packages in the interface: Luckily, they allow you to just click and install. Installing NumPy With Anaconda The Anaconda distribution is a suite of common Python data science tools bundled around a package manager that helps manage your virtual environments and project dependencies. It\\u2019s built around conda, which is the actual package manager. This is the method recommended by the NumPy project, especially if you\\u2019re stepping into data science in Python without having already set up a complex development environment. If you\\u2019ve already got a workflow you like that uses pip, Pipenv, Poetry, or some other toolset, then it might be better not to add conda to the mix. The conda package repository is separate from PyPI, and conda itself sets up a separate little island of packages on your machine, so managing paths and remembering which package lives where can be a nightmare. Once you\\u2019ve got conda installed, you can run the install command for the libraries you\\u2019ll need: $ conda install numpy matplotlib This will install what you need for this NumPy tutorial, and you\\u2019ll be all set to go. Read the full article at https:\\/\\/realpython.com\\/numpy-tutorial\\/ \\u00bb [ Improve Your Python With \\ud83d\\udc0d Python Tricks \\ud83d\\udc8c \\u2013 Get a short & sweet Python Trick delivered to your inbox every couple of days.\",\"3480\":\"You can read about the IRS and its Sisyphean efforts to modernize its computer systems here. Ben's Twitter thread on amazing and obscure trade periodicals you can find online is here. You can read more about what Apple is doing with biometric identity on the web here.\",\"3566\":\"Stack Exchange Podcast - Episode #02 by The Stack Overflow Podcast\",\"3527\":\"Part 1 Paul and Sara chat about what language is best to choose as your first when you're just getting started on your journey as a programmer. Probably not Mathmatica, but it's a neat one. Jupyter Notebooks - an in-browser notebook for working with Python. You can write your words, have your code right next to it, and see how things play out. Or as Tom Butterworth put it on DEV. \\\"Jupyter Notebook is an interactive web application that interfaces with the iPython repl, allowing you to run structured but iterative Python scripts. It is the de facto choice for data scientists to rapidly prototype pipelines, visualise data, or perform ad hoc analysis.\\\" Interview: Jess Lee Jess Lee had some great perspectives to share on what it means to balance being an entrepreneur and a coder. Issac Lyman kicked off a community project on DEV to create a book that would help guide readers through their first year in code. 15 contributors ended up writing chapters for the book, which is available for free here. DEV is open source, and they have decided it can be a software platform other organizations can use to build their own communities. As Ben Halpern writes, \\\"The future of our company will be based on delivering the DEV open-source software to power new standalone communities. We will work with a network of partners both inside and outside of the software ecosystem.\\\" Part 2 We dig into D3.JS. Stack Overflow has a lot to teach folks on this subject. What's the best way to make a d3.js visualization layout responsive? Just don't ask about a good book for learning the subject! And finally, what's the difference between d3.js and jQuery? It's a silly question with some interesting answers and a nice history of the web in the background.\",\"1827\":\"In this course, you'll build an Android app in Kotlin which allows users to update their status using only emoji \\ud83d\\ude07\\ud83d\\udc3c\\u2764\\ufe0f. The app combines various Firebase services (Authentication, Cloud Functions, and Firestore) to allow users to update and view emoji-only statuses. The user is able to create or sign in to their account with Google. \\u27a4 Published app: https:\\/\\/play.google.com\\/store\\/apps\\/details?id=edu.stanford.rkpandey.emojistory \\u27a4 Kotlin Code in Github: https:\\/\\/github.com\\/rpandey1234\\/EmojiStatus \\u27a4 JavaScript Code in Github: https:\\/\\/github.com\\/rpandey1234\\/EmojiStatusCloud \\ud83d\\udd17 Follow Rahul on Twitter: https:\\/\\/twitter.com\\/rpandey1234 \\ud83d\\udd17 Follow Rahul on YouTube: https:\\/\\/www.youtube.com\\/rpandey1234 Fix to allow other kinds of emoji in the EditText: https:\\/\\/github.com\\/rpandey1234\\/EmojiStatus\\/commit\\/5d1eb217bbc6294f8a7ff5515f9138ef2e9417b5 Helpful documentation \\u27a4 Android guide for Firebase authentication: https:\\/\\/firebase.google.com\\/docs\\/auth\\/android\\/google-signin \\u27a4 Cloud function trigger when a user authenticates: https:\\/\\/firebase.google.com\\/docs\\/functions\\/auth-events \\u27a4 Working with Firestore: https:\\/\\/firebase.google.com\\/docs\\/firestore\\/quickstart \\u27a4 Read about Android and emojis (Unicode): https:\\/\\/blog.emojipedia.org\\/androids-emoji-problem\\/ \\u2b50\\ufe0f Course Contents \\u2b50\\ufe0f \\u2328\\ufe0f (00:00) Intro \\u2328\\ufe0f (01:07) App architecture \\u2328\\ufe0f (09:05) Firebase Authentication logic \\u2328\\ufe0f (29:25) User sign up Cloud Function \\u2328\\ufe0f (42:31) Display user emoji list \\u2328\\ufe0f (57:13) Update emoji status \\u2328\\ufe0f (1:07:15) Restrict input to emoji -- Learn to code for free and get a developer job: https:\\/\\/www.freecodecamp.org Read hundreds of articles on programming: https:\\/\\/freecodecamp.org\\/news And subscribe for new videos on technology every day: https:\\/\\/youtube.com\\/subscription_center?add_user=freecodecamp\",\"920\":\"Have you ever wanted to explore using Python with electronics? CircuitPython is a great platform to get started with. This week we have Thea Flowers on the show. Thea has been creating several hardware projects based around CircuitPython, and she talks about getting started on the platform. She also answers questions about how she taught herself to design and prototype printed circuit boards. Thea discusses several of her open source projects, including Nox, ConductHotline, and getting involved with CircuitPython. Thea was the conference co-chair for PyCascades, and we talk about how someone could get involved in volunteering for conferences. We also discuss building diversity in the community. This episode was initially recorded at an earlier date, so we asked Thea to come back for a few minutes to discuss updates on her projects and about a recent honor she received. Topics: 00:00:00 \\u2013 Introduction 00:01:25 \\u2013 Thea\\u2019s programming background 00:02:45 \\u2013 Working with Google Cloud Platform 00:04:10 \\u2013 Flutter developer relations 00:04:52 \\u2013 Learning Python 00:06:07 \\u2013 Working on open source projects 00:06:33 \\u2013 Nox - Automated Python testing 00:07:03 \\u2013 ConductHotline 00:07:38 \\u2013 Contributing to CircuitPython 00:07:53 \\u2013 More background on Nox and Tox 00:10:03 \\u2013 Getting involved with CircuitPython 00:12:38 \\u2013 MicroPython and CircuitPython 00:14:20 \\u2013 Suggestions for starter board or kit 00:15:49 \\u2013 What are you excited about in CircuitPython? 00:16:31 \\u2013 Nina Zakharenko CircuitPython project 00:17:47 \\u2013 Things you\\u2019d like to see improved in CircuitPython? 00:21:30 \\u2013 Working toward consensus in open source projects? 00:25:41 \\u2013 Winterbloom - Big Honking Button 00:30:25 \\u2013 Creating circuit boards 00:34:32 \\u2013 Winterbloom - Sol 00:38:49 \\u2013 Code editor for CircuitPython 00:40:08 \\u2013 Something you thought you knew about Python, but were wrong about? 00:42:14 \\u2013 What are you excited about in the world of Python? 00:44:21 \\u2013 Do you listen to music when coding? 00:45:29 \\u2013 Being an organizer for PyCascades 00:46:53 \\u2013 Getting involved and volunteering for events 00:48:16 \\u2013 Ways to increase diversity 00:53:51 \\u2013 Extended episode conversation 00:54:25 \\u2013 Updates on the WInterbloom projects 00:55:24 \\u2013 2020 Q1 PSF Fellow Member! 00:56:32 \\u2013 PyCon 2020 moves to online only 00:58:45 \\u2013 How would you learn Python if starting from scratch? 01:02:10 \\u2013 Thanks and ending Show links: Thea\\u2019s blog: thea.codes GameMaker Google Cloud platform Flutter: UI toolkit Nox Break the Cycle: Three excellent Python tools to automate repetitive tasks - Pycon 2019 ConductHotline Genesynth: Creating a Sega-inspired synthesizer Circuit Python Contributing to CircuitPython Lessons learned from building a custom CircuitPython board Circuit Playground Express Nina Zakharenko CircuitPython Twitch Streams Thea\\u2019s thoughts on CircuitPython: Blog post Winterbloom Store John Edgar Parks: Sol quantizing demo DigiKey KiCad series Code with Mu Celeste: video game soundtrack PyCascades PSF Fellows 2020 Q1 PyCon 2020: Online Support the podcast & join our community of Pythonistas\",\"3446\":\"Stack Exchange Podcast - Episode #22 w\\/ Paul Biggar by The Stack Overflow Podcast\",\"3584\":\"Welcome to ISSUE #50 of the Overflow! This newsletter is by developers, for developers, written and curated by the Stack Overflow team and Cassidy Williams at Netlify. We lined up a whole bunch of goodies for our big five-oh: how to write a great resume from a hiring manager who reads hundreds each year, the etiquette of pull requests, and making progress bars tell the truth. From the blog How to write an effective developer resume: Advice from a hiring manager stackoverflow.blog Based on reviewing hundreds of resumes per year and researching a book, here are the seven pieces of advice for engineers on writing a resume that represents you as fairly as possible. Does your organization need a developer evangelist? stackoverflow.blog One of the best ways to attract talented programmers these days is great developer evangelism. We share some tips to help you determine if your organization is ready to invest in this area. This computer science degree is brought to you by Big Tech stackoverflow.blog An upgrade to a popular CSS framework and a discussion of what happens when big corporations support college courses and supply curriculum. The DevOps Reading List: Choosing your next DevOps book promotion Alex Yates shares an epic blog post of DevOps reading list recommendations. His list covers some of the most widely respected DevOps books and includes a decision tree to help you decided which ones you should read first. Interesting questions Should I submit a pull request to correct minor typos in a Readme file? softwareengineering.stackexchange.com Some meetings can just be emails, and some emails can just be pull requests. Why is \\u2018-ethane\\u2019 in \\u2018methane\\u2019? chemistry.stackexchange.com It\\u2019s all Greek to us. Is there any way of improving Doom graphics when running it on DOSBox? superuser.com \\u201cA secret is revealed!\\u201d Why is a link in an email more dangerous than a link from a web search? security.stackexchange.com Why avoid email links when you click them on the web? Well, you tell children not to accept candy from strangers, but let them buy it at the store. Links from around the web Why it\\u2019s good for users that HTML, CSS and JS are separate languages hiddedevries.nl HTML, CSS, and JS are separate languages, all for the web platform. But should they be separate? While some have argued for them to merge, here\\u2019s an interesting take arguing their separation is valuable. Spotify music taste analysis project medium.com Here\\u2019s a fun project log where a developer describes how she classified her friends\\u2019 musical tastes with machine learning. What are SQL joins? Types of SQL joins explained dev.to You may have heard of SQL joins, but do you know the differences between them? Here\\u2019s a great summary explaining the various types of SQL joins. Progress bars still lie: Please fix them web.eecs.utk.edu Though they likely don\\u2019t mean to be, progress bars aren\\u2019t exactly the most honest things in the world. Can that be fixed? Want to see who\\u2019s still hiring? Check out our job board! The post The Overflow #50: A CS degree from Big Tech appeared first on Stack Overflow Blog.\",\"3401\":\"With Bitcoin hitting all time highs, there has been a lot of speculation about what will happen next in the market crypto market. Meanwhile, regulators are targeting Ripple with a lawsuit and arguing that crypto isn't really a currency after all. You have until Jan, 4, 2021 to participate in our annual Winter Bash. By answering questions on Stack Overflow and across Stack Exchange, you can unlock some unique digital flair for your avatar. Don't forget to tune in the first day of the new year for episode 300 of the podcast, we booked a very special guest. Check out this episode to learn more..\",\"3324\":\"Stack Exchange Podcast - Episode #64 - Diverse Hiring and a Cat Named Alan Turing by The Stack Overflow Podcast\",\"3328\":\"That skit made it to the front page of Reddit, and was soon seen across the internet. It's nice to make people laugh, but following the surge of interest, Emily also had to deal with severe harassment and cyber stalking. She wrote a piece about the experience which you can find here. In this episode, we discuss how moderation can be improved and the work that remains to be done to make the software industry feel safe and inclusive for everyone.\",\"3502\":\"Stack Exchange Podcast - Episode #27 w\\/ Dave Winer by The Stack Overflow Podcast\",\"3393\":\"Our guests this week were two of our employees: Yaakov Ellis and Stephanie Cantor. Yaakov is a Principal Web Developer, Community Advocate on the Public Platform team at Stack Overflow, and Former Team Lead for Internal Development at Stack. Stephanie is the Program Manager for Community Strategy at Stack. Want to learn more about how the Community-athon worked? Read up on it here. And yes, of course there was a leaderboard and internet points. Yaakov was undercover as a brand new user, but some of his answers gave him away. Can you spot the tell? Our very own CEO spent a lot of time asking extremely important and nerdy question on our SciFi Stack Exchange. We bumped our engagement from employees by more than 100%. Many questions were asked, much knowledge was spread.\",\"3569\":\"Stack Overflow Podcast - Episode #39 by The Stack Overflow Podcast\",\"1853\":\"Adding items to a list is a fairly common task in Python, so the language provides a bunch of methods and operators that can help you out with this operation. One of those methods is .append(). With .append(), you can add items to the end of an existing list object. You can also use .append() in a for loop to populate lists programmatically. In this tutorial, you\\u2019ll learn how to: Work with .append() Populate lists using .append() and a for loop Replace .append() with list comprehensions Work with .append() in array.array() and collections.deque() You\\u2019ll also code some examples of how to use .append() in practice. With this knowledge, you\\u2019ll be able to effectively use .append() in your programs. Free Download: Get a sample chapter from Python Basics: A Practical Introduction to Python 3 to see how you can go from beginner to intermediate in Python with a complete curriculum, up-to-date for Python 3.8. Adding Items to a List With Python\\u2019s .append() Python\\u2019s .append() takes an object as an argument and adds it to the end of an existing list, right after its last element:\",\"226\":\"Finally got home on Christmas to admire my beautiful #nnfs by @Sentdex and @daniel_kukiela\",\"3326\":\"Stack Exchange Podcast - Episode #13 w\\/ Jin Yang by The Stack Overflow Podcast\",\"3265\":\"Our Uprisor podcast series offers engaging Future of Work conversations with enterprise leaders and doers. Clinton Bonner, VP at Topcoder, recently spoke with Mark Searle, a lecturer and industry fellow at UC Berkeley College of Engineering\\u2019s Sutardja Center for Entrepreneurship. Mark is also the managing director of the Innovation Acceleration Group. Clinton and Mark discuss Mark\\u2019s concept of \\u201cintentional serendipity\\u201d, the importance of business model innovation, and what a future of flexible work looks like. Listen to their conversation, and check out some of the highlights below. Intentional Serendipity Clinton mentions that he was inspired by a term Mark coined: \\u201cintentional serendipity\\u201d. Mark explains that innovative concepts and inventions can seem like lucky accidents, striking out of the blue, but in reality they happen when people and enterprises are prepared, when they are open to change and have the culture and systems in place to take advantage when inspiration strikes. He emphasizes that enterprises have to plan for innovation, rather than setting it aside as a sideshow to their primary work. Business Model Innovation One of Mark\\u2019s main areas of focus is business model innovation. He explains that many engineers think that if they just come up with the perfect invention, it will automatically bring value to the world. Mark wants them to understand that they need business model innovation along with their product innovation to actually deliver that value. And he points out that this kind of work is just as much a science as the more technical aspects of engineering\\u2014it involves hypotheses, testing, and data. As he puts it, \\u201can experiment doesn\\u2019t have to have test tubes and molecules, it can have conversations.\\u201d Looking to the Future Clinton asks what disruptions brought about by the pandemic will stick going forward. Mark describes the companies that will survive this crisis (and others): the ones that are prepared for the world to change, and that have nimbleness and flexibility. And the workforce will remain flexible, too, as Mark believes that more people will turn to the gig economy, holding more than one job rather than being tied to a single company. While that\\u2019s been seen in the past as insecure or unstable, he hopes \\u201cthat we\\u2019re going to build the security into a life where we all work for more than one place, thing, or group\\u201d. Thanks to Mark for sharing his unique perspective with us. For more technology conversations centered on the Future of Work, check out the Uprisor podcast. \\u201cEmbracing my definition of innovation requires a kind of humility, frankly.\\u201d \\u2013 Mark Searle Uprisor podcast A unique future of work discussion crafted for enterprise leaders Listen to the Podcast The post Is it Luck or Is It Intentional Serendipity? An Uprisor Innovation Conversation with Mark Searle appeared first on Topcoder.\",\"1865\":\"In this course, you\\u2019ll see two items to add to your Python string formatting toolkit. You\\u2019ll learn about Python\\u2019s string format method and the formatted string literal, or f-string. You\\u2019ll learn about these formatting techniques in detail and add them to your Python string formatting toolkit. In this course, you\\u2019ll learn about: The string .format() method The formatted string literal, or f-string [ Improve Your Python With \\ud83d\\udc0d Python Tricks \\ud83d\\udc8c \\u2013 Get a short & sweet Python Trick delivered to your inbox every couple of days.\",\"1812\":\"Given two integers L and R, the task is to find the count of numbers in the range [L, R] having prime digits at prime\\u2026 Read More The post Count numbers in a given range having prime and non-prime digits at prime and non-prime positions respectively appeared first on GeeksforGeeks.\",\"3286\":\"Stack Overflow Podcast - Episode #19 by The Stack Overflow Podcast\",\"751\":\"Could Dave recreate audio from a wav file preview image grabbed from a screen cap? More about David Domminney Fowler: https:\\/\\/youtube.com\\/c\\/DavidDomminneyFowler https:\\/\\/www.facebook.com\\/computerphile https:\\/\\/twitter.com\\/computer_phile This video was filmed and edited by Sean Riley. Computer Science at the University of Nottingham: https:\\/\\/bit.ly\\/nottscomputer Computerphile is a sister project to Brady Haran's Numberphile. More at http:\\/\\/www.bradyharan.com Original Image: https:\\/\\/photos.app.goo.gl\\/c4pPY8xpCF6cNmTF8 Dave's Code: (angle brackets weren't allowed in YT description) using System; using System.Collections.Generic; using System.Drawing; using System.Linq; using System.Text; using System.Threading.Tasks; namespace Extract_Audio { internal class Program { private static void Main(string[] args) { string file = \\\"computerphile.png\\\"; Bitmap b = new Bitmap(@\\\"g:\\\\Computerphile\\\\\\\" + file); var values = new System.Collections.Generic.ListANGLEBRACKETOPENintANGLEBRACKETCLOSE(); for (int x = 0; x ANGLEBRACKETOPEN b.Width; x++) { int max = 0; int min = b.Height; for (int y = 0; y ANGLEBRACKETOPEN b.Height; y++) { if (b.GetPixel(x, y).GetBrightness() ANGLEBRACKETCLOSE 0.5) { min = Math.Min(y, min); max = Math.Max(max, y); } } values.Add(min); values.Add(max); } int filter = 4; for (int x = 0; x ANGLEBRACKETOPEN values.Count - filter; x++) values[x] = (int)values.GetRange(x, filter).Average(); var f = new System.IO.StreamWriter($@\\\"g:\\\\Computerphile\\\\{file}.txt\\\"); foreach (var v in values) f.WriteLine(v); f.Close(); var wf = System.IO.File.OpenWrite($@\\\"g:\\\\Computerphile\\\\{file}.wav\\\"); var RIFF_HEADER = new byte[] { 0x52, 0x49, 0x46, 0x46 }; var FORMAT_WAVE = new byte[] { 0x57, 0x41, 0x56, 0x45 }; var FORMAT_TAG = new byte[] { 0x66, 0x6D, 0x74, 0x20 }; var AUDIO_FORMAT = new byte[] { 0x1, 0x0 }; var SUBCHUNK_ID = new byte[] { 0x64, 0x61, 0x74, 0x61 }; int BYTES_PER_SAMPLE = 1; int samplerate = 48000; int channelcount = 1; int lastv2 = 0; int stretch = 9; int datalength = values.Count * stretch * BYTES_PER_SAMPLE; int byteRate = samplerate * channelcount * BYTES_PER_SAMPLE; int blockAlign = channelcount * BYTES_PER_SAMPLE; wf.Write(RIFF_HEADER, 0, RIFF_HEADER.Length); wf.Write(BitConverter.GetBytes(datalength + 40), 0, 4); wf.Write(FORMAT_WAVE, 0, FORMAT_WAVE.Length); wf.Write(FORMAT_TAG, 0, FORMAT_TAG.Length); wf.Write(BitConverter.GetBytes(16), 0, 4); wf.Write(AUDIO_FORMAT, 0, AUDIO_FORMAT.Length); wf.Write(BitConverter.GetBytes(channelcount), 0, 2); wf.Write(BitConverter.GetBytes(samplerate), 0, 4); wf.Write(BitConverter.GetBytes(byteRate), 0, 4); wf.Write(BitConverter.GetBytes(blockAlign), 0, 2); wf.Write(BitConverter.GetBytes(BYTES_PER_SAMPLE * 8), 0, 2); wf.Write(SUBCHUNK_ID, 0, SUBCHUNK_ID.Length); wf.Write(BitConverter.GetBytes(datalength), 0, 4); foreach (var v in values) { double v2 = (v - values.Min()) \\/ (double)(values.Max() - values.Min()) * 255; for (int x = 0; x ANGLEBRACKETOPEN stretch; x++) { double v3 = x \\/ (double)stretch * v2 + (1 - x \\/ (double)stretch) * lastv2; wf.WriteByte(Convert.ToByte(v3)); } lastv2 = (int)v2; } wf.Close(); } } }\",\"3441\":\"Special SRE takeover! David and Ilana are joined by Tom Limoncelli, Mark Henderson, and Jason Harvey from the SO site reliability team to discuss the infrastructure and maintenance of the Stack Overflow sites. Plus, we're hiring! https:\\/\\/stackoverflow.com\\/company\\/work-here\",\"946\":\"The Python return statement is such a fundamental part of writing functions. Is it possible you missed some best practices when writing your own return statements? This week on the show, David Amos returns with another batch of PyCoder\\u2019s Weekly articles and projects. We also talk functional programming again with an article on the Python map function and processing iterables without a loop. We cover several other articles and projects from the Python community including, interactive data visualization with Pygal, everything you need to know about namedtuples, PEP 638 syntactic macros, python for kids, the new Nvidia Jetson board, and a reinforcement learning project named football. Topics: 00:00:00 \\u2013 Introduction 00:01:33 \\u2013 Interactive Data Visualization in Python With Pygal 00:06:40 \\u2013 Python\\u2019s map(): Processing Iterables Without a Loop 00:12:51 \\u2013 Everything You Need to Know About Python\\u2019s NamedTuples 00:19:46 \\u2013 PEP 638: Syntactic Macros 00:26:43 \\u2013 Video Course Spotlight 00:27:57 \\u2013 The Python return Statement: Usage and Best Practices 00:34:42 \\u2013 Python for Kids 00:38:03 \\u2013 Build a Face Recognition System With the Nvidia Jetson Nano 00:42:32 \\u2013 football: Reinforcement Learning Environment 00:45:51 \\u2013 Thanks and goodbye Show Links: Interactive Data Visualization in Python With Pygal \\u2013 Pygal is an overlooked library for creating interactive plots that can be turned into SVGs with an optimal resolution for printing or displaying on webpages. Learn how it works in this introductory tutorial. Python\\u2019s map(): Processing Iterables Without a Loop \\u2013 In this step-by-step tutorial, you\\u2019ll learn how Python\\u2019s map() works and how to use it effectively in your programs. You\\u2019ll also learn how to use list comprehension and generator expressions to replace map() in a Pythonic and efficient way. Everything You Need to Know About Python\\u2019s NamedTuples \\u2013 Are you using NamedTuple in your code? If you aren\\u2019t, learn what they are and why you should consider using them in this comprehensive tutorial. PEP 638: Syntactic Macros \\u2013 This brand new PEP, which is still in draft mode, proposes adding support for syntactic macros to Python. Syntactic macros are compile-time functions that extend the language\\u2019s syntax without adding any new complexity to the language as a whole. The Python return Statement: Usage and Best Practices \\u2013 In this step-by-step tutorial, you\\u2019ll learn how to use the Python return statement when writing functions. Additionally, you\\u2019ll cover some good programming practices related to the use of return. With this knowledge, you\\u2019ll be able to write readable, robust, and maintainable functions in Python. Python for Kids \\u2013 In this ten part series, senior software engineer Kevin Thomas presents a kid-friendly comprehensive Python development tutorial utilizing a micro:bit development board. The GitHub repo contains all of the sample code as well as links to each tutorial in the series on LinkedIn. The first seven parts are published and the last three are coming soon! Projects: Build a Face Recognition System With the Nvidia Jetson Nano 2GB and Python \\u2013 The Nvidia Jetson Nano is a single board computer similar to a Raspberry Pi. The Jetson Nano really packs a punch, however, thanks to its onboard Nvidia Maxwell GPU. football: Reinforcement Learning Environment Where Agents Learn to Play Football Additional Links: Pygal: Sexy python charting Bokeh: Interactive visualization library Common Python Data Structures (Guide) - Real Python article The Ultimate Guide to Data Classes in Python 3.7 - Real Python article PEP 572 \\u2013 Assignment Expressions - Walrus Operator Python\\u2019s reduce(): From Functional to Pythonic Style - Real Python article NVIDIA Jetson Nano Google Research Football with Manchester City F.C. Support the podcast & join our community of Pythonistas\",\"3381\":\"If you're interested in learning a bit of BBC Basic, there is a fun introduction here. You can tweet at this bot, and it will run the contents as code and reply with a video of the results. If you are interested in life-logging and want to see it done with a lot of very pretty graphs, check out this post, My Year in Data. Last but not least we chat about Svelte, which lets you create \\\"cybernetically enhanced web apps.\\\" Shout to Murali, a listener who suggested this topic. Our lifeboat of the week goes to koekenbakker for answering the question: R plots: Is there a way to draw a border, shadow or buffer around text labels?\",\"3261\":\"If you\\u2019re really considering adopting crowdsourcing, we wrote the book on the 5 questions you\\u2019re likely to hear. Now as we start the new year, we want to share the words of someone who truly gets it\\u2014Paul Hlivko, CTO and CXO of Wellmark Blue Cross and Blue Shield. Wellmark was honored as Program of the Year at the 2020 Topcoder Innovation Awards. The event was a chance to celebrate the people and companies who are taking risks and doing exceptional work on the Topcoder platform, and Paul presented a special customer keynote. Listen and read on to hear why Paul firmly believes that leveraging on-demand talent is the right approach to solving problems and leading a technology organization forward. WHY IT MATTERS Wellmark has around 2,000 employees, 19,000 customers and close to 2 million members. They have been around for about 80 years, and Paul shares how that history creates an opportunity to continually \\u201clook at ourselves, innovate, disrupt our own ecosystem, especially within a technology division.\\u201d Because of the amount of disruption in the healthcare ecosystem and business model, they need a robust, diverse, and scalable set of talent across the globe. \\u201cWith crowdsourcing, we can dynamically scale up and scale down, even during a pandemic, to match the work volumes and innovation demands of our organization.\\u201d \\u2014Paul Hlivko MAKING IT HAPPEN Paul outlines three steps organizations should take to drive adoption and scale with on-demand talent: Introduce crowdsourcing to teams: In Wellmark\\u2019s case, they first did this internally to get their team comfortable with the concept and workflows. Scale the workload for the crowd: Think about the components of your shared services and break them down. Then organize it efficiently for your business. Ensure the team has enterprise coverage and a mature product management skillset. They need a strong adherence to a reference architecture, which is critical to achieving enterprise integration when you\\u2019re running shared services. THE RESULTS Over 24 months, Wellmark has executed over 25 projects with Topcoder. Paul closes by expressing how enterprise crowdsourcing has affected him and his organization: \\u201cThis is really transformative for our teams. We have teams of one or smaller that are crowd powered. We get access to more diversity for talent and problem solving. We get to leverage the intellectual capital of more people. We get the right person to do the right work. We get increased resiliency. During a pandemic, we get a lot faster speed to market, and when we\\u2019re innovating, rather than just one idea from one team member or partner, we can get lots of optionality. At the end of the day, the talent demand curve is a better match.\\u201d Be Prepared ACE THESE 5 QUESTIONS YOU\\u2019LL HAVE TO ANSWER ON CROWDSOURCING download the paper The post Enterprise Crowdsourcing Stories \\u2013 Paul Hlivko on why An All-In Talent Strategy is the Way Forward appeared first on Topcoder.\",\"3306\":\"You can find out more about Sir Berners-Lee's work on Solid here. Other topics discussed in this episode: Docker puts a limit on free containers. That has to be good for the environment. But is it also good for Docker and the future of its products? Sometimes, forcing yourself to make something worth purchasing helps drive innovation. The Tao of Programming isn't new, and some of its technical references are a bit out of date. But it's still good for a laugh and little bit of enlightenment-lite. Are you interested in putting on your own drone light show? Intel offers options to fit a range of budgets. This week's lifeboat badge goes to JCL for answering the question: C# compiler: CS0121: The call is ambiguous between the following methods or properties.\",\"531\":\"When Sun added network abilities to a messaging feature, one user managed to contact more people than he'd bargained for. Dr Julian Onions takes us through the rwall incident of 1987. https:\\/\\/www.facebook.com\\/computerphile https:\\/\\/twitter.com\\/computer_phile This video was filmed and edited by Sean Riley. Computer Science at the University of Nottingham: https:\\/\\/bit.ly\\/nottscomputer Computerphile is a sister project to Brady Haran's Numberphile. More at http:\\/\\/www.bradyharan.com\",\"3551\":\"You can find the original tweet here. AWS will work with them on publicity and open source their version so that there can be a flow of value in both directions. You can learn more about Tim's company, Checkly.hq, which works on active monitoring for developers. The team there also works on Headless Recorder, a Chrome extension that records your browser interactions and generates a Playwright or Puppeteer script. They also operate The Headless Dev, which helps coders learn Playwright and Puppeteer. This week's Lifeboat badge goes to Ravindra Bagale for answering the question: How to Convert Integer to Character Array using C\",\"597\":\"Book a mock interview or coaching session with a Google engineer as early as tomorrow on interviewing.io! Sign up here: https:\\/\\/interviewing.io\\/signup?utm_source=youtube.com&utm_medium=referral&utm_campaign=video_link Check out the feedback by the Google interviewer and the full transcript on https:\\/\\/interviewing.io\\/recordings\\/Java-Google-22\\/ Disclaimer: All interviews are shared with explicit permission from the interviewer and the interviewee, and all interviews are anonymous. interviewing.io has the sole right to distribute this content.\",\"3571\":\"The launch party of our Judaism Stack Exchange Site: Mi Yodeya\",\"3345\":\"Stack Exchange Podcast - Episode #04 w\\/ Jon Skeet by The Stack Overflow Podcast\",\"4973\":\"Internal information is constantly evolving. Oftentimes, it\\u2019s challenging to keep up with the latest information. Between writing code, PRs, testing, active deploys, and so much more, there can be an overflowing number of things on your team\\u2019s plate. That\\u2019s why we\\u2019re excited to share the launch of a new feature within Stack Overflow for Teams: For You. For You is a personalized feed that displays in every Team user\\u2019s instance. It offers actions and alerts to keep your knowledge base up-to-date. This new feed replaces the current inbox with the goal of enabling users to get tasks done more efficiently. How does it work? For You can be found within the left-hand navigation bar. The highlighted number represents the outstanding tasks to help users uncover and contribute more knowledge within their Team. Making these activities easy to find helps to ensure content doesn\\u2019t go stale and streamlines your user\\u2019s knowledge sharing tasks. No setup is required, and the new feature is available to our Basic and Business customers today and coming soon to Enterprise customers in the upcoming 2021.1 release. To learn more about For You and the other features available on Teams, visit our features page or sign up for a free trial. The post Personalized feeds now available on Teams appeared first on Stack Overflow Blog.\",\"3375\":\"Stack Overflow Podcast - Episode #14 by The Stack Overflow Podcast\",\"3262\":\"The clock ticks midnight and boom, it\\u2019s a new year. A fresh start. You are ready to make things happen. You may think that on January 1 of every year a fresh start has arrived. True, the first of something makes it an easy sell to your inner self to start fresh but the real truth is, you can decide to start fresh any morning, or even afternoon of the year. Starting fresh is a mindset and holding yourself accountable, though hard, is definitely rewarding. I don\\u2019t know about you but crossing items off my list is so immensely satisfying! Each of us have habits, some good and some not so good but all of which are a part of us. My goal for this year of 2021 is not only to break some of my not so good habits but start adding better habits as well. My goal of this blog post is to show you what habits I plan to start and how the Topcoder community can help YOU with new habits as well. Habit #1: Make 15 Minutes Matter For me, it\\u2019s a lunch break. You\\u2019d think that eating lunch is a normal behavior. 2020 turned life upside down and work seemed to run from early mornings into late nights with no concept of normal meal times or a break from work. This year a simple habit fix for me is to stop work and have a quick 15 minute lunch NOT at my desk. Don\\u2019t look at the computer screen or the phone and just take a break to eat. In 15 minutes you can find a new gig at Topcoder to apply for. You can peruse our forums and say hi to the newbies or check out the approach our best data scientists take when they start a problem. You can read our blog posts to see what\\u2019s the latest or scroll through our open challenges. In 15 minutes you could earn money by doing a quick First2Finish challenge potentially. Give Topcoder 15 minutes of your time a day at least to see what kind of value it can add to your life and your career. Habit #2: Be Positive You know that saying, dress for the job you want to have? How about we change that to feel the way you want to feel. 2020 left many of us lonely, depressed, sad, and bored. No one wanted to feel that way. My personal goal for this year is to stay positive no matter what is happening in the world. Easier said than done but keeping a positive mindset can truly make a difference in your life. I\\u2019ve set up an hour long chat each Monday to spend my time with the community and my community team. It\\u2019s a chance for me to get to know more members and hear from you. We can network, chit chat, answer questions you have, and have an actual connection. Most importantly, give us all a bright spot in our week. Besides my family and friends, this Topcoder community and team are my favorite people. Join me every week to have a positive hour in your life. Open to all! Habit #3: Set a Goal I have so many goals in life and in my career and it\\u2019s very important that when you set your mind to something, you crush it. This year, my goal is to spend more time talking and corresponding with the community. I look forward to meeting more of you and helping you reach your goals. The amount of opportunities we are offering for our members this year is growing every day. I want you to take a good look at all we have to offer and pick something to crush. Compete in your first SRM or RDM, learn how to use Sketch, take part in every Topcoder Skill Builder challenge we run, or even apply and get a gig; the opportunities are endless! Tell me what your goal is, let me know if we can help, and join me every week and we can help each other. Let me know what your goal is for 2021 as a community member and how I can help you reach it. The post Breaking Bad: 2020 Habits appeared first on Topcoder.\",\"3597\":\"Wealthy individuals and corporations have been giving gifts and getting libraries named after themselves for decades. But there is a new trend emerging \\u2013 big tech companies are contributing everything from supplies to curriculum. You can read more about the operating systems and business principles schools are adopting from their corporate sponsors here. You can read about the latest version of Tailwind and what it has to offer here. We\\u2019ll be back with more lifeboats after the Thanksgiving holiday. TRANSCRIPT The post Podcast 290: This computer science degree is brought to you by Big Tech appeared first on Stack Overflow Blog.\",\"3607\":\"Welcome to ISSUE #56 of the Overflow! This newsletter is by developers, for developers, written and curated by the Stack Overflow team and Cassidy Williams at Netlify. This week, we say farewell to Winterbash 2020, look for evidence that a program is being emulated, and create a chess AI that matches the skill of a player instead of just beating them. From the blog Ciao Winter Bash 2020! stackoverflow.blog Winter Bash 2020 has come to an end. While we\\u2019re packing the hats away for next year, let\\u2019s take a look at some of the community contributors that brought a smile to our faces. Open source has a funding problem stackoverflow.blog Relying on volunteers to maintain every open source project isn\\u2019t long term sustainable. We explore some ideas for funding development to keep these projects moving. Podcast 302: Programming in PowerPoint can teach you a few things stackoverflow.blog Is frontend the domain of artists, while backend becomes increasingly commoditized? Not so fast, says the API. Webinar: A Guide to Cloud-Native Continuous Delivery promotion Join expert presenters from the DevOps Institute and AWS to learn how to navigate through the challenges of adopting cloud-native Continuous Delivery. You\\u2019ll take away best practices for streamlining the delivery of container-based applications. Interesting questions How to detect a real Commodore 64, THEC64, or VICE emulator in software? retrocomputing.stackexchange.com What if [dramatic pause] we are all just living in an emulator? Is there a theoretical possibility of having a full computer on a silicon wafer instead of a motherboard? electronics.stackexchange.com There\\u2019s a reason that you don\\u2019t put all of your eggs in one basket. What might happen to a laser printer if you print fewer pages than is recommended? superuser.com You\\u2019ll save money on buying toner cartridges, for one. Why is email often used as the ultimate verification? security.stackexchange.com \\u201cEmail is used for the same reasons Social Security Numbers get reused as account identifiers in the US: Ubiquity.\\u201d Links from around the web How to run VS Code as a container for remote development dev.to Getting up and running with containers is an essential skill to understand as remote work becomes more and more of the norm. Here\\u2019s how to run one right from your editor. An engineering argument for basic income scottsantens.com This is a passionate, interesting perspective on universal basic income from an engineer\\u2019s perspective. The human side of AI for chess www.microsoft.com It\\u2019s no secret that artificial intelligence researchers have \\u201cbeaten\\u201d games like chess and go with bots that learn against themselves. Here\\u2019s a great write up for a different angle: setting up AI players to match its skill to its human opponent. Super optimized static sites jacobdoescode.com Jekyll is a whopping 12 years old now and still works well, but does show its age in some places. Here\\u2019s a fun project showing its templating being re-implemented in React. Spend less time in Slack. Try Stack Overflow for Teams. The post The Overflow #56: An engineering argument appeared first on Stack Overflow Blog.\",\"4856\":\"In this article, we are going to learn about different hyperparameters that exist in a Random Forest Classifier. We have already learnt about the implementation\\u2026 Read More The post Hyperparameters of Random Forest Classifier appeared first on GeeksforGeeks.\",\"3514\":\"Stack Overflow Podcast - Episode #16 by The Stack Overflow Podcast\",\"3395\":\"Stack Exchange Podcast - Episode #55 - Don't Call It A Comeback by The Stack Overflow Podcast\",\"3591\":\"Smart devices are increasingly used in a wide variety of applications, from smart home systems to industrial controls. The Internet of Things market is expected to grow to over $1.5 trillion by 2025. More and more devices are including network-accessible functionality, but sadly many of them do not take appropriate security measures. Malicious actors can infiltrate poorly secured devices and collect them into what is called a \\u201cbotnet.\\u201d The effects of these botnets can be dramatic, sometimes resulting in outages on a global scale. Ransomware attacks are becoming commonplace. Even connected devices that seem to be harmless, such as fish tanks, can be used as vectors for costly attacks. In order to respond to threats, designers must provide the ability for remotely deployed systems to receive software updates, which if implemented poorly, can provide another vector for attacks. In this post, we will discuss some security and privacy considerations for connected devices and dig into specifics related specifically to the over-the-air (OTA) software update framework in an enterprise setting. We start by reviewing some general security principles that should be a part of any system design. We will then examine considerations for the update framework itself, including design decisions that should be made early to avoid retrofitting the system layer on. We will then detail the security needs of the target device operating system. Finally, we will present some thoughts on how to securely integrate an update system into an application development workflow. General security principles Security is a process and a mindset. There is no magic switch we can toggle to make a system secure. It is important to stay vigilant, reviewing existing security flaws, and adapting to your workflow to account for them. New classes of attacks appear seemingly every day and engineering teams must prepare for this in order to remain secure. The white hats have to get it right every time while the black hats only need to get it right once. You need to identify what resources are worthy of being protected. A database of weather readings is unlikely to contain proprietary information whereas a customer database most certainly is. You will want to tailor the security to match the severity of a breach. The objective of most security devices is to increase the cost of an attack or reduce the value of any successful breaches. It is important to realize that the OTA update system is generally only concerned with potential attacks and vulnerabilities to the update process itself. It does not provide any protection against attacks that happened outside of the update change. For these kinds of attacks, you need to rely on other components provided by your operating system. One extremely important general security consideration is the principle of least privilege. This states that components of your system should have the minimum access necessary to achieve their required functions. This helps to limit damage that can be done when a particular component is breached. Other things to consider when designing your system, but not directly related to OTA updates are: Access control systems (such as SELinux or SMACK) Secure boot Read-only storage Security hardware Security considerations for an update framework Besides the general security principles that any networked device should follow, OTA update frameworks have some particular concerns. These concerns affect three parts of your update process: server-side, where updates are stored and deployed client side, the device receiving the update and the software running on the device that implements OTA updates tooling, the certificates, keys, and other tools that ensure the process is secure. Server-side One of the first decisions when designing the server side of your update framework is where you will host the system. It is possible to host it on servers that you own but you need to consider the physical security of them. Who should have access? How is that controlled, and more importantly revoked? What other security is in place? Are there appropriate security cameras and other measures? We\\u2019ve all seen movies or TV shows where characters put on a uniform and carry a clipboard (or more likely these days, a tablet) and simply walk by the front security desk in a building. Getting physical access to these systems can easily bypass many of the other security mechanisms we have in place. Due to the complexity of managing your own physical servers, more and more designs are using cloud providers to outsource those issues. Vendors such as Amazon, Google and Microsoft provide robust systems with complete remote management that should be considered for your server setup unless you already have expertise and physical infrastructure in place. Building your server components using container systems such as Docker give you great flexibility in the choice of cloud vendor and allow you the possibility to migrate between them should it be needed. The biggest advantage of using these providers is that they handle all the physical security needs allowing you to focus on your applications. You are normally still responsible for the digital security of your cloud computing nodes, but the providers generally provide sane defaults, which can speed your development significantly. Special care should be taken with the assets that are stored in the cloud. There have been many data leaks due to improper permissions on cloud-stored data. These issues are not problems with cloud storage but rather with specific poor implementation choices. Any update framework will require communication between the client devices and the server. To ensure privacy of data, this will be handled over an encrypted connection. Protocols such as HTTPS and MQTT are often used here and each have their own specific requirements. Both HTTPS and MQTT connections can be encrypted with TLS. It is important to use TLS keys properly signed and attested to by a known certificate authority (CA). This allows client devices to verify the identity of the server without needing specific verification keys in the device. This also means that the server keys can be updated without modification to the client as the certificate authorities will be aware of the changes. User management in the server is another area of concern that should be addressed early in your design. Login credentials stored by your server should be properly salted and encrypted. This provides good protection even when users reuse passwords across sites. Assign roles to individual users (ie Role Based Access Control or RBAC) instead of individual permissions to limit access to resources in a predictable and auditable way. But your system should be able to revoke specific permissions or remove a users access entirely to minimize the potential damage that can occur from large device fleets. Update frameworks will need to accept unsolicited connections from devices deployed to the field. It is common for devices to be packaged and on a shelf for a long time before they are powered on and connected for the first time. Identifying valid devices and more importantly, ignoring invalid connection attempts are two of the most important features of the server in an update framework. Each device should have a unique identifier, such as a serial number, that should be paired with a cryptographically secure key. Industry best practices for key lengths and algorithm selection will help protect against brute force attacks. The development staff must also monitor security reports for new weaknesses that may be discovered in particular algorithms so that they can adjust accordingly. All non-trivial software has bugs and your update framework will require continual updates through the life of your project. With a well maintained package, updates will be planned for and easy to apply. This also allows you to add functionality which may provide greater value for your use case. Your update framework will probably have dependencies on other packages, such as libraries provided by third parties. The update framework engineering team must monitor the development of any dependencies and ensure that bug fixes for these components are quickly incorporated into the product. Finally, consider what logging and reporting is available from your update framework. This is crucial for security issues, as well as for the smooth operation of your system. How easy is it to get the reports you need without getting overwhelmed by large amounts of extraneous information? Can you get automatic reporting? Are there priorities and escalations for security issues and other operational concerns? When deciding on a logging architecture, take special care that information contained in the logs does not cause further problems. Logs may contain sensitive information and should be encrypted if kept on the device or completely removed after transmitted off of the device. Client-side As discussed above, the communication channel between devices and the server should be encrypted. Industry standard protocols such as TLS should be used along with CA-signed certificates used on your server. This ensures that the device can validate that it is communicating with the expected server and removes the threat of man-in-the-middle attacks. A further level of security can be attained using a mutual-TLS system. This allows the server to verify the devices using a similar mechanism. Given that client devices are often deployed into hostile networking environments with little control of physical security available to device vendors, using hardware-based security keys should be strongly considered. These devices provide stronger security for the keys than simply storing them as files in the target filesystem. If bad actors can physically access the devices, then the filesystems are generally easily accessible. Using hardware keys provides another level of security to help ensure that the keys are not compromised. Update payloads should use cryptographic signatures. The strongest approach for this is to use public-key cryptography which will allow you to not only verify that the image being downloaded is unmodified, but also that it is authentic. Client software can validate the payload independently of the communication channel verification, which decouples your payload checks from the infrastructure. Effectively, this ensures that, even if your server is breached, allowing counterfeit payloads to be downloaded, they will never be installed as the signature verification will fail. Industry standard public\\/private key mechanisms should be supported. As for security implications of the update process itself, it is vital that the system support automatic rollbacks. This ensures that issues that occur during the upgrade process itself, such as loss of power or loss of connectivity, will not result in a bricked device fleet.After every deployment, the update framework must check that it is still able to communicate with the server to ensure that future updates can be installed. The framework should also provide a mechanism to allow system designers to create their own post-installation sanity checks, focusing on their unique application and tailored to check the features that are important to verify before considering an update completed. Tooling Any system that uses digital certificates and cryptographic keys needs a mechanism to replace these files over time. Whether done periodically as a precaution or as a result of a specific breach, it is best practice for your update framework to support this. Usually this will require a two-step update. The first update will use the old keys, but add in the new keys and re-authenticate with the framework using them. The second update will remove the old keys. Depending on the security needs of your application and particularly the risk tolerance your team has for protecting your private keys, you may want to consider using air-gapped systems for applying digital signatures to your system images. These are systems that are not connected to any networks but that have the tools necessary to sign the images. The private keys never need to leave this system so the risk of leaking them is very low. This does require a mechanism such as external hard drives to transport the images to and from the signing system so the risk is not completely eliminated but it is greatly reduced. Integrating an OTA software update framework into your product To successfully deploy a design with an automatic OTA update framework, there are several things you need to consider. The level of formality in your processes and design will depend on a number of factors including the size of your device fleet, the cost to rescue bricked devices, and the target audience. If your users are more of the hands-on variety (i.e. makers) then having a more manual system is appropriate. However, if you plan to roll out a fleet of thousands or tens of thousands of devices you will want as much automation as possible; relying on the end-users to run convoluted firmware update steps is a recipe for out of date devices. Modern software development relies heavily on build automation tools. Builds are run automatically on every commit or at the least, on a scheduled basis. The systems that manage these builds, known as continuous integration\\/continuous delivery (CI\\/CD) systems, have tools to help automate the deployment of new builds based on the phase of development and can be readily tailored to your development workflow. For example, your nightly \\u201cdevelopment\\u201d builds can be automatically uploaded to the OTA server and deployed to a targeted group of devices. This ensures that your QA team is ready to go each morning with the latest images for testing. Similarly, your \\u201cproduction\\u201d builds can be uploaded and staged for automatic deployment to your entire device fleet, easily keeping your devices in the field updated. When designing the software for a connected embedded device (such as IoT devices), you generally have a golden-master image containing the bits of software that are common across all devices. This image is likely programmed into the device in manufacturing, but can also be done as a post-manufacturing step if a manufacturing-specific image is used for burn-in diagnostics. On top of the golden-master bits, your system will likely need some unique details for each board. This can consist of security certificates, serial numbers, or any other data that will vary from one device to another. Many mechanisms can be used to populate the unique data to your devices but you need to plan for this. This data is generally needed elsewhere in your system. For instance, device identification certificates may need to be loaded into your server software so that your server will recognize and automatically admit devices when they connect for the first time. Proper handling of this device-specific data is critical to maintaining the security of your system as a whole. Using a properly designed OTA update framework should not introduce significant security issues into your design. The security considerations discussed above should minimize the impact of adding this functionality. However, note that adding software always increases your attack surface so it is crucial that you monitor the development of the update framework to ensure that you are including changes to that system as well as your own software. All software has bugs, but if you include a well maintained OTA-capable update framework in your design, then you will have the capability to respond to issues without having to resort to costly recalls or manual updates by end users. Wrapping up We have discussed many considerations for the OTA software update framework and general system security. We hope that it is clear that security is an ongoing concern, requiring vigilance and the ability to adapt to ever-changing threats. You cannot be completely secure, and as such, consider how you will respond when breached. Customers reward transparency and punish secrecy, so reveal as much as you can about a breach without reducing your ability to respond to future threats. Updating software is generally the first step in addressing security concerns, and the update system itself needs a security mindset. Using industry best practices, such as public\\/private key encryption, are a minimum requirement. Whether rolling your own or using a third party update framework, make sure to use well-maintained software that is updated regularly to address newly found issues and threats. If the open-source system you are using has no commits for several years, we strongly recommend you continue looking for something with an active development community. As a final note, please do not delay discussions of security until late in your design phase. This needs to be a part of your thinking from the very beginning of your project. Not all members of your team will be security experts but it is important to have a security mindset in your organization. The costs to your organization can be severe if your product is breached, especially if the public considers you to be negligent. Drew Moseley is the Chief Technical Architect at Mender.io. If you want to learn more about the best approaches to over-the-air software updates for IoT gateway devices, visit Mender.io and try the OTA software updater for free The post Security considerations for OTA software updates for IoT gateway devices appeared first on Stack Overflow Blog.\",\"3281\":\"Stack Exchange Podcast - Episode #15 w\\/ Michael Natkin by The Stack Overflow Podcast\",\"4848\":\"I am going to share my TCS Ninja profile interview experience through this short article to get you a clear idea about the complete hiring\\u2026 Read More The post TCS NQT Interview Experience (2020-21) appeared first on GeeksforGeeks.\",\"941\":\"In your quest to become a better developer, how do you find Python code that is at your reading level? What are good code bases or projects to study? What are the things holding you back from leveling up your Python literacy? This week we have Cecil Phillip on the show to discuss all of these common questions. Cecil is a Senior Cloud Advocate at Microsoft. Cecil has been learning Python in the open on Twitch with Brian Clark. They run a weekly event on Twitch, where they are live-streaming an interactive Python course. Cecil has a background in multiple languages and technologies, and now he\\u2019s learning Python, bringing an audience along the way! We start things off with a listener question and jump into a conversation about building up your Python skills. Then we\\u2019ll discuss common Python language stumbling blocks. Next we consider the importance of making personal projects, and documenting that code. We also touch on some unique skills employers are looking for. And we discuss working through impostor syndrome. Cecil talks about his podcast \\u201cAway from the Keyboard\\u201d and his plans to start it back up. In the show notes this week you\\u2019ll find links to resources we discuss, and several more that we didn\\u2019t have time to cover individually. Want your question featured on the show? Send us your question at realpython.com\\/podcast-question and we might feature it on a future episode of the show. Topics: 00:00:00 \\u2013 Intro 00:01:52 \\u2013 Cecil\\u2019s role at Microsoft 00:03:35 \\u2013 Twitch Stream with Brian Clark 00:05:07 \\u2013 Learning in front of an audience 00:13:05 \\u2013 Listener\\u2019s question 00:14:46 \\u2013 Finding code that\\u2019s at your level 00:20:31 \\u2013 Understanding more complex syntax in Python 00:23:40 \\u2013 Breaking down complexity 00:29:17 \\u2013 Translation of code 00:31:55 \\u2013 Importance of making projects and comments 00:36:28 \\u2013 Finding community 00:41:23 \\u2013 Open source contributing 00:42:25 \\u2013 Dealing with impostor syndrome 00:49:09 \\u2013 Looking for that first position 01:00:58 \\u2013 More project resources in show notes 01:02:55 \\u2013 Cecil\\u2019s podcast - Away from the keyboard 01:08:29 \\u2013 What are you excited about in the world of Python? 01:10:14 \\u2013 What is something you thought you knew about Python but were wrong about it? 01:12:01 \\u2013 What\\u2019s the next thing you want to learn in Python? 01:13:37 \\u2013 Read the actual Python docs 01:15:24 \\u2013 Thanks and goodbye Show links: Microsoft Developer Channel Cecil Phillip\\u2019s Twitter Cecil\\u2019s Github Microsoft Developer Twitch Official Microsoft Python Discord Away from the Keyboard: Podcast Python Decorators 101: Real Python video course Python Type Checking: Real Python video course 13 Project Ideas for Intermediate Python Developers: Real Python article Suggested project reading list: Flask: The Python micro framework for building web applications. Django: The Web framework for perfectionists with deadlines Howdoi: instant coding answers via the command line Curio: A coroutine-based library for concurrent Python systems programming scikit-learn: machine learning in Python SQLAlchemy: The Database Toolkit for Python Requests: A simple, yet elegant HTTP library Markupsafe: Safely add untrusted strings to HTML\\/XML markup Ask HN: Good Python codebases to read? The Hitchhiker\\u2019s Guide to Python: Reading Great Code Welcome! This is the documentation for Python 3.8 Support the podcast & join our community of Pythonistas\",\"3468\":\"No list of great hacks would be complete without the Samy worm that ran amok on Myspace back in 2005. As Rachel points out, lots of hackers start out as experimenters, naturally curious coders who enjoy learning the rules and seeing how far they will bend before they break. If any hack made it's way into the mainstream consciousness over the last decade, it was WannaCry. It introduced a mainstream audience to the concept of ransomware and, because of the impact it had on critical hospital equipment, showed just how far software has embedded itself into our society. If you want to learn more about the Fullstack Cyber Bootocamp, you can check it out here. You can find Rachel here or email her- rachel dot troy at fullstackacademy dot com. This week, as part of our security theme, we skipped the lifeboat, and picked this gem from our Information Security Stack Exchange. Remember, when in doubt, if you absolutely need to erase all data off a drive, a plasma cutter will always come in handy.\",\"223\":\"In a 4 hour long video regurgitating my own code as if it's his, with no mention in the github, youtube video content, or description about the actual source, this is his response. Classic.\",\"3310\":\"Stack Exchange Podcast - Episode #67 - The Firehose of Nerd-dom by The Stack Overflow Podcast\",\"3400\":\"Stack Exchange Podcast - Episode #26 by The Stack Overflow Podcast\",\"3837\":\"Given two arrays arr1[] and arr2[] consisting of N and M integers respectively, and two integers X and Y, the task is to check if\\u2026 Read More The post Check if X and Y elements can be selected from two arrays respectively such that the maximum in X is less than the minimum in Y appeared first on GeeksforGeeks.\",\"3432\":\"Stack Overflow Podcast - Episode #29 by The Stack Overflow Podcast\",\"3578\":\"Winter Bash 2020 has come to an end. While we\\u2019re packing the hats into boxes to put them back on the shelf for next year, let\\u2019s take a look at a few hat-wearing avatars that brought a smile to our faces. Catija Rory Alsop Snow Adrian Mole Tsundoku Those are just a few. Check them all out on MSE! Winter Bash 2020 In Numbers Nick and VonC earned the very first hats 28 seconds after the event started. The hats (Social Distancing) were earned on Meta Stack Overflow. This year all 17 secret hats were discovered, 11 on the very first day! 3 users (U11-Forward, Panda, and double-beep) earned all secret hats. The most awarded hat, besides Social Distancing, was Flashlight. 518,814 unique users earned it 552,178 times total. The rarest hat that we could find on users\\u2019 avatars is Rep Hunter, awarded only to 20 users. If you are one of those who won, congratulations! During Winter Bash everyone had fun in their own unique way. Let us highlight users who earned the largest number of unique hats this year Enough stats for today! If you want more, there\\u2019s a ton of stats on the public stats page. The Hat Dash This year we also built a little Hat Dash game (a reskinned version of the dino jumping game in Chrome). Processing a game on the client side + a community of developers == fun. While some of us were practicing our jumping, others were working hard to hack the game. To keep the leaderboard fair, we cooperated with the community and improved our anti-cheating mechanisms. All who contributed novel cheats earned a new secret hat \\u201cDefender of the Unicorn\\u201d (check out the White Hat Hall of Fame!) We invited all other users to earn the new hat by going through a Unicorn Quest and testing their knowledge of Stack Overflow and Stack Exchange history. Here is the final leaderboard for the Hat Dash (containing what we hope are legitimate scores): Thank you all for everything you do throughout the year to build the amazing communities that make up our network. Thank you for your support and enthusiasm that drive us to work hard to make Stack Overflow and Stack Exchange the best places on the internet to get an answer to a question. We hope you enjoyed this year\\u2019s hat adventure. Please leave all questions and comments on the feedback post on MSE. See y\\u2019all soon! The post Ciao Winter Bash 2020! appeared first on Stack Overflow Blog.\",\"3412\":\"In this episode, we pay our respects to John Conway, a legendary mathematician known for the Game of Life and Surreal Numbers. Our math Stack Exchange paid respects to some of his lesser known results. Jon and Adam give us a rundown of some of their favorite April Fools projects from the past, many of which they helped build. Adam has a soft spot for Unikong, while Jon is more of a rubber duck man. Don't forget to check out DevAroundTheSun for ways tech folks can support those impacted by COVID-19.\",\"3288\":\"In this week's episode, Mazin Gilbert - VP of AT&T Labs Advanced Technology - joins us. The gang talks about the Amazon S3 outage as well as about an AI that's learned how to copy\\/paste code, just like a real developer! Finally, Joel provides tech support to Grandma Maebeline.\",\"209\":\"Can't wait to dig into this great book during this year, keep making good content @Sentdex\",\"3451\":\"Stack Overflow Podcast - Episode #66 by The Stack Overflow Podcast\",\"570\":\"You can check out the course here: https:\\/\\/get.interviewready.io\\/courses\\/system-design-interview-prep The first 5 of 9 chapters in the system design series have been released. The remaining 4 chapter topics are discussed in this video. The course dives into System Design in-depth. Along with videos, it has supplementary content: 1) Capacity Planning 2) API contracts 3) Architecture Diagrams 4) Tests 5) FAQs 6) Subtitles 7) Code 00:00 What is a Low Level Design question? 01:01 Designing a payment tracking app 01:47 Upcoming videos 02:22 Pricing 03:57 Support Contact System Design Playlist: https:\\/\\/www.youtube.com\\/playlist?list=PLMCXHnjXnTnvo6alSjVkgxV-VH6EPyvoX You can follow me on: Quora: https:\\/\\/www.quora.com\\/profile\\/Gaurav-Sen-6 LinkedIn: https:\\/\\/www.linkedin.com\\/in\\/gaurav-sen-56b6a941\\/ Twitter: https:\\/\\/twitter.com\\/gkcs_ Facebook: https:\\/\\/facebook.com\\/gkcs0\\/\",\"577\":\"The Aadhaar and UPI projects have enabled a huge number of Indians to make digital payments. The next technological marvel coming up from the team behind Aadhaar and UPI (Known as Ispirit) is DEPA. DEPA stands for Data Empowerment and Protection Architecture. It defines a system where users can provide access to their financial data in an efficient and privacy preserving manner. The system design involves a definition of Entities and APIs. It is generic enough to allow easy adoption, but specific enough to add real value to end users. #DEPA #DataProtection #IndiaStack HACKATHON: Here is the registration link: http:\\/\\/aa-hackathon.devfolio.co\\/ All the best! References: Sahamati: https:\\/\\/sahamati.org.in\\/blog\\/first-account-aggregator-hackathon\\/ API Specifications: https:\\/\\/api.rebit.org.in\\/ IndiaStack Website: https:\\/\\/www.indiastack.org\\/depa\\/ Aaryaman Blog: https:\\/\\/blog.usejournal.com\\/this-can-be-as-big-as-upi-understanding-the-big-new-thing-in-india-76465995997f You can follow me on: Facebook: https:\\/\\/facebook.com\\/gkcs0\\/ Quora: https:\\/\\/www.quora.com\\/profile\\/Gaurav-Sen-6 LinkedIn: https:\\/\\/www.linkedin.com\\/in\\/gaurav-sen-56b6a941\\/ Twitter: https:\\/\\/twitter.com\\/gkcs_\",\"3385\":\"Stack Exchange Podcast - Episode #41 - Neither of Us Have Muscles by The Stack Overflow Podcast\",\"3547\":\"Stack Overflow Podcast - Episode #84 by The Stack Overflow Podcast\",\"3518\":\"IBM, You're wrong, remote work matters.\",\"1862\":\"REST is a loosely defined protocol for listing, creating, changing, and deleting data on your server over HTTP. The Django REST framework (DRF) is a toolkit built on top of the Django web framework that reduces the amount of code you need to write to create REST HTTP API interfaces. In this course you\\u2019ll learn about: The REST protocol DRF Serializers and how to use them with Django objects Using Django views and DRF ViewSet classes to create REST end-points Multiple flavors of renderers and how to control their output Specifying permissions and limiting who can see what data in your REST API [ Improve Your Python With \\ud83d\\udc0d Python Tricks \\ud83d\\udc8c \\u2013 Get a short & sweet Python Trick delivered to your inbox every couple of days.\",\"3506\":\"Today's episode was inspired by a question on folks who postpone a merge for fear of being the one to resolve a conflict. Shout out to Candied Orange for the thoughtful answer. Paul and Sara reminisce about the days before Git, when version control was very different from what it is today, and Paul accidentally left many a project in shambles. Do you remember the days of Subversion and CVS? Later, we dig into Sara's new adventure with Jupyter Notebooks. They are extremely useful for developers, but what would it take to make them a tool for any kind of knowledge worker? Default to a PowerPoint style, obviously. Last but not least, we dig into the endless argument over the 10X developer, Reed Hastings' love for the 100X developer, and the true formula for attracting employees that will contribute their genius without wrecking the team. Clive Thompson has a great piece on the myth, meritocracy, and messy reality of rockstar coders.\",\"3379\":\"On this week's episode, we discuss the results of the 2017 Stack Overflow Survey with resident data scientists Dr. Dave and Dr. Julia. Also this week, Joel is actually not here right now, and Jay and David go mad with power. Anything goes on this episode...\",\"3491\":\"Here is the Reddit comment that inspired us to reach out to Garry. This is the Vice news article that started the thread. As you can see, the ban has affected a lot of books that would seem to have little bearing on cybersecurity. \\\"Rejected books that are geared towards hacking, such as Justin Seitz\\u2019s Black Hat Python, may represent a clearer threat to the Department of Corrections, which fears that prisoners could use those tools to compromise their systems. But how did books such as Windows 10 for Dummies, Microsoft Excel 2016 for Dummies, and Google Adsense for Dummies (marked as posing \\\"clear and present danger\\\"), fail the prison\\u2019s security test?\\\" If you want to read about programs helping prisoners learn to code, check out this story on the Bard Prison Initiative. We also did a podcast episode back in January of this year that focused on The Code Cooperative, an organization dedicated to teaching software skills to formerly incarcerated individuals.\",\"3329\":\"Stack Overflow Podcast - Episode #18 by The Stack Overflow Podcast\",\"3358\":\"You can read more about Javascriptlandia here. It is part of larger conversation happening on Google's Open Source Blog and through initiatives like Github allowing corporations into their Sponsors program. For a delightfully old school and interactive website about Myles, click here. For his Twitter, go here. You can find Jory's website here and her Twitter presence here. This week's lifeboat badge goes to Marijn van Vliet for answering the question: How do I return a char array from a function?\",\"3353\":\"Stack Overflow Podcast - Episode #50 by The Stack Overflow Podcast\",\"533\":\"Breaking the unbreakable loop. More on how self-modifying code can be a neat hack, that's almost unmaintainable. Dr Julian Onions recalls the \\\"Real Programmer\\\" story that circulated in the early '80s. Earlier Episodes about Mel: https:\\/\\/www.youtube.com\\/playlist?list=PLzH6n4zXuckoXiDGh3c16nMCPABZKHc9I Wheeler Jump: https:\\/\\/youtu.be\\/zR8V0lq029c Alderson Loop: https:\\/\\/youtu.be\\/Rh1IQwXy3Y8 Inside the CPU: https:\\/\\/youtu.be\\/IAkj32VPcUE https:\\/\\/www.facebook.com\\/computerphile https:\\/\\/twitter.com\\/computer_phile This video was filmed and edited by Sean Riley. Computer Science at the University of Nottingham: https:\\/\\/bit.ly\\/nottscomputer Computerphile is a sister project to Brady Haran's Numberphile. More at http:\\/\\/www.bradyharan.com\",\"1823\":\"Learn how to build a responsive website from scratch with HTML, CSS, and JavaScript. \\u270f\\ufe0f This course was created by Jessica Chan. \\ud83d\\udd17 Jessica's YouTube Channel: https:\\/\\/www.youtube.com\\/thecodercoder \\ud83d\\udd17 Jessica's Twitter: https:\\/\\/twitter.com\\/thecodercoder \\ud83d\\udcbb Starter files from Fontend Mentor: https:\\/\\/www.frontendmentor.io\\/challenges\\/easybank-landing-page-WaUhkoDN \\ud83d\\udcbb Source code on GitHub: https:\\/\\/github.com\\/thecodercoder\\/fem-easybank \\ud83d\\udd17 Responsive Design for Beginners course: https:\\/\\/coder-coder.com\\/responsive\\/ \\u2b50\\ufe0f Course Contents \\u2b50\\ufe0f \\u2328\\ufe0f (0:00) Introduction \\u2328\\ufe0f (0:30) Part 1: Setup and Navigation Bar \\u2328\\ufe0f (49:52) Part 2: Animated Hamburger Menu \\u2328\\ufe0f (1:21:28) Part 3: Animated Mobile Menu \\u2328\\ufe0f (1:43:56) Part 4: Responsive Hero \\u2328\\ufe0f (2:39:24) Part 5: 4-Column Features (flexbox) \\u2328\\ufe0f (3:16:58) Part 6: 4-Column Articles (CSS grid) \\u2328\\ufe0f (4:04:56) Part 7: Footer -- Learn to code for free and get a developer job: https:\\/\\/www.freecodecamp.org Read hundreds of articles on programming: https:\\/\\/freecodecamp.org\\/news And subscribe for new videos on technology every day: https:\\/\\/youtube.com\\/subscription_center?add_user=freecodecamp\",\"3482\":\"Stack Overflow Podcast - Episode #61 by The Stack Overflow Podcast\",\"3406\":\"Stack Overflow Podcast - Episode #46 by The Stack Overflow Podcast\",\"1820\":\"HSBC visited our college for campus hiring. Criteria: CGPA: 6.82+ Branches allowed: all UG Profile: Trainee Software Engineer Round 1 (Online Aptitude and Coding Assessment):\\u2026 Read More The post HSBC Interview Experience | On-Campus 2021(Virtual) appeared first on GeeksforGeeks.\",\"3498\":\"Brian is a contributor to Deno, and walks us through what this project has to offer. He also made it easy to work with Deno right in the browser. You can check it out here. You can learn more about Begin here. If you want to follow Brian, you can find him on Twitter here and on Github here. We spend a bunch of time digging into the overlaps between Deno, Rust, Java, and Typescript. In case you missed it, Typescript is now the second most beloved language, based on the results of our 2020 Developer Survey.\",\"5095\":\"Learn the fundamentals and how to build a ReactJS shopping cart with Typescript, Material UI, Styled Components and React-Query. This tutorial uses a free open API for dummy data to the items in the shop. React-Query hooks is used for fetching the data from the API. Styled Components is used in combination with Material UI to customize the styles. \\ud83d\\udcbb Code: https:\\/\\/github.com\\/weibenfalk\\/react-shopping-cart \\u270f\\ufe0f Course created by Thomas Weibenfalk. Check out his channel: https:\\/\\/www.youtube.com\\/channel\\/UCnnnWy4UTYN258FfVGeXBbg -- Learn to code for free and get a developer job: https:\\/\\/www.freecodecamp.org Read hundreds of articles on programming: https:\\/\\/freecodecamp.org\\/news And subscribe for new videos on technology every day: https:\\/\\/youtube.com\\/subscription_center?add_user=freecodecamp\",\"3503\":\"I asked Anna to describe herself in her own words. \\\"Anna Lytical is a drag queen and engineer who creates sickeningly entertaining and educational coding tutorials in order to engage more LGBTQ+ people with coding and the tech industry. Anna shows how to use technology to represent yourself through various projects like websites, Instagram filters, glamorous command prompts and so much more.\\\" Sara has been a big fan for a while, both on Twitter and YouTube. Below are some highlights: PROFESSIONAL ENGINEER CODES WEBSITE BY ONLY COPYING & PASTING YOU DIDN'T KNOW YOUR COMMAND PROMPT COULD LOOK THIS GLAM! Speaking of great coding projects, Sara is helping to support DevAroundTheSun. It's a 24-hour coding jam that offers mentorship and tutorials, with all proceeds going to help people impacted by COVID-19. Check out the link above to learn how you can participate.\",\"3357\":\"You can learn more about today's event and all the livestream broadcasts here. If you want to learn more about Robin, you can get in touch here.\",\"3497\":\"In addition to her role as PM's on Microsoft's .NEt team, Claire is an Executive Director of the .NET Foundation. Jeff, meanwhile, is a Twitch Partner, technical educator and founder of @theLiveCoders. He can be found streaming live coding projects and challenges as CsharpFritz on Twitch. Both have been working with our own Sara Chipps to organize today's DevAroundTheSun event in order to raise money for those impacted by the COVID-19 crisis. In addition to this episode, you can tune in this morning at 9am Eastern Standard Time to catch a live episode of the Stack Overflow podcast on Twitch, where we'll be highlighting some of the fascinating talks and great speakers happing at DevAroundTheSun, and generally having a few laughs talking about software, tech, and life.\",\"3545\":\"Stack Overflow Podcast - Episode #57 by The Stack Overflow Podcast\",\"3510\":\"Cassidy helps to write The Overflow newsletter and is two months into a new gig as a Principal Developer Experience Engineer at Netlify. That's where she broke Prod, but it turned out ok. We chat about Hey what it means for software engineers when prominent coders are arguing with big mobile platforms about the fees that the owners of the OS collect. What's old is new again. Bot armies are farming gold in World of Warcraft, which takes us down a wandering path of wondering how often people have access to powerful computers, but limited access to money they can spend on essentials. Last but not least, we try to dissect a great question from our Software Engineering Stack Exchange: ways to explain code when told it doesn't make sense. Shout out to our lifeboat badge winner of the week, \\\"wizard\\\", who answered the following question: is there an equivalent method to C's scanf in Java.\",\"913\":\"Have you wondered how Python manages memory? How are your variables stored in memory, and when do they get deleted? This week on the show, David Amos is here, and he has brought another batch of PyCoder\\u2019s Weekly articles and projects. Along with the Real Python article on Python memory management, we also talk about another article about creating even and non-even spaced arrays in Python with np.linspace. We share an article titled \\u201cThe Unholy Way of Using Virtual Environments\\u201d. This leads to a discussion on how to structure the directories around a virtual environment. We also cover several other articles and projects from the Python community including, storing a list in an int, why you should use an ORM (Object Relational Manager), unraveling not in Python, an open-source Python fuzzer, and Python static website generators. Course Spotlight: How Python Manages Memory Get ready for a deep dive into the internals of Python to understand how it handles memory management. By the end of this course, you\\u2019ll know more about low-level computing, understand how Python abstracts lower-level operations, and find out about Python\\u2019s internal memory management algorithms. Topics: 00:00:00 \\u2013 Introduction 00:01:38 \\u2013 np.linspace(): Create Evenly or Non-Evenly Spaced Arrays 00:05:20 \\u2013 The Unholy Way of Using Virtual Environments 00:17:33 \\u2013 Storing a list in an int 00:24:48 \\u2013 Why Should You Use an ORM (Object Relational Mapper)? 00:32:30 \\u2013 Video Course Spotlight 00:33:24 \\u2013 Unravelling not in Python 00:40:03 \\u2013 How Python Manages Memory 00:45:28 \\u2013 Follow-up from Jupylet 00:46:51 \\u2013 Announcing the Atheris Python Fuzzer 00:50:42 \\u2013 nikola: Static Website and Blog Generator Show Links: np.linspace(): Create Evenly or Non-Evenly Spaced Arrays \\u2013 In this tutorial, you\\u2019ll learn how to use NumPy\\u2019s np.linspace() effectively to create an evenly or non-evenly spaced range of numbers. You\\u2019ll explore several practical examples of the function\\u2019s many uses in numerical applications. The Unholy Way of Using Virtual Environments \\u2013 If you\\u2019ve used virtual environments before, you may have created a venv\\/ folder inside the root directory of your project. This is standard, but has some downsides. Have you every thought about reversing this and putting your project inside your venv\\/ folder? Storing a list in an int \\u2013 For a fun exercise, learn how you can leverage Python\\u2019s unlimited integer precision to encode and store lists of any size as a single integer. Because, why not? Why Should You Use an ORM (Object Relational Mapper)? \\u2013 Budding web developers learning Model-View-Controller frameworks are taught that they should use an Object Relational Mapper (ORM) to interface with their databases. But the \\u201cwhy\\u201d is often brushed aside or omitted entirely, leaving a fledgling programmer with burning questions like \\u201cWhat are ORMs, anyway?\\u201d and \\u201cWhat problems do they solve?\\u201d Unravelling not in Python \\u2013 In the next blog post in his series about Python\\u2019s syntactic sugar, Brett Cannon tackles what would seem to be a very simple bit of syntax, but which actually requires diving into multiple layers to fully implement: not. How Python Manages Memory \\u2013 Get ready for a deep dive into the internals of Python to understand how it handles memory management. By the end of this course, you\\u2019ll know more about low-level computing, understand how Python abstracts lower-level operations, and find out about Python\\u2019s internal memory management algorithms. Announcing the Atheris Python Fuzzer \\u2013 Get started with fuzzing, a technique for automatically finding bugs in Python code by repeatedly trying various inputs to your program, using Google\\u2019s newly open-sourced Python fuzzer called Atheris. Project Links: Jupylet: Getting Started nikola: Static Website and Blog Generator atheris: Python Fuzzing Framework Additional Links: Look Ma, No For-Loops: Array Programming With NumPy: Real Python article NumPy: numpy.ndarray An Effective Python Environment: Making Yourself at Home: Real Python article A quick-and-dirty guide on how to install packages for Python: Brett Cannon\\u2019s blog Data Management With Python, SQLite, and SQLAlchemy: Real Python article SQLAlchemy: The Python SQL Toolkit and Object Relational Mapper Writing your first Django app: DjangoProject.com Memory Management in Python: Real Python article The Python Language Reference Memory Management: Python docs Pelican: Static Site Generator, Written in Python Lektor: Flexible and Powerful Static Content Management System Support the podcast & join our community of Pythonistas\",\"600\":\"Book a mock interview or coaching session with a Microsoft engineer as early as tomorrow on interviewing.io! Sign up here: https:\\/\\/interviewing.io\\/signup Check out the feedback by the Microsoft interviewer and the full transcript on https:\\/\\/interviewing.io\\/recordings\\/Python-Microsoft-13 Disclaimer: All interviews are shared with explicit permission from the interviewer and the interviewee, and all interviews are anonymous. interviewing.io has the sole right to distribute this content.\",\"3343\":\"In today's episode the gang chats about remote work with Zapier CEO Wade Foster and celebrates SO en Espa\\u00f1ol with CM Juan Garza. Plus in the News Stack Overflow converted to HTTPS and IBM makes a huge mistake.\",\"4843\":\"How do you create a virtual conference that retains the interactivity of an in-person event? What are the tools needed for talk submissions, ticketing, and live hosting? Can you find those tools written in Python? This week on the show, we have several of the organizers of the PyCascades 2021 conference. They share the process of restructuring a Python conference to meet those challenges. [ Improve Your Python With \\ud83d\\udc0d Python Tricks \\ud83d\\udc8c \\u2013 Get a short & sweet Python Trick delivered to your inbox every couple of days.\",\"3456\":\"Stack Overflow Podcast - Episode #49 by The Stack Overflow Podcast\",\"3528\":\"You can find Ferdinandi's post and video here. 12 years ago, back when Stack Overflow was a brand new site with just a few thousand users, someone asked a basic question: What is the difference between a framework and a library? FreeCodeCamp has its own take on this question with a pretty interesting answer. \\\"When you use a library, you are in charge of the flow of the application. You are choosing when and where to call the library. When you use a framework, the framework is in charge of the flow. It provides some places for you to plug in your code, but it calls the code you plugged in as needed.\\\" There was no Lifeboat badge to call out this week, so we honored a Lifejacket winner instead. Shout out to Andreas for answering the queston: Are byte arrays initialised to zero in Java?\",\"3269\":\"Stack Overflow Podcast - Episode #37 by The Stack Overflow Podcast\",\"3404\":\"Many countries around the world have now ordered citizens to work from home, exempting only those in essential industries. We have some tips on our blog about how to make remote work the best it can be, and a new piece up on how to handle remote hiring if your company is trying to fill positions during these unusual circumstances. Sara is nervous about working from home with her husband, who is also a software engineer. There can only be so many commits in a committed relationship. But she has double the space per person of Paul, who shares a 1200 square foot Brooklyn abode with a wife and two kids. Ben, meanwhile, has decamped for upstate New York. Buzzfeed asks, if this sudden experiment in mass remote work goes well for certain companies, will they simply opt to transition to full remote forever after the pandemic ends. Stack Overflow was born remote, an idea that germinated across blogs and Skype calls. The very first episode of the Stack Overflow podcast tells the tale. Our community saved us from major egg on our face, warning us about a Let's Encrypt bug that would have left Stack Overflow with expired certificates. You can hear a more detailed explanation of how this works here. If you're cracking out an old computer to use for home schooling you children or lending to a neighbor, Paul asks you to consider that now, in this wild moment of uncertainty, an Ubuntu Linux machine might be just the solution you need.\",\"3435\":\"Stack Overflow Podcast - Episode #34 by The Stack Overflow Podcast\",\"3466\":\"Stack Exchange Podcast - Episode #07 w\\/ Sam Saffron by The Stack Overflow Podcast\",\"3469\":\"You can check out more about the Github news here. Here is the farewell to updates from Moment.js. Would you take a nice bonus today for a pay cut in the future? Stripe is offering its employees that option, spurred by an exodus of developers from dense urban areas. A big thanks to Jim Mischel, who was our lifeboat badge winner of the week.\",\"3439\":\"Stack Exchange Podcast - Episode #54 - The One With All The Anachronisms by The Stack Overflow Podcast\",\"1854\":\"It's been quite the year! The Real Python team has written, edited, curated, illustrated, and produced a mountain of Python articles this year. We also upgraded the site and membership with office hours, transcripts, this podcast, and much more. We are joined by two members of the Real Python team, David Amos and Joanna Jablonski. We wanted to share a year-end wrap-up with a collection of articles that showcase a diversity of Python topics and the quality of what our team created this year. [ Improve Your Python With \\ud83d\\udc0d Python Tricks \\ud83d\\udc8c \\u2013 Get a short & sweet Python Trick delivered to your inbox every couple of days.\",\"3587\":\"Welcome to ISSUE #52 of the Overflow! This newsletter is by developers, for developers, written and curated by the Stack Overflow team and Cassidy Williams at Netlify. While you\\u2019re sipping on eggnog and munching some gingerbread, read about how to safely update IoT devices over the air, when it makes sense to cancel your daily scrum, and designing a web to prevent abuse. From the blog The semantic future of the web stackoverflow.blog Much of the data currently exchanging hands can be viewed as human-centric. But increasingly we are not the only consumers of the web, and someday that data may be crafted for the consumption of virtual readers. Security considerations for OTA software updates for IOT gateway devices stackoverflow.blog In order to respond to threats, device designers must remotely update, which if implemented poorly, can provide another vector for attacks. In this post, dig into specifics related specifically to the over-the-air (OTA) software update framework in an enterprise setting. Podcast 293: Connecting apps, data, and the cloud with Apollo GraphQL CEO Geoff Schmidt stackoverflow.blog Schmidt, formerly of Meteor.JS, says GraphQL has done for the cloud what SQL did for databases. Now it\\u2019s about balancing corporate growth with an open source community. How to integrate eSignatures into your apps promotion Check out this on-demand webinar to learn about the importance of eSignatures in compliance and sales workflows and how you can integrate them into the web and mobile apps you build. Interesting questions Should I cancel the daily scrum if the team has only minor issues to discuss? pm.stackexchange.com \\u201cIf you aren\\u2019t planning together, you aren\\u2019t working together.\\u201d DeepMind just announced a breakthrough in protein folding. What are the consequences? mattermodeling.stackexchange.com By \\u201cbreakthrough,\\u201d they mean \\u201cdid really, REALLY well in a protein folding competition.\\u201d Suppose there is a 50 watt infrared bulb and a 50 watt UV bulb. Do they emit light of the same energy? physics.stackexchange.com Overall, yes. But does each photon contain the same energy? Is there any text to speech program that will run on an 8 or 16-bit CPU? retrocomputing.stackexchange.com Even though they didn\\u2019t do it well, speech still blew kids\\u2019 minds in Commodore 64 games. Links from around the web Making a responsive (birthday) card with HTML and CSS dev.to You know, with it being JavaScript\\u2019s birthday month, it might be good to have a birthday card coming from its relatives! Abusability test your product database.platformabuse.org This is a fantastic reference for those building and using social platforms to avoid abuse and to make a safer web. Web performance calendar \\u00bb A font-display setting for slow connections calendar.perfplanet.com Block? Optional? Swap? Fallback? How should you pick a font-display setting? Here\\u2019s a solid discussion to help you decide. Life of a pixel (Chrome University 2020) www.youtube.com Here\\u2019s a very cool tour of Chrome\\u2019s rendering architecture, and how a pixel \\u201ccomes to life\\u201d on the page. Want to see who\\u2019s still hiring? Check out our job board! The post The Overflow #52: The semantic future of the web appeared first on Stack Overflow Blog.\",\"3436\":\"You can find more about Resner here. Learn more about the topics we discussed by following some of Resner's suggested links below: People to follow on Twitter: Safyia Noble, Ruha Benjamin, and Kamal Sinclair. Ellen Pao and Project Include. Eli Pariser and New Public by Civic Signals.\",\"1826\":\"Js13kGames is a JavaScript coding competition where people create games UNDER 13 kilobytes. Learn about the competition and see this year's winners in this video. This video was made by Ania Kubow in collaboration with JS13KGames. You can find Ania here: \\ud83d\\udd17 YouTube: https:\\/\\/www.youtube.com\\/aniakubow \\ud83d\\udd17 Twitter: https:\\/\\/www.twitter.com\\/ania_kubow \\ud83d\\udd17 Instagram: https:\\/\\/www.instagram.com\\/aniakubow \\u2b50\\ufe0f Course Contents \\u2b50\\ufe0f \\u2328\\ufe0f (0:00:00) Introduction by Ania Kubow \\u2328\\ufe0f (0:02:28) A word from Andzej Mazur - founder of JS13KGames \\u2328\\ufe0f (0:03:39) A word from Beau at freeCodeCamp.org \\u2328\\ufe0f (0:04:32) 1st place - Ninja vs EVILCORP by R\\u00e9mi Vansteelandt \\u2328\\ufe0f (0:09:10) 2nd place - Edge Not Found by Tom Hermans \\u2328\\ufe0f (0:14:00) 3rd place - CHOCH by kostik1337 & lampysprites \\u2328\\ufe0f (0:19:14) 4th place - Track not found?! by xem \\u2328\\ufe0f (0:23:31) 5th place - Stolen Sword by Ian Chiao \\u2328\\ufe0f (0:28:39) 6th place - The Last Spartan by Michael Ferron \\u2328\\ufe0f (0:30:29) 7th place - FOURFOLD by Saud \\u2328\\ufe0f (0:31:45) 8th place - I want to google the game by Mark Vasilkov \\u2328\\ufe0f (0:35:28) 9th place - Highway 404 by Jerome Lecomte \\u2328\\ufe0f (0:39:38) 10th place - MINIPUNK by Cody Ebberson \\u2328\\ufe0f (0:41:56) 11th place - Searching for 04 by Nicklas L\\u00f6f \\/ Snukey \\u2328\\ufe0f (0:50:13) 12th place - Johnny Smiter III by Paul Brunt \\u2328\\ufe0f (0:52:10) 13th place - Island Not Found by Ben & Salvatore \\u2328\\ufe0f (0:54:02) 14th place - You have found by Mark Knol \\u2328\\ufe0f (0:55:40) 15th place - 404kph by jaburns \\u2328\\ufe0f (0:58:36) 16th place - WIZARD WITH A SHOTGUN by Elliot Nelson \\u2328\\ufe0f (1:01:46) 17th place - Connection by Federico Tibaldo \\u2328\\ufe0f (1:02:30) 18th place - Sojuz 404 by Markus Fisch \\u2328\\ufe0f (1:04:35) 19th place - Symmetry Not Found by sirxemic \\u2328\\ufe0f (1:06:45) 20th place - NoteCraft by KilledByAPixel As promised, here are the links of where you can find each Game Developer and their Game code: \\ud83c\\udfc6 1st Place Ninja vs EVILCORP by R\\u00e9mi Vansteelandt \\ud83d\\udd17 Game link: https:\\/\\/js13kgames.com\\/entries\\/ninja-vs-evilcorp \\ud83d\\udc26 Twitter: https:\\/\\/twitter.com\\/remvst \\ud83c\\udfc6 2nd Place Edge Not Found by Tom Hermans \\ud83d\\udd17 Game link: https:\\/\\/js13kgames.com\\/entries\\/edge-not-found \\ud83d\\udc26 Twitter: https:\\/\\/twitter.com\\/auroriax \\ud83c\\udfc6 3rd Place CHOCH by kostik1337 & lampysprites \\ud83d\\udd17 Game link: https:\\/\\/js13kgames.com\\/entries\\/choch \\ud83d\\udc26 Twitter: https:\\/\\/twitter.com\\/kostik13337 \\ud83c\\udfc6 4th place Track not found?! by xem \\ud83d\\udd17 Game link: https:\\/\\/js13kgames.com\\/entries\\/track-not-found \\ud83d\\udc26 Twitter: https:\\/\\/twitter.com\\/maximeeuziere \\ud83c\\udfc6 5th place Stolen Sword by Ian Chiao \\ud83d\\udd17 Game link: https:\\/\\/js13kgames.com\\/entries\\/stolen-sword \\ud83d\\udc26 Twitter: https:\\/\\/twitter.com\\/chiaogu \\ud83c\\udfc6 6th place The Last Spartan by Michael Ferron \\ud83d\\udd17 Game link: https:\\/\\/js13kgames.com\\/entries\\/the-last-spartan \\ud83d\\udc26 Twitter: https:\\/\\/twitter.com\\/ferronsays \\ud83c\\udfc6 7th place FOURFOLD by Saud \\ud83d\\udd17 Game link: https:\\/\\/js13kgames.com\\/entries\\/fourfold \\ud83d\\udc26 Twitter: https:\\/\\/twitter.com\\/rotttencandy \\ud83c\\udfc6 8th place I want to google the game by Mark Vasilkov \\ud83d\\udd17 Game link: https:\\/\\/js13kgames.com\\/entries\\/i-want-to-google-the-game \\ud83d\\udc26 Twitter: :https:\\/\\/twitter.com\\/mvasilkov \\ud83c\\udfc6 9th place Highway 404 by Jerome Lecomte \\ud83d\\udd17 Game link: https:\\/\\/js13kgames.com\\/entries\\/highway-404 \\ud83d\\udc26 Twitter: https:\\/\\/twitter.com\\/herebefrogs \\ud83c\\udfc6 10th place MINIPUNK by Cody Ebberson \\ud83d\\udd17 Game link: https:\\/\\/js13kgames.com\\/entries\\/minipunk \\ud83d\\udc26 Twitter: https:\\/\\/twitter.com\\/codyebberson \\ud83c\\udfc6 11th place Searching for 04 by Nicklas L\\u00f6f \\/ Snukey \\ud83d\\udd17 Game link: https:\\/\\/js13kgames.com\\/entries\\/searching-for-04 \\ud83d\\udc26 Twitter : https:\\/\\/twitter.com\\/nicklaslof \\ud83c\\udfc6 12th place Johnny Smiter III by Paul Brunt \\ud83d\\udd17 Game link: https:\\/\\/js13kgames.com\\/entries\\/johnny-smiter-iii \\ud83d\\udc26 Twitter: https:\\/\\/twitter.com\\/super_eggbert \\ud83c\\udfc6 13th place Island Not Found by Ben & Salvatore \\ud83d\\udd17 Game link: https:\\/\\/js13kgames.com\\/entries\\/island-not-found \\ud83d\\udc26 Twitter: https:\\/\\/twitter.com\\/super_eggbert \\ud83c\\udfc6 14th place You have found by Mark Knol \\ud83d\\udd17 Game link: https:\\/\\/js13kgames.com\\/entries\\/you-have-found \\ud83d\\udc26 Twitter: https:\\/\\/twitter.com\\/mknol \\ud83c\\udfc6 15th place 404kph by jaburns \\ud83d\\udd17 Game link: https:\\/\\/js13kgames.com\\/entries\\/404kph \\ud83d\\udc26 Twitter: https:\\/\\/twitter.com\\/jaburnsnet \\ud83c\\udfc6 16th place WIZARD WITH A SHOTGUN by Elliot Nelson \\ud83d\\udd17 Game link: https:\\/\\/js13kgames.com\\/entries\\/wizard-with-a-shotgun \\ud83d\\udc26 Twitter: https:\\/\\/twitter.com\\/7tonshark \\ud83c\\udfc6 17th place Connection by Federico Tibaldo \\ud83d\\udd17 Game link: https:\\/\\/js13kgames.com\\/entries\\/connection \\ud83d\\udc26 Twitter: https:\\/\\/twitter.com\\/fedetibaldo \\ud83c\\udfc6 18th place Sojuz 404 by Markus Fisch \\ud83d\\udd17 Game link: https:\\/\\/js13kgames.com\\/entries\\/sojuz-404 \\ud83d\\udc26 Twitter: https:\\/\\/twitter.com\\/markusfisch \\ud83c\\udfc6 19th place Symmetry Not Found by sirxemic \\ud83d\\udd17 Game link: https:\\/\\/js13kgames.com\\/entries\\/symmetry-not-found \\ud83d\\udc26 Twitter: https:\\/\\/twitter.com\\/sirxemic \\ud83c\\udfc6 20th place NoteCraft by KilledByAPixel \\ud83d\\udd17 Game link: https:\\/\\/js13kgames.com\\/entries\\/notecraft \\ud83d\\udc26 Twitter: https:\\/\\/twitter.com\\/KilledByAPixel \\u2b50\\ufe0f Special thanks to our Champion supporters! \\u2b50\\ufe0f \\ud83c\\udfc6 Loc Do \\ud83c\\udfc6 Joseph C \\ud83c\\udfc6 DeezMaster\",\"3602\":\"The web is built on data\\u2014my data, your data, data from small companies, data from big companies, and so forth. We might hand over data like an email address and in return, we might get access to other data, perhaps exclusive content for a new video game or a weekly newsletter. This constant exchange of data allows for collaboration and communication on a scale that never existed prior to the web. Much of the data currently exchanging hands can be viewed as human-centric. We have news articles, blogs, e-commerce, forums, video platforms, social media, and Q&A sites providing us data to read, watch, and otherwise consume. We are not the only consumers of the web though, with search engines, voice assistants, pricing bots, and even link preview bots performing a staggering number of requests every day\\u2014computer systems like these are playing an ever-growing role in data consumption. Tim Berners-Lee coined the concept of a \\u201cSemantic Web\\u201d, where the web can be considered more a global database that computer systems could understand rather than a series of separate web pages. In turn, this could effectively allow deeper integrations between different computer systems and allow for greater decentralization of data. The data here is not just from large corporations\\u2014it can be your data or my data, data that we control and manage ourselves through our own websites. Unfortunately, we are not at this stage of a full data utopia. Large amounts of data are not publicly available, and for data that is available, it can often be locked behind APIs with their own proprietary systems where you need to pay for access. Building a Semantic Web To move from where we are now to a full Semantic Web is not something that can happen overnight. We have been building web pages for years on HTML, CSS, and JavaScript, optimally designed for a human viewing experience. To extract reliable data from HTML currently, computer systems need to be able to process unstructured data, then establish context and meaning. The thing is, we humans can determine the context and meaning from viewing the page, but machines have to perform additional processing to get that same context. Directly encoding structured data eliminates additional complexity for machines to process themselves. There are many different solutions to encode structured data including Open Graph, Microdata, RDFa, and JSON-LD. Open Graph, created by Facebook, is a popular format for holding specific types of structured data. Facebook uses this to generate link previews from page metadata. Website developers want additional control over what is displayed based on how it is described in the metadata. Since its creation, other social media sites have also adopted Open Graph for generating link previews. Microdata, RDFa, and JSON-LD, however, are a bit different as, by themselves, they only represent different formats of storing data in a web page. Computers can parse these standardized structures. However, unless it knows the type of data being represented, it will not actually understand the data. What is missing here is a shared vocabulary so that two different computer systems can understand each other. A joint effort made by Google, Microsoft, Yahoo, and Yandex proposed a solution called Schema.org to promote structured data in web pages with a common vocabulary. For search engines, this structured data can help provide richer information in the search results. While Schema.org does not describe every type of object, nor does it intend to, it does create a solid foundation to describe many common objects: books, events, locations, medical conditions, movies, organizations, and people. For areas that it does not cover, alternative vocabularies can be used to describe that specialized data. Through its popularity for enhancing SEO, Schema.org has an ever-growing user base which in turn helps grow the Semantic Web. Data could change how we use the web A Semantic Web may not only change how we think about searching for information online but who controls the information. Imagine every website not just being a wall of content but a graph of inter-related topics and ideas. There would not need to be a central spot where data is stored and controlled by a single entity, helping avoid some concerns about censorship and bias while simultaneously improving privacy and control over one\\u2019s data that they share. For example, take a site like Facebook. It maintains mountains of information about people and businesses, with various relationships between different entities from comments, reactions, and shares. This data is part of the Facebook ecosystem; it effectively \\u201cbelongs\\u201d to them. In a future where data is in our own control, sites like Facebook could just be the visual representation of the existing network, built on a Semantic Web. The data we declare public on our website is what can be viewed, giving us full control over what is shared. This also means that we are not locked-in to a service like Facebook. You are free to move to other \\u201cfront ends,\\u201d as the data is yours and you maintain it. It might seem strange that an organization like Facebook would ever want to give up their data, however, with stricter laws being passed, for example GDPR in the EU and CCPA in California, it may be just a matter of time until Facebook is forced to. As new technologies are built to take advantage of this data, it will also provide new tools and experiences for users. While algorithms behind search engines are complex, they currently provide results for queries that have already been specifically answered. If you asked, \\u201call songs before 1995 that failed domestically but were well-received worldwide,\\u201d you would be unlikely to get results because no one has yet answered that question. The data for such a query exists on the web; however, it is not readily available due to how search works. With a web built on data, obscure queries like this could turn up results by combining different datasets across several sites. The ability to query more complex data can especially help researchers and data scientists, being able to potentially combine vast amounts of public data with their own private research data to discover new and interesting things. Additionally, it may help those training machine learning models as specific data sets could be crafted that they may have been impossible to acquire otherwise. Still barriers to be overcome Changes to support a Semantic Web are not something that can happen overnight\\u2014we are talking years of small steps and incremental improvements. Even if most websites had rich structured data in their markup, many new tools and technologies would need to be built to leverage it. For example, Berners-Lee has been working on Solid as a method to allow users greater control over their own data, building upon key concepts of a Semantic Web. Like many other concepts, the Semantic Web does have its critics. One, Cory Doctorow, goes as far to call it \\u201ca pipe-dream, founded on self-delusion, nerd hubris, and hysterically inflated market opportunities.\\u201d That comment is not without merit as there are several potential problems that need to be considered. With the number of websites on the web and the vast number of types that may need to be represented, there is a huge amount of data that would need to be understood for any sufficiently complex query. Schema.org has 841 types by itself but only scratches at the surface of all data that could be represented. When looking at specific industries and the data that they might publicly share, there could be hundreds of vocabularies with thousands of types in each. Beyond the sheer amount of data is deciding how to even classify some of it. Debates could rage on about the most mundane things like whether \\u201ca washing machine was a kitchen appliance or a household cleaning device.\\u201d Then the Semantic Web needs to handle duplicate data which, unfortunately, might not be any easier than trying to de-duplicate unstructured data. A single item might be able to be represented in two or more different vocabularies and may have different properties defined. A global identifier for data may help in specific circumstances, however, it will not fully solve the problem. The credibility of data is another key concern with a Semantic Web. When we research information currently, there are many different factors that we may consider when determining if the information we read can be trusted. Additionally, we might verify what we find across multiple different sites. Systems would not only need to deal with factually incorrect data but also inconsistency in the data that it does find. Maybe the biggest problem though is not a technical one but a human one. Web developers or other people interested in these types of technologies might go out of their way to add data to their pages and websites, but, would your parents want to manage their own data like that? Your neighbours? Your friends? Even if tools are built for the average person, what is to say they would even want to use them? For them, the Semantic Web might be dead on arrival. We are still a long way off from some form of a Semantic Web. While in many ways we are definitely stepping towards it, the full data utopia will rely on many aspects falling perfectly into place. It is unlikely to be a data revolution but rather an evolution of how the web operates now. As we step forward though, we will undoubtedly discover new uses for the data and start developing the technologies that can utilize it. The post The semantic future of the web appeared first on Stack Overflow Blog.\",\"3320\":\"Stack Overflow Podcast - Episode #26 by The Stack Overflow Podcast\",\"1851\":\"Are you familiar with the role data engineers play in the modern landscape of data science and Python? Data engineering is a sub-discipline that focuses on the transportation, transformation, and storage of data. This week on the show, David Amos is back, and he's brought another batch of PyCoder's Weekly articles and projects. [ Improve Your Python With \\ud83d\\udc0d Python Tricks \\ud83d\\udc8c \\u2013 Get a short & sweet Python Trick delivered to your inbox every couple of days.\",\"3455\":\"On today's episode we chat about the nature of VR and reality with IBM Watson's Michael Ludden, plus SO marketing manager Rachel Ferrigno stops by to present the NYC Dev Hiring Ecosystem report.\",\"3428\":\"Juvoni describes himself as someone who helps people explore ideas and strategies for improvement. He focuses on combining multiple skills, better thinking and tools for thought, inner engineering healthy habits, and discovering how systems in the world affect us. You can follow him on Twitter: https:\\/\\/twitter.com\\/juvoni You can join the Personal Development Nerds Facebook group here: https:\\/\\/www.facebook.com\\/groups\\/pdnerds\\/ The PDNerds discord server can be joined at www.pdn.community Find Juvoni's book recommendations on his site: www.juvoni.com\\/books He can be contacted at juvoni@hey.com If you are or know a Black software engineer, you can recommend they join \\/dev\\/color a community dedicated to helping black software engineers empower each other to become industry leaders. http:\\/\\/devcolor.org\\/\",\"3457\":\"From Mars rovers to Minecraft to the makeup of our DNA - these are some of the Java apps that may leave a mark on the world of software for decades to come. Thanks to Hizbul25, our winner of the week, for answering a question and earning a lifeboat badge: query to order by the last three characters of a column.\",\"3448\":\"It's dependencies all the way down... Remote learning is a bad joke. Who has ideas for some tech or gaming inspired solutions? What's your favorite way to refer to software of very large size? Everyone's got their favorite nickname for that big ol' pile of code. Lemon juice is recommended in lots of natural cures and remedies. But could it also be MELTING YOUR BONES?\",\"4461\":\"Every student has big dreams in his\\/her eyes when he\\/she enter college but unfortunately, some students totally give up when they come in the second\\u2026 Read More The post 10 Tips For First Year Computer Science Engineering Students appeared first on GeeksforGeeks.\",\"3550\":\"Stack Exchange Podcast - Episode #36 - The Hurricane by The Stack Overflow Podcast\",\"3259\":\"This year not only did we go back to North America with the TCO Regionals, it was also a year in which we had some of the best members in the region come back to compete. It was back in 2017 when we last organized two regionals in North America. After a break of two years, we decided to take the regionals back to the country where we have been hosting TCO Finals for the past twenty years. Regionals this year had their own charm and excitement. Even though the delivery of t-shirts and goodies is something we are still figuring out at the time of writing, the idea of having members come together to meet each other online and compete within their region was achieved. The event consisted of Algorithm, Development, and QA track competitions, some fun games and a lot of chatter with the members after the events. While it was amazing to see some regular Algorithm developers, it was great to see some of the best veterans join the event. We had msg555, RalphFurmaniak, grigory.ai, radeye and a few more veterans who were part of the event after a decade of informal retirement. Like all the regionals we started with the official welcomes and yearly updates from adroc, jmpld40 and me. We held a small scavenger hunt and youdare was the one who got everything right and won the Topcoder hoodie. Next it was time for some competitions. We started with our QA Competition and Algorithm Elimination Round. It was great to see how the QA community in the region has grown and competed passionately. The QA community was asked to do exploratory testing on https:\\/\\/www.w3schools.com\\/ and also find bugs. It was a really hard task, but the QA community ended up finding twenty-six valid issues. youdare again did a great job and took the top award home. Most of the bugs he logged were enhancements and were focused on enhancing the app for members. In parallel, we launched the Algorithm Qualification Round. The lineup was full of exciting new and old members. The top sixteen later competed in the elimination rounds. After an amazing qualification round and top sixteen we decided to break, have some food and play some games. We had games like Wordsgame, Typeracer, Can\\u2019t Unsee and many more! asocasno and ksun48 were unbeatable in the Wordsgame. Later, it was time for the Development Competition and the Algorithm Elimination Rounds. The Development Competition had members analyze the Topcoder SRM data and plot interesting graphs or do some analysis on it, take a look at the problem: Topcoder has amassed a great wealth of SRM problems since it was first founded in 2001. They are great training, learning, and educational content. In this challenge, we are seeking your help to analyze the given data and create mobile apps, web apps, APIs, etc to showcase the interesting info. We provided files that contain Problem archives SRM results Member profiles It was the red-rated developer MIG-29 who ended up having an exciting solution that analyzed SRM payments, competing countries and plotted a chart for SRM member rating distribution. An interesting find was that the biggest SRM prize we had paid out is $100K, and dmwright was the lucky guy who received that prize. Algorithm Elimination rounds were exciting, with live commentary going on all the time. Members joined in and interesting things were discussed around the format, the competitions and the problems. We had Vlad_D and KaasanErinn providing their expert and experienced views throughout the round. Here\\u2019s how the bracket turned out: ecnerwal ended up winning the TCO20 North America Algorithm Championship as he got both the problems right. Scott_wu was the runner up with 606 points on the leaderboard. Congratulations to the winners. It was great to see everyone join the event and we plan to continue bringing these regional events to everyone around the world. We hope to see you participate with the same enthusiasm next year. The post TCO20 North America Regional Recap appeared first on Topcoder.\",\"3839\":\"Given an array arr[] consisting of a single element N (1 \\u2264 N \\u2264 106) and two integers L and R, ( 1 \\u2264 L\\u2026 Read More The post Count 1s present in a range of indices [L, R] in a given array appeared first on GeeksforGeeks.\",\"3538\":\"This episode was recorded Thursday, May 9th, two days after Stack Overflow announced it was going to furlough 15% of its staff. We talk about how this process played out internally and the ways in which we are hoping to grow our business so we can bring these great people back. You can read more about it in a blog post from our CEO here. After that, we discuss Zoom's acquisition of Keybase. Usage and wider public awareness of Zoom have been growing by leaps and bounds as the world shifts to remote work and learning during this pandemic. This has exposed some security issues with Zoom's platform, and the acquisition of Keybase seems to be aimed at shoring up their cybersecurity and encryption capabilities. Sara, never one to miss an opportunity to plug Bitcoin, hips us to The Halvening. What does it all mean? Read more about it here. Finally, Paul walks us through Deno, which was created by Ryan Dahl, who also created Node.js. Deno is \\\"a brand new JavaScript runtime for the backend, but instead of being written in C++, it\\u2019s written in Rust, based on the Tokio platform (which provides the asynchronous runtime needed by JavaScript), still running Google\\u2019s V8 engine though.\\\" You can read more about it here. Our lifeboater of the week is Stack Overflow user James Kanze, who was awarded the badge for answering the question: C++: What is the difference between ostream and ostringstream? Thanks for listening :)\",\"1839\":\"Have you started to use generators in Python? Are you unsure why you would even use one over a regular function? How do you use the special \\\"send\\\" method and the \\\"yield from\\\" syntax? This week on the show, we have Reuven Lerner to talk about his PyCon Africa 2020 talk titled \\\"Generators, coroutines, and nanoservices.\\\" [ Improve Your Python With \\ud83d\\udc0d Python Tricks \\ud83d\\udc8c \\u2013 Get a short & sweet Python Trick delivered to your inbox every couple of days.\",\"3459\":\"Join us for a chat with CodeNewbie Founder (and all-around amazing person) Saron Yitbarek, stay for Kevin's failures and many many banana references.\",\"3283\":\"Stack Exchange Podcast - Episode #30 w\\/ Robert & Rebecca by The Stack Overflow Podcast\",\"3430\":\"Syeeda and Ian talk with Sara and Paul about how affinity groups came to exist within Stack Overflow, and how the BNB group helped to lead the design of the company's short and long response to issues of systemic racism. You can find more about Stack's plans here. More generally, the group discusses how people at all levels of their organizations are putting a renewed emphasis on diversity and inclusion, and how individual contributors, managers, and executives can come together to find new ways to listen and learn. You can find Ian on Twitter and Github. He has also written for the Stack Overflow blog. You can find Syeeda's images and writing on Instagram and more about her education and career on LinkedIn. Our lifeboat badge for this episode goes out to IsVForAll, who answered the following question: How to check if a value exists in an object using JavaScript?\",\"1857\":\"Big data. Cloud data. AI training data and personally identifying data. Data is all around you and is growing every day. It only makes sense that software engineering has evolved to include data engineering, a subdiscipline that focuses directly on the transportation, transformation, and storage of data. Perhaps you\\u2019ve seen big data job postings and are intrigued by the prospect of handling petabyte-scale data. Maybe you\\u2019re curious about how generative adversarial networks create realistic images from underlying data. Maybe you\\u2019ve never even heard of data engineering but are interested in how developers handle the vast amounts of data necessary for most applications today. No matter which category you fall into, this introductory article is for you. You\\u2019ll get a broad overview of the field, including what data engineering is and what kind of work it entails. In this article, you\\u2019ll learn: What the current state of the data engineering field is How data engineering is used in the industry Who the various customers of data engineers are What is and what isn\\u2019t part of the data engineering field How to decide if you want to pursue data engineering as a discipline To begin, you\\u2019ll answer one of the most pressing questions about the field: What do data engineers do, anyway? Free Bonus: Click here to get a Python Cheat Sheet and learn the basics of Python 3, like working with data types, dictionaries, lists, and Python functions. What Do Data Engineers Do? Data engineering is a very broad discipline that comes with multiple titles. In many organizations, it may not even have a specific title. Because of this, it\\u2019s probably best to first identify the goals of data engineering and then discuss what kind of work brings about the desired outcomes. The ultimate goal of data engineering is to provide organized, consistent data flow to enable data-driven work, such as: Training machine learning models Doing exploratory data analysis Populating fields in an application with outside data This data flow can be achieved in any number of ways, and the specific tool sets, techniques, and skills required will vary widely across teams, organizations, and desired outcomes. However, a common pattern is the data pipeline. This is a system that consists of independent programs that do various operations on incoming or collected data. Data pipelines are often distributed across multiple servers: This image is a simplified example data pipeline to give you a very basic idea of an architecture you may encounter. You\\u2019ll see a more complex representation further down. The data can come from any source: Internet of Things devices Vehicle telemetry Real estate data feeds Normal user activity on a web application Any other collection or measurement tools you can think of Depending on the nature of these sources, the incoming data will be processed in real-time streams or at some regular cadence in batches. The pipeline that the data runs through is the responsibility of the data engineer. Data engineering teams are responsible for the design, construction, maintenance, extension, and often, the infrastructure that supports data pipelines. They may also be responsible for the incoming data or, more often, the data model and how that data is finally stored. If you think about the data pipeline as a type of application, then data engineering starts to look like any other software engineering discipline. Many teams are also moving toward building data platforms. In many organizations, it\\u2019s not enough to have just a single pipeline saving incoming data to an SQL database somewhere. Large organizations have multiple teams that need different levels of access to different kinds of data. For example, artificial intelligence (AI) teams may need ways to label and split cleaned data. Business intelligence (BI) teams may need easy access to aggregate data and build data visualizations. Data science teams may need database-level access to properly explore the data. If you\\u2019re familiar with web development, then you might find this structure similar to the Model-View-Controller (MVC) design pattern. With MVC, data engineers are responsible for the model, AI or BI teams work on the views, and all groups collaborate on the controller. Building data platforms that serve all these needs is becoming a major priority in organizations with diverse teams that rely on data access. Now that you\\u2019ve seen some of what data engineers do and how intertwined they are with the customers they serve, it\\u2019ll be helpful to learn a bit more about those customers and what responsibilities data engineers have to them. What Are the Responsibilities of Data Engineers? Read the full article at https:\\/\\/realpython.com\\/python-data-engineer\\/ \\u00bb [ Improve Your Python With \\ud83d\\udc0d Python Tricks \\ud83d\\udc8c \\u2013 Get a short & sweet Python Trick delivered to your inbox every couple of days.\",\"3369\":\"Stack Exchange Podcast - Episode #40 - Random Musings by The Stack Overflow Podcast\",\"3267\":\"As promised, here is the grass hat. You can find out more about Earthly here. We spend a little time talking about Nix OS the operating system you can roll back if you don't like a patch. Raise your hand if you remember learning computer science with Turbo Pascal. Maybe you didn't know, but discs aren't as slow as people think. Adam's recent episode is about upending common assumptions on IO performance. Shoutout to our Lifeboat badge winner of the week, Josh Smift, for answering the question: How to delete *.web files only if they exist.\",\"1863\":\"What is it like to design a Python library for three different audiences? This week on the show, we have Nir Aides, creator of Jupylet. His new library is designed for deep reinforcement learning researchers, musicians interested in live music coding, and kids interested in learning to program. Everything is designed to run inside of a Jupyter notebook. [ Improve Your Python With \\ud83d\\udc0d Python Tricks \\ud83d\\udc8c \\u2013 Get a short & sweet Python Trick delivered to your inbox every couple of days.\",\"527\":\"Tournament selection, roulette selection, mutation, crossover - all processes used in genetic algorithms. Dr Alex Turner explains using the Knapsack Problem. https:\\/\\/www.facebook.com\\/computerphile https:\\/\\/twitter.com\\/computer_phile This video was filmed and edited by Sean Riley. Computer Science at the University of Nottingham: https:\\/\\/bit.ly\\/nottscomputer Computerphile is a sister project to Brady Haran's Numberphile. More at http:\\/\\/www.bradyharan.com\",\"3350\":\"JJ came to our attention when we saw a tweet about his work to get an ETL pipeline with COBOL running on Kubernetes. Elizabeth comes from the world of Linux Systems Administration, but more recently has been working on COBOL and mainframe computing. She tells us that there is actually a cohort of college students actively learning and using COBOL, both for competitions like Mastering the Mainframe, but also because it's a language that can attract a high paying job at a number of big banks, healthcare providers, and government institutions. You can find JJ on Twitter here and on Github here. Prior to IBM he was a partner architect at Chef Software. You can read more about Elizabeth on her website, princessleia.com, and yes, we are going to have her back on the podcast in the future to talk about how and when she got that domain name. If you're interested in learning COBOL, a ton of resources are available here. As always, don't forget about the upcoming charity event, DevAroundTheSun, which is bringing together a lot of cool developers for talks and activities, with proceeds going to support those impacted by the COVID-19 pandemic.\",\"3424\":\"Sara shares the story of a developer conference that was smoke bombed by an Arduino bot gone haywire. It was this chaos that inspired her to dig deeper into Arduino, which would eventually play a big role in helping her to found her company, Jewelbots. Paul unravels the mystery of what's really inside the Goonie Box: a timepiece, puzzle, and mechanical wonder that Guido uses to test his house guests. This week's lifeboat goes to Terminator17, who helped solve a problem around object detection using a Tensorflow-gpu.\",\"1843\":\"In Python, the pass keyword is an entire statement in itself. This statement doesn\\u2019t do anything: it\\u2019s discarded during the byte-compile phase. But for a statement that does nothing, the Python pass statement is surprisingly useful. Sometimes pass is useful in the final code that runs in production. More often, pass is useful as scaffolding while developing code. In specific cases, there are better alternatives to doing nothing. In this tutorial, you\\u2019ll learn: What the Python pass statement is and why it\\u2019s useful How to use the Python pass statement in production code How to use the Python pass statement as an aid while developing code What the alternatives to pass are and when you should use them Free Bonus: Click here to get a Python Cheat Sheet and learn the basics of Python 3, like working with data types, dictionaries, lists, and Python functions. Python pass Statement: Syntax and Semantics In Python syntax, new indented blocks follow a colon character (:). There are several places where a new indented block will appear. When you start to write Python code, the most common places are after the if keyword and after the for keyword:\",\"2836\":\"Book a mock interview or coaching session with a Wurl engineer as early as tomorrow on interviewing.io! Sign up here: https:\\/\\/interviewing.io\\/signup?utm_source=youtube.com&utm_medium=referral&utm_campaign=video_link Check out the feedback by the Wurl interviewer and the full transcript on https:\\/\\/interviewing.io\\/recordings\\/Java-Wurl-1\\/ Disclaimer: All interviews are shared with explicit permission from the interviewer and the interviewee, and all interviews are anonymous. interviewing.io has the sole right to distribute this content.\",\"3416\":\"Stack Overflow Podcast - Episode #72 by The Stack Overflow Podcast\",\"3356\":\"Three months ago, we interviewed Prashanth during his first week on the job. Now, with a full quarter of work under his belt, our new CEO reflects on what we accomplished over the last decade and lays out his vision for where Stack Overflow, as a company and community, will be heading over the next year and beyond. Paul explains why engineers prefer to give blunt feedback, even in a public setting. Sara drops some hints about our plans for the future of the Stack Exchange network. One of these big goals is to better integrate knowledge from these with the activity that happens on Stack Overflow, so that the knowledge being shared on Server Fault or Super User can easily be found by users on Stack Overflow, and vice versa. Stay tuned for more details and feel free to share your thoughts for what would work to improve the user experience. Prashanth talks about the forces reshaping the developer landscape: cloud services, machine learning, container orchestration, and more. How can we help new developers, both hobbyists and professionals, find what they need on our sites, and empower them so they feel comfortable asking questions and providing answers.\",\"3509\":\"Stack Exchange Podcast - Episode #23 w\\/ James Portnow by The Stack Overflow Podcast\",\"219\":\"Neural Networks from Scratch in print! Something for everyone from novices to well-practiced with #deeplearning, by learning how #neuralnetworks actually work, rather than simply making imports and method calls :) invidious.snopyta.org\\/sNHiM0DoEAg Get it here: nnfs.io\",\"3845\":\"Given an array arr[] of size N, the task is to split the array into two subsets such that the Bitwise XOR between the maximum\\u2026 Read More The post Partition array into two subsets with minimum Bitwise XOR between their maximum and minimum appeared first on GeeksforGeeks.\",\"3522\":\"Glitch, a platform that makes it easy for anyone to create or remix a web app, has seen over five million apps created by users. You can read more about how it works here. If you want to learn a little about how it works with Docker, check out this piece here. If you want to know more about the shared history of Stack and Glitch, you can read up on it here. TLDR; Glitch was born out of Fog Creek software and counts Joel Spolsky and Michael Pryor as founders. Glimmer is a new web magazine from the folks at Glitch. It focuses on creators and makers, with a special emphasis on unearthing the human stories of people building today's software. While you're here, don't forget to take 15-20 minutes and share your opinions in our 2020 Developer Survey. Whether Stack Overflow helped you during your journey as a programmer or not, we want to hear from everyone who codes. Some fun background for younger listeners: Geocities - a popular platform for building and hosting a personal website and linking it with others that share similar themes. BetaBeat - a website launched by The NY Observer that covered the SIlicon Alley tech scene. It was how Ben first met Anil, Joel, and many others. Heroku Docker If you have comments, questions, or suggestions, please send us an email at podcast@stackoverflow.com Today\\u2019s episode is brought to you by Refinitiv. Unlock new possibilities with consistent, high-value market data from Refinitiv. Try the Refinitiv Eikon Data API for the largest breadth and depth of data and community tools with native Python support. Check out refinitiv.com\\/stackpodcast to try the Eikon Data API today. Refinitiv. Data is just the beginning.\",\"3391\":\"Stack Overflow Podcast - Episode #68 by The Stack Overflow Podcast\",\"3614\":\"This week, we chat with Adam Gordon Bell, Director of Developer Relations at Earthly and host of the CoRecursive podcast. We discuss Earthly\\u2019s efforts to design better build scripts and why engineers enjoy telling stories about mistaken assumptions. Episode Notes As promised, here is the grass hat. You can find out more about Earthly here. We spend a little time talking about Nix OS the operating system you can roll back if you don\\u2019t like a patch. Raise your hand if you remember learning computer science with Turbo Pascal. Maybe you didn\\u2019t know, but discs aren\\u2019t as slow as people think. Adam\\u2019s recent episode is about upending common assumptions on IO performance. Shoutout to our Lifeboat badge winner of the week, Josh Smift, for answering the question: How to delete *.web files only if they exist. The post Podcast 294: Cleaning up build systems and gathering computer history appeared first on Stack Overflow Blog.\",\"3490\":\"Stack Exchange Podcast - Episode #61 - The \\\"What Jay's Done Wrong\\\" Podcast by The Stack Overflow Podcast\",\"1846\":\"One of the best ways to learn something well is to teach it. This week on the show, we have Kelly Schuster-Paredes and Sean Tibor from the Teaching Python podcast. Sean and Kelly teach middle school students Python and share their art and science of teaching Python on their podcast. They wanted to come on the show to talk about the Real Python articles, quizzes, and other resources they use when teaching their students. [ Improve Your Python With \\ud83d\\udc0d Python Tricks \\ud83d\\udc8c \\u2013 Get a short & sweet Python Trick delivered to your inbox every couple of days.\",\"3398\":\"Stack Exchange Podcast - Episode #25 w\\/ Mark Russinovich by The Stack Overflow Podcast\",\"3397\":\"If you're in the market for a used car and some retro web design, look no further. Thanks to our Lifeboater of the week, G\\u00fcnter Z\\u00f6chbauer, for explaining how to use the MyHomePage widget in Flutter.\",\"3534\":\"Stack Overflow Podcast - Episode #47 by The Stack Overflow Podcast\",\"3604\":\"This week we chat with Jory Burson and Myles Borins of the OpenJS Foundation. Javascriptlandia is a new initiative from the foundation that allows passionate fans and contributors to help fund and maintain the Javascript ecosystem. And yes, there was once a plan to acquire a private island and certify it as a nation state so that they could start giving out top level .js domains. The dream of Javascriptlandia lives on. Episode Notes You can read more about Javascriptlandia here. It is part of larger conversation happening on Google\\u2019s Open Source Blog and through initiatives like Github allowing corporations into their Sponsors program. For a delightfully old school and interactive website about Myles, click here. For his Twitter, go here. You can find Jory\\u2019s website here and her Twitter presence here. This week\\u2019s lifeboat badge goes to Marijn van Vliet for answering the question: How do I return a char array from a function? TRANSCRIPT The post Podcast 296: Adventures in Javascriptlandia appeared first on Stack Overflow Blog.\",\"3368\":\"Stack Overflow Podcast - Episode #45 by The Stack Overflow Podcast\",\"3504\":\"Stack Exchange Podcast - Episode #49 - The One Where We Edited Out The Title Reference by The Stack Overflow Podcast\",\"3337\":\"How could you not love a team with a bio like this: \\\"We\\u2019re a young and dynamic team of messy data-scientists who have failed at being employed on the real market. Our experience in losing data and throwing files away is more than amazing! Over the years, we have managed to get rid of so much important data at home and even at work.\\\" Find out how you pay other people to throw your data away here. The New York Times reports on the rising prices of old computers and their parts. Retro-computing is fun, especially when you're stuck at home for...feels like a while now. Stack Overflow memes have made it to Tik Tok, and it is joyous. To round things out we chat about our love of e-ink, the desire to buy a reMarkable 2, and this amazing piece of digital wall art. This week's lifeboat badge winner is Gordon Larrigan, who answered the question: How can you sort an array of arrays in JavaScript?\",\"1247\":\"Xavier NX devkit more info and purchasing: https:\\/\\/nvda.ws\\/3bqcNEx NVIDIA GTC 2020 Part 6: Ampere\\/A100: https:\\/\\/www.youtube.com\\/watch?v=onbnb_D1wC8 Channel membership: https:\\/\\/www.youtube.com\\/channel\\/UCfzlCWGWYyIQ0aLC5w48gBQ\\/join Discord: https:\\/\\/discord.gg\\/sentdex Support the content: https:\\/\\/pythonprogramming.net\\/support-donate\\/ Twitter: https:\\/\\/twitter.com\\/sentdex Instagram: https:\\/\\/instagram.com\\/sentdex Facebook: https:\\/\\/www.facebook.com\\/pythonprogramming.net\\/ Twitch: https:\\/\\/www.twitch.tv\\/sentdex\",\"4974\":\"Welcome to ISSUE #57 of the Overflow! This newsletter is by developers, for developers, written and curated by the Stack Overflow team and Cassidy Williams at Netlify. This week, teach your kids coding basics with fun apps, draw straight lines by hand, and recreate Minecraft with React in about an hour. From the blog Want to teach your kids to code? Here are three apps that can help. stackoverflow.blog Many coders have kids at home. What better time to start exposing our kids to the joys of programming! Coding teaches kids the fundamentals of logic and encourages them to think abstractly, and these apps will help them get started. Have the tables turned on NoSQL? stackoverflow.blog NoSQL was the next big thing in system architecture in 2011, but overall interest in it has plateaued recently. What is NoSQL, what does it have to do with modern development, and is it worth implementing in your project? Podcast 303: What would you pay for \\/dev\\/null as a service? stackoverflow.blog There is nothing that isn\\u2019t better as a managed cloud service. Scaling Your Startup with MongoDB Atlas: A Series promotion You\\u2019d rather spend time growing your startup vs. managing your database. Join this three-part series to learn how to take time-consuming database management activities off your plate so you can focus on building your product and growing your business. Interesting questions How did people make things perfectly straight? hsm.stackexchange.com \\u201cPerfection is reserved for abstractions. Real objects respect tolerances.\\u201d How does Shutterstock keep getting my latest debit card number? security.stackexchange.com Losing your card and getting a new number won\\u2019t cancel your subscriptions, even the ones you want to get rid of. What would happen if a 10-kg cube of iron, at a temperature close to 0 kelvin, suddenly appeared in your living room? physics.stackexchange.com Besides discovering that teleportation is real, it would be pretty chill. Can a computer analyze audio quicker than real time playback? superuser.com Computers don\\u2019t need to listen to audio to understand. Links from around the web Building JavaScript Minecraft in one hour www.youtube.com Test your React skills with this walkthrough on how to build Minecraft (yes, Minecraft) in an hour. Build, compile, run: A crash course in classpaths dev.to If you write in any JVM language, this is a great introduction to the fundamentals of classpaths and classloading. Creating a pomodoro app with open-source tools www.buymeacoffee.com Here\\u2019s an interesting piece on choosing technologies for your apps (in this case, Vue, Nuxt.js, Tailwind CSS, and Netlify), and how one developer built their own pomodoro timer. Building a hexagonal grid using CSS grid ninjarockstar.dev Flex your CSS Grid muscles (see what we did there?) with this tutorial on how to make a hexagonal grid for your applications. Spend less time in Slack. Try Stack Overflow for Teams. The post The Overflow #57: \\/dev\\/null on demand appeared first on Stack Overflow Blog.\",\"3489\":\"In this week's episode... Dogs and cats living together! Mass hysteria! Microsoft has now joined the Linux Foundation; Google has joined the .Net steering committee; and Visual Studio is available for Mac. The end times are here. Luckily, our good friend and Jewelbots founder Sara Rey Chipps stops by to make us feel better about the world.\",\"3613\":\"In this episode, we discuss the appeal of great API design, when it\\u2019s worth spending money on a custom CMS, and why every app evolves towards greater complexity until it can send email. Episode Notes The starting point for today\\u2019s conversation was an argument made by Guillermo Rauch in this blog post. \\u201cAnd each time, your frontend has an opportunity to impress, delight, perform, be accessible and memorable. What\\u2019s more, frontend is an area of technological and artistic differentiation, while backend becomes increasingly commoditized, turnkey and undifferentiated.\\u201d Sure, programming in PowerPoint isn\\u2019t very practical. That doesn\\u2019t mean it can\\u2019t be lots of fun, and teach you a few things. Speaking of learning things, we chat a bit about Alan Kay, who has a wonderful talk on the ways we can use computers to illustrate complex concepts to children. TRANSCRIPT The post Podcast 302: Programming in PowerPoint can teach you a few things appeared first on Stack Overflow Blog.\",\"3348\":\"On this week's episode, Jenn Schiffer - aka jennmoneydollars - talks to us about joining Fog Creek as the company's new Community Engineer. She'll be focused on their brand new community, Glitch, which launched today. The gang also listens to Joel rant a lot about a shack he owns.\",\"936\":\"What is it like to design a Python library for three different audiences? This week on the show, we have Nir Aides, creator of Jupylet. His new library is designed for deep reinforcement learning researchers, musicians interested in live music coding, and kids interested in learning to program. Everything is designed to run inside of a Jupyter notebook. Nir\\u2019s initial goal was to create a framework to study deep reinforcement learning, and this led to building a framework for 2D and 3D games and graphics. As he continued the development, he realized that this interactive environment could be a useful tool for learning Python. We also talk about how he got interested in live music coding and the advanced mathematics of sound synthesis. Nir also shares some resources for finding graphic assets and tools for creating 3D models. Course Spotlight: Using Jupyter Notebooks In this step-by-step course, you learn how to get started with the Jupyter Notebook, an open source web application that you can use to create and share documents that contain live code, equations, visualizations, and text. Topics: 00:00:00 \\u2013 Introduction 00:02:25 \\u2013 When did you start the project? 00:02:50 \\u2013 What is deep reinforcement learning? 00:06:11 \\u2013 How is deep reinforcement learning implemented in Jupylet? 00:06:56 \\u2013 What graphic libraries are being used? 00:09:56 \\u2013 What are the audiences for Jupylet? 00:14:15 \\u2013 Why create features for musicians? 00:15:52 \\u2013 Interactive code 00:19:13 \\u2013 Were you using Jupyter Notebooks previously? 00:24:01 \\u2013 Sponsor Digital Ocean 00:24:40 \\u2013 Scaling features and making it kid friendly 00:28:59 \\u2013 Outside help and learning about audio synthesis 00:33:31 \\u2013 Using NumPy for synthesis, effects, and algorithmic reverb 00:39:08 \\u2013 Video Course Spotlight 00:40:13 \\u2013 Relying on other packages for your own package 00:42:26 \\u2013 Assets for game design and working with 3D 00:47:51 \\u2013 What has feedback been like? 00:48:31 \\u2013 Looking for contributors 00:49:45 \\u2013 More on live music looping 00:53:24 \\u2013 What are you excited about in the world of Python? 00:55:41 \\u2013 What do you want to learn next? 01:01:13 \\u2013 Thanks and goodbye Show Links: Jupylet: GitHub Project Page Jupylet: Read the Docs Deep Reinforcement Learning: Wikipedia article DQN Breakout: YouTube Learn OpenGL ModernGL: ModernGL is a high performance rendering module for Python SID (Sound Interface Device) - C64 Wiki Chiptune: Wikipedia article The Best Chiptune Groups\\/Artists: Ranker.com Elektron SidStation: Wikipedia article Sonic Pi: Welcome to the future of music FoxDot: Live Coding with Python and Super Collider Nyquist frequency: Wikipedia article Aliasing: Wikipedia article Coding a basic reverb algorithm - Part 2: An introduction to audio programming Openair: Demo, download and share acoustic impulse responses Jupylet Docs: Impulse Response Files Versilian Community Sample Library: Virtual Instruments Versilian Community Sample Library: Github Free Sound Samples: One Laptop per Child One Laptop per Child: Wikipedia article Kenney.nl: Free game assets, no strings attached Texture Haven Free PBR Texture Websites: The Graphic Assembly Blender: Open Source 3D Creation Episode 7: AsyncIO + Music, Origins of Black, and Managing Python Releases import asyncio: Learn Python\\u2019s AsyncIO #1 - The Async Ecosystem PyTorch: Optimized Tensor Library for Deep Learning Using GPUs and CPUs Support the podcast & join our community of Pythonistas\",\"599\":\"Book a mock interview or coaching session with a Walmart engineer as early as tomorrow on interviewing.io! Sign up here: https:\\/\\/interviewing.io\\/signup?utm_source=youtube.com&utm_medium=referral&utm_campaign=video_link Check out the feedback by the Walmart interviewer and the full transcript on https:\\/\\/interviewing.io\\/recordings\\/Python-Walmart-1\\/ Disclaimer: All interviews are shared with explicit permission from the interviewer and the interviewee, and all interviews are anonymous. interviewing.io has the sole right to distribute this content.\",\"3540\":\"To kick things off, we talk about Yap, a fun new project from Paul\\u2019s company, Postlight. Employees get to partake in a Labs program where they can pursue side projects that interest them. Yap is \\\"an ephemeral, real-time chat room with up to six participants. Your messages appear and disappear as quickly as you type them.\\u201d It was built with Elixir...ooooh. For our interview this week we sat down with Jon Gottfried and Mary Siebert from Major League Hacking. Jon is the company\\u2019s co-founder and Mary is the Hackathon Community Manager. We discuss how this organization has become a global phenomenon over the past few years, reaching hundreds of thousands of developers. Things that happen these days at Major League Hackathons: Painting succulents Cup stacking competitions Therapy dogs, lots of them If you're interested in sponsoring a Major League Hackathon, check out the info here. This is our last episode of the year. We\\u2019ll be back in 2020 with some more amazing guests and brilliant banter. Thanks for tuning in, see ya in the new year.\",\"3426\":\"This is a great crash course on just-in-time compilers written by Lin Clark, who works in advanced development at Mozilla on Rust and Web Assembly. It references the film Arrival and kicked off our discussion on the podcast. Paul talks about his first love, XSLT, and how that language actually foreshadowed a lot of what would become popular staples of modern programming languages. Sara and Paul share their thoughts on what it takes to craft a new language as a programmer and why they have never embarked on this arduous intellectual adventure. This brought to mind a well written essay from one of the creators of Redis, who is stepping back from managing the project to work on something new. Here is, in my opinion, a profound quote from that piece: \\\"I write code in order to express myself, and I consider what I code an artifact, rather than just something useful to get things done. I would say that what I write is useful just as a side effect, but my first goal is to make something that is, in some way, beautiful. In essence, I would rather be remembered as a bad artist than a good programmer.\\\" Our lifeboat badge of the week goes to Farhan Amjad, who answered the question - How can I implement PageView in SwiftUI?\",\"4851\":\"Recruitment Process: Accenture conducts 4 rounds to select freshers as ASE and FSE. I was applied for ASE(Associate software engineer). Round 1 (Cognitive, Technical 90min):\\u2026 Read More The post Accenture Interview Experience 2021 appeared first on GeeksforGeeks.\",\"3576\":\"This week we chat about the massive Solarigate hack, how attitudes towards bullying have changed over the years, and the programming projects we have in mind for the holidays. Episode Notes There is a nice breakdown of the Solarigate attack here, but the most important thing to know is that just seeing the words BusinessLayer.dll is enough to make our eyes glaze over and our defenses go down. One interesting second order effect of this intrusion is that it will be difficult to know when all malicious code and access has really been removed. It brought to mind the classic Turing Award Lecture, Reflections on Trusting Trust by Ken Thompson. If you\\u2019re trying to entertain kids over the holidays, Ben will be messing around with Roblox, which lets you create your own mini-games and has several hooks to deeper programming capabilities. Our Lifeboat badge winner this week is Chinito, who answered the question of how you can: Set style using pure JavaScript The post Podcast Episode 299: It\\u2019s hard to get hacked worse than this appeared first on Stack Overflow Blog.\",\"3583\":\"Like many of you, I am a coder with kids at home. What better time to start exposing our kids to the career we all think is amazing! You do think programming is amazing, right? Well, even if you don\\u2019t, coding teaches kids the fundamentals of logic and encourages them to think abstractly. Let\\u2019s face it, technology is only going to become more pervasive over time, so even if your kids go on to be plumbers, doctors, or teachers, they will likely have to interface with technology in their career of choice. Before we go any farther, be sure to temper your expectations about what your child will gain from these apps. None of these apps will \\u201cteach your kids to code,\\u201d but rather, they are the first step in a journey toward understanding basic logic, analysis, and design. These are the building blocks to coding and a more sophisticated understanding of information systems and processing. Above all the end goal is to have fun! To see what\\u2019s available for kids, I (and my daughter) reviewed three coding apps\\u2014Scratch Jr., Codespark, and Kodable\\u2014though there are many more to choose from. My daughter is six years old and just started first grade. For each of these apps, I first downloaded them myself and worked on a few of the challenges. I then presented them to my daughter in a non-threatening way; like \\u201cHey, check out this new app I found,\\u201d and I would work on a challenge while she watched. If you have kids you know it only takes them about ten seconds of watching you do it before they say \\u201cLet me try!\\u201d I then let her \\u201cplay\\u201d and only jumped in when she asked for help or became visibly frustrated with a level or task. After this point, I mostly just sat back and made note of if\\/when she would return to the app on her own. While homeschooling, my partner and I decided no TV or games during working hours, so if we were not working on a particular learning task, I would say to my daughter, \\u201cYou can have screen time, but it has to be educational.\\u201d In addition to a handful of other learning apps, she also has the option to play on the coding apps. The majority of use in our family was on an iPad. I did some testing on a Fire HD 10 with Scratch Jr. and Codespark. Kodable does not have an app for Fire, though it can be used in a browser on Amazon Fire. Scratch Jr. Scratch Jr. was developed by Tufts University, PBS Kids, and the MIT Media Lab and is an offshoot of the popular Scratch App. While Scratch is intended for children eight and up, Scratch Jr. was created for younger kids ages five to seven. Scratch Jr. has a similar look\\/feel to Scratch and is based on the same idea of creating interactive stories. Scratch Jr. allows kids to create artboards and stories with characters that can talk and move around the artboard. Scratch Jr. does not expose kids to any actual code; rather, it reinforces coding concepts through the use of puzzle pieces (drag-and-drop programming) that allow kids to control their character. Each puzzle piece designates a different action or movement. Kids can not only select the order of the movements of their character but they can also use loops and functions to repeat actions. Kids can modify just about every aspect imaginable for these stories from the clothes and colors of the characters and backgrounds to the making audio recordings and text subtitles to add to the stories. Scratch Jr. has a more creative feel and doesn\\u2019t feel as \\u201ccomputer science-y\\u201d as the other two apps, and that\\u2019s not a bad thing. It really depends on your goals as a parent and what your child enjoys. If the task or challenges become too onerous, your child will quickly withdraw, so the fun factor is a must. As you can see in the image below, the artboard can be a little busy especially for younger kids. I can\\u2019t stress enough that introducing these apps to your kids really has to be a collaborative effort between you and your child. In the beginning, you may need to hover and help them along as they explore. Artboard in Scratch Jr. Website: https:\\/\\/www.scratchjr.org\\/ Platform: iOS, Android Price: Free Pros: Good introduction to basic logic Lots of creative freedom The price is right (free!) Cons: Non-profit, so limited active development Not as technical Formal curriculum is less well developed Kodable Kodable was founded in 2012 and, along with CodeHS boasts, a K-12 pathway for kids to learn to code. Kodable offers kids the ability to create and customize characters in addition to drag-and-drop style programming that is common to all of the apps covered in this article. However, Kodable puts its own spin on drag-and-drop programming by challenging your child to use loops and functions to move their character through various mazes. These challenges were the best implementation I saw in all the apps I tested for improving logic and problem-solving. Drag and drop programming in Kodable Beyond drag-and-drop programming, Kodable exposes kids to actual code even though they are not actually typing out the code themselves. In the image below, you can see an example of this. Getting exposed to code in Kodable The code is pre-filled in the text field at the top and kids drag the closing tag onto the screen below to stop the green slime from attacking their character. This is an interesting approach. My daughter enjoyed this particular game, but I\\u2019m unsure about how much the coding part of it actually sank in. However, I think the idea is that later, in more advanced lessons, kids will actually begin to use the concepts you see here like instantiating new objects and setting object attributes in code they write themselves. Kodeable also includes socially conscious themes with games like Beach Cleanup, where kids remove trash from the beach to save seals and turtles. Kodable offers robust parental login where you can see your child\\u2019s progress. You can create multiple profiles, so I created my own profile to experiment with the games and levels before my daughter reached them to be more helpful when she reached them. Viewing your child\\u2019s progress in Kodable Website: https:\\/\\/www.kodable.com\\/ Platform: iOS, Web Browser Price: 7 days free\\/$6.99 a month\\/$49.99 a year\\/$120 lifetime YouTube Channel: https:\\/\\/www.youtube.com\\/user\\/kodablekidscancode Pros: Full k-12 curriculum Good exposure to more advanced programming concepts Regular email promotions with code\\/game challenges Cons: Learning path is not always clear Some challenges are to difficult with no clear solution Code Spark Code Spark employs the same drag-and-drop-style logic games as the other apps, but has more of an arcade feel to the games. My daughter seemed to enjoy the games in Codespark the most of all the apps I tested. More than once, I have found her playing games in Codespark without any prompting. Below you can see a screenshot of one of the drag-and-drop games using loops. The \\u201cExplore\\u201d section of Codespark introduces kids to more sophisticated programming concepts like variables and inequalities, stacks and queues, and boolean logic. Some of the games that help reinforce these concepts are better than others and, for many of the games, it will require some hand holding to help your child through the levels. I found some games in Codespark are not very intuitive, and like a lot of learning in programming, the tasks end up feeling a bit contrived. Below is an example from the \\u201cStacks and Queues\\u201d game where you have to choose the order of animals from the platform to fill the appropriate character at the bottom. The example above is a game that is super fun and challenging, but my daughters attention span began to wane after a short time. So again, making sure the games are fun and engaging while still reinforcing programming concepts is the line these apps are trying to walk. Website: https:\\/\\/codespark.com\\/ Platform: iOS, Android, Web Browser Price: 7 days free\\/$7.99 a month YouTube Channel at https:\\/\\/www.youtube.com\\/channel\\/UCRDYihW5bt2bFeZZNjM6alw Pros: Good use of gamification Exposure to advanced concepts Cons: Need to sign up for teacher account to get lessons and formal curriculum Kodable and Code Spark have a more complete curriculum that kids can follow as they get older, whereas Scratch Jr\\u2019s is pretty limited. Both Kodable and CodeSpark have a curriculum for educators and offer robust parental login controls where you can see your child\\u2019s progress. In the end, you really can\\u2019t lose with any of these apps. However, Kodable and CodeSpark definitely offer a more well-rounded experience for kids and a lot of more features that we have come to expect in modern apps. For less than $10 per month, the bar is pretty low for giving these apps a try and see how your kid likes them. Having these apps available to your kids also gives some nuance to their screen time. So rather than screen time being an anything goes experience (which means video), you can add \\u201ceducational screen time\\u201d to their options. I hope you found this article useful and, if there are programming apps your kids are using, let us know about them in the comments below. The post Want to teach your kids to code? Here are three apps that can help. appeared first on Stack Overflow Blog.\",\"602\":\"Book a mock interview or coaching session with an Amazon engineer as early as tomorrow on interviewing.io! Sign up here: https:\\/\\/interviewing.io\\/signup?utm_source=youtube.com&utm_medium=referral&utm_campaign=video_link Check out the feedback by the Amazon interviewer and the full transcript on https:\\/\\/interviewing.io\\/recordings\\/Python-Amazon-9\\/ Disclaimer: All interviews are shared with explicit permission from the interviewer and the interviewee, and all interviews are anonymous. interviewing.io has the sole right to distribute this content.\",\"3318\":\"We discuss how a demand for more diverse clip art helped lay the foundation for some of the first black owned and operated software companies in the United States, and the ways in which social media has helped to empower a new generation of voices to demand change in the tech industry and beyond. You can check out some of the pioneering work on building digital community at Afrolink, NetNoir, and UBP. McIlwain also draws attention to the history of computer technology as a tool of police surveillance, going all the way back to the Police Beat algorithm in 1968. You can find out more about Prof McIlwain here. You can purchase his book here. We also spend some time this week talking about our new community initiatives. Sara, along with Juan Garza from our community team, wrote a big post outlining all the work we\\u2019re hoping to do in 2020 and how we\\u2019re using data to inform the changes we are making. Keep an eye out for future posts in this series, The Loop, and let us know what you want to see by lending your voice to our Through The Loop survey.\",\"569\":\"Location based databases are extensively used by apps like Google Maps, Uber and Swiggy. We explore the data structures and algorithms which allow spatial or location based queries, like the quad tree and the Hilbert Curve. For now, we haven't dived deep into polygon intersections or R-trees. System design video course: https:\\/\\/get.interviewready.io\\/courses\\/system-design-interview-prep Course chapters: 1) Design an email service like Gmail 2) Design a rate limiter 3) Design an audio search engine 4) Design a calling app like WhatsApp 5) Design and code a payment tracking app like Splitwise The chapters have architectural diagrams and capacity estimates, along with subtitled videos. Use the coupon code of 'earlybird' to get a 20% discount. References: Google S2: https:\\/\\/blog.christianperone.com\\/2015\\/08\\/googles-s2-geometry-on-the-sphere-cells-and-hilbert-curve\\/ Hilbert Curve: https:\\/\\/www.youtube.com\\/watch?v=3s7h2MHQtxc Fractals: https:\\/\\/www.youtube.com\\/watch?v=gB9n2gHsHN4 System Design Playlist: https:\\/\\/www.youtube.com\\/playlist?list=PLMCXHnjXnTnvo6alSjVkgxV-VH6EPyvoX Segment Trees: https:\\/\\/youtu.be\\/W4KUVTjh8RQ Z-order curve: https:\\/\\/en.wikipedia.org\\/wiki\\/Z-order_curve You can follow me on: LinkedIn: https:\\/\\/www.linkedin.com\\/in\\/gaurav-sen-56b6a941\\/ Instagram: https:\\/\\/www.instagram.com\\/applepie404\\/ Quora: https:\\/\\/www.quora.com\\/profile\\/Gaurav-Sen-6 Twitter: https:\\/\\/twitter.com\\/gkcs_\",\"3389\":\"Stack Overflow Podcast - Episode #79 by The Stack Overflow Podcast\",\"3382\":\"If you follow community issues on the Stack network, you may be familiar with Aaron Hall. He took the time to respond to a post from our CEO and subsequently came by Stack Overflow to engage more deeply with our leadership and community teams. You can find his summary of events here. Most days, you can find him streaming on Twitch here. Nitsua60 is a moderator over on our RPG Stack Exchange, which is one of the 25 largest communities our users have created. He's there to help guide curious role players through the important questions in life, like: How Can a Unicorn Establish a Foreign Location as its own Lair When its Already The Lair of a Lich? Answer --a href=\\\"https:\\/\\/rpg.stackexchange.com\\/questions\\/166812\\/how-can-a-unicorn-establish-a-foreign-location-as-its-own-lair-when-its-alread\\\"\\/aa href=\\\"https:\\/\\/www.instagram.com\\/thestackoverflow\\/\\\"\\/aa href=\\\"https:\\/\\/www.nytimes.com\\/2020\\/03\\/23\\/opinion\\/coronavirus-mcchrystal-leadership.html\\\"\\/aa href=\\\"https:\\/\\/academia.meta.stackexchange.com\\/questions\\/4680\\/i-need-help-adapting-my-academic-workflow-to-the-covid-19-coronavirus-crisis-w\\\"\\/a\",\"3366\":\"Stack Overflow Podcast - Episode #59 by The Stack Overflow Podcast\",\"3351\":\"This week, Ben and Paul are flying as a duo, a true dad-cast. We walk through the slow build of increasingly complex keyboard macros, followed by the inevitable cleansing and renewal of an empty slate. Pus, type systems and type safety, the galaxy brain edition.\",\"3462\":\"Dries explains how Drupal began: as a intranet, not internet, message board for his college community. It's now the technology underpinning tens of millions of websites, including some of the biggest in the world. We get the story behind the name, an accident overlap of language that became the software's iconic mascot. And we talk about the process that allowed this to scale from an open source project shared across a few dorm rooms to something used by massive public companies. Stay tuned Friday, when we'll publish part two of our chat with Dries. As always, shout out to our Lifeboat badge winner of the week, for helping to answer the question: Can you use React Native to create a desktop app? As to whether or not you should, well, that's another question for another time. You can find more about Dries at his website. You can read more about his experience with Acquia here.\",\"3257\":\"\\u201cYour big opportunity may be right where you are now.\\u201d \\u2013 Napoleon Hill A wise man once said, \\u201cWe are a community of doers.\\u201d You arrived at Topcoder for a number of reasons: Competitive programming? Gig work? Newbie UX designer? QA expert? Regardless of why or how you are here. Something prompted you to register and join our community or maybe you\\u2019re still on the fence. This past year has been a bit all over the place for so many of us. However, one thing has remained constant; our desire to provide our community with numerous opportunities to grow and learn. We also don\\u2019t plan to slow down any time soon. More Opportunity For 2021 We are looking forward to keeping the opportunities coming for 2021, including: New and renewed partnerships with AlefEdge, Adobe, Mulesoft, Headspin, and others to allow you to learn new tech, get certified, and earn money with your new skills. More educational resources to help you be successful in one of our freelance gigs or as a full-time Topcoder member. Weekly chats with the community team every Monday at 10:00 UTC -5. Kick-off each week with the latest at Topcoder and talk to us face to face for help, networking, or to just say \\u201cHello\\u201d. Beta Testers group to gain access to the latest features of the Topcoder platform and help us lead new ways in testing experiences. Our Crowd for Good initiative for the Yellowstone Economic Research Center (YERC). Interesting timed SRM like contests for Software Developers \\u2013 Rapid Development Matches (RDMs) focused on making you practice and get better at web\\/mobile development languages, technologies, libraries and frameworks. New Topcoder Skill Builder challenges where you can ramp up on new technologies, get the verified skill added to your profile, practice for RDM\\u2018s and help you get a gig. More Rookie SRMs for newbies to get motivated for competitive programming. More THRIVE articles for you to digest with plans to top the over 1,000 we added in 2020. New webinars with field experts and professional speakers looking to help you advance your careers, your skills, and your personal brand. We hope that with all the opportunities and more being planned, you will become a doer in our community \\u2013 doing amazing things for yourself, your family, your life, and for our community. The post Giving You the 2021 Opportunity to Become a Doer appeared first on Topcoder.\",\"3474\":\"In this week's edition of the Stack Exchange podcast, our hosts talk about salary transparency for developers, Joel's One-Minute Tech Review, and why we're banning a particular insult from Stack Overflow.\",\"3440\":\"Stack Exchange Podcast #70 - David Was Wrong And Jason Was Right by The Stack Overflow Podcast\",\"3475\":\"Stack Exchange Podcast - Episode #38 - This One's At Least a 4\\/10 by The Stack Overflow Podcast\",\"3376\":\"You can learn all about 100 Days of Code on their website. Alex also published a newsletter about habit forming and self-improvement. You can learn more about that and subscribe here. If you want to follow Alex on Twitter, you can find him here. This week's Lifeboat badge goes to Chris, who helped a user understand why ComponentDidCatch was not working in their react-native app.\",\"521\":\"How does your computer arrange with a server to start talking in code? Dr Mike Pound explains the TLS handshake where the server and client organise everything. https:\\/\\/www.facebook.com\\/computerphile https:\\/\\/twitter.com\\/computer_phile This video was filmed and edited by Sean Riley. Computer Science at the University of Nottingham: https:\\/\\/bit.ly\\/nottscomputer Computerphile is a sister project to Brady Haran's Numberphile. More at http:\\/\\/www.bradyharan.com\",\"3308\":\"Sara is spending her time as a fully remote worker trying to learn more about open source governance and foundations. Turns out there is a lot of overlap with the work Stack does alongside its community. Paul has a project for playing with math in your storytelling. You can check it out here. Our lifeboat of the week goes to Stack Overflow user Scolytus, who answered the following question: Why am I getting an error when creating a C Struct initialization with char array?\",\"952\":\"What is an effective way to prepare for a Python interview? Would you like a set of problems that increase in difficulty to practice and hone your Python skills? This week on the show, we have Jim Anderson to talk about his new Real Python article, \\u201cPython Practice Problems: Get Ready for Your Next Interview.\\u201d This article provides several problems, which include skeleton code, unit tests, and solutions for you to compare your work. David Amos also joins us this week, and he has brought another batch of PyCoder\\u2019s Weekly articles and projects from the Python community. We cover these topics: Structural Pattern Matching, Common Python Data Structures, A Tax Attorney Uses Python, Discover the Role of Python in Space Exploration, and Five Pairs of Magic Methods in Python That You Should Know. Course Spotlight: How to Implement a Python Stack In this course, you\\u2019ll learn how to implement a Python stack. You\\u2019ll see how to recognize when a stack is a good choice for data structures, how to decide which implementation is best for a program, and what extra considerations to make about stacks in a threading or multiprocessing environment. Topics: 00:00:00 \\u2013 Introduction 00:01:37 \\u2013 Python Practice Problems 00:08:19 \\u2013 Structural Pattern Matching 00:14:16 \\u2013 Common Python Data Structures 00:17:49 \\u2013 Video Course Spotlight 00:18:42 \\u2013 A Tax Attorney Uses Python 00:23:36 \\u2013 Discover the Role of Python in Space Exploration 00:26:33 \\u2013 Thanks for the Reviews! 00:27:28 \\u2013 5 Pairs of Magic Methods in Python That You Should Know 00:36:56 \\u2013 python-adventure: Original Colossal Caves Adventure Game 00:41:06 \\u2013 clifford: Geometric Algebra for Python 00:43:45 \\u2013 pippi: Computer Music With Python 00:46:24 \\u2013 Thanks and Goodbye Show Links: Python Practice Problems: Get Ready for Your Next Interview \\u2013 Are you a Python developer brushing up on your skills before an interview? If so, then this tutorial will usher you through a series of Python practice problems meant to simulate common coding test scenarios. \\u201cStructural Pattern Matching\\u201d; for Python, Part 2 \\u2013 The saga of PEP 622 continues with updates to the proposed structure of the match statement\\u2014which has some similarities to a switch statement\\u2014and a discussion on the best way to document objections to a PEP. Common Python Data Structures (Guide) \\u2013 In this tutorial, you\\u2019ll learn about Python\\u2019s data structures. You\\u2019ll look at several implementations of abstract data types and learn which implementations are best for your specific use cases. A Tax Attorney Uses Python \\u2013 See how one tax attorney uses Python to automate grueling and repetitive tasks and improve his business. While the article is non-technical, it\\u2019s always fun to see how Python is used in diverse fields. Discover the Role of Python in Space Exploration \\u2013 In this learning path from Microsoft, you\\u2019ll get an introduction to Python, and be inspired to learn, discover, and create using Python-based data science and machine learning to help generate knowledge about the world beyond Earth. 5 Pairs of Magic Methods in Python That You Should Know \\u2013 Magic, or \\u201cdunder,\\u201d methods are an important part of creating custom classes in Python. Learn about some commonly used magic methods by exploring hem in pairs that are frequently used together. python-adventure: Original Colossal Caves Adventure Game, but in Python 3 clifford: Geometric Algebra for Python pippi: Computer Music With Python Additional Links: Python Coding Interviews: Tips & Best Practices: Real Python Course The Singleton Pattern: A \\u201cCreational Pattern\\u201d from the Gang of Four book The Python heapq Module: Using Heaps and Priority Queues: Real Python Article How to Implement a Python Stack: Real Python Article codespell: Fix common misspellings in text files. Support the podcast & join our community of Pythonistas\",\"3484\":\"Stack Overflow Podcast - Episode #04 by The Stack Overflow Podcast\",\"3271\":\"Is it legal for source code containing undefined behavior to crash the compiler?https:\\/\\/stackoverflow.com\\/questions\\/57652799\\/is-it-legal-for-source-code-containing-undefined-behavior-to-crash-the-compiler True, you\\u2019re the boss, and the compiler works for you. But that doesn\\u2019t mean it always behaves just as you instructed. And that\\u2019s not necessarily a bad thing. https:\\/\\/stackoverflow.com\\/questions\\/56802645\\/understanding-the-as-if-rule-the-program-was-executed-as-written What is Logo, you ask? https:\\/\\/en.wikipedia.org\\/wiki\\/Logo_(programming_language) And what about Netlogo? https:\\/\\/ccl.northwestern.edu\\/netlogo\\/docs\\/programming.html William Chipps\\u2019 golden years - so close, and yet so far http:\\/\\/wacretiring.com\\/\",\"921\":\"Do you get upset and frustrated when you experience errors running your Python code? This week we have Martin Breuss on the show. We discuss how to learn Python through errors, and how errors really are your friends. Martin is a video course creator here at Real Python, and we talk briefly about several courses he\\u2019s created. We focus on his course about getting started with Django, as a jumping off point for the discussion. Martin talks about his work with Coding Nomads, and teaching Python around the world. He also provides some tips on debugging and writing good questions. This episode was recorded at an earlier date, and because of recent events Martin came back to discuss a new #StayAtHome Mentorship Program he\\u2019s working on. The program is meant not only for learners but also for those who want to try their hand at being a mentor. We also answer our first listener submitted question. Topics: 00:00:00 \\u2013 Introduction 00:01:18 \\u2013 Martin Breuss - Introduction 00:04:52 \\u2013 Programming background and MOOCs 00:10:17 \\u2013 Creating Courses for Real Python 00:12:02 \\u2013 Real Python - Django Course 00:14:50 \\u2013 How can errors teach you? 00:18:27 \\u2013 Reading errors from Django 00:22:31 \\u2013 Working with Coding Nomads 00:24:16 \\u2013 Common frustrations for students 00:26:52 \\u2013 Comments and forums 00:29:46 \\u2013 Asking good questions 00:34:24 \\u2013 Debugging tips 00:36:37 \\u2013 Course: Finding the right python code editor 00:42:46 \\u2013 What are you excited about? 00:46:05 \\u2013 MacOS Catalina Python issue 00:47:30 \\u2013 Music for programming 00:48:51 \\u2013 Extended episode details 00:49:29 \\u2013 #StayAtHome Mentorship Program 00:58:48 \\u2013 Listener submitted question 00:59:17 \\u2013 How would you learn Python from scratch? 01:09:39 \\u2013 Final thanks and links Show links: Finding the Perfect Python Code Editor - Video Course Get Started With Django: Build a Portfolio App - Video Course Get Started With Django Part 1: Build a Portfolio App - Original Article Using Jupyter Notebooks - Video Course Variables in Python - Video Course Beautiful Soup: Build a Web Scraper With Python - Article CodingNomads CodingNomads Platform AI Course With Sebastian Thrun and Peter Norvig Rice University - An Introduction to Interactive Programming in Python MacOS Catalina Python\\/GCC compiler issue I don\\u2019t like notebooks - Jupyter Notebook talk by Joel Grus FoxDot_ Live music coding with Python and SuperCollider Leap Motion Controller (The hand tracker) Geco - for making music with Leap Motion Controller #StayAtHome Mentorship Program Teaching Python Podcast Humble Bundle Pythonista Caf\\u00e9 Real Python Community Project Euler Sololearn - Code learning app m1m0 - Code learning app Music to code to links: Chillhop (The eternally studying girl) Related Article on Her Test Results Noisli - Just Noises Classical music playlists on youtube Support the podcast & join our community of Pythonistas\",\"3305\":\"Stack Exchange Podcast - Episode 68 - A Badger, A Horse, and a Dik-dik (The Documentation Episode) by The Stack Overflow Podcast\",\"3314\":\"In this week's episode, everyone tries to stump Nick Craver. Today's episode also stars Dr. Omoju Miller, data scientist extraordinaire, talking about media representations of developers and how the evil or geeky hacker stereotype hurts us.\",\"3523\":\"Stack Overflow Podcast - Episode #75 by The Stack Overflow Podcast\",\"3594\":\"In an ideal world, you wouldn\\u2019t need a resume. You\\u2019d have a recruiter reach out to you along the lines of: \\u201cYour ex-colleague Bob spoke extremely highly of your time working at Stack Overflow. Our company is growing, and we\\u2019d love to talk with you. Do you have time to chat with a few members of the team next Wednesday?\\u201d However, in reality, you will, at some point, find yourself applying at a company where Bob is not there to vouch for you, so you cannot skip through the process of being evaluated before the team will talk to you. I\\u2019ve been a hiring manager for numerous companies and typically go through hundreds of resumes per year. I\\u2019ve also researched the topic of writing a developer resume that represents you well while writing the book The Tech Resume Inside Out: What a Good Developer Resume Looks Like. For the book, I ended up talking with two dozen recruiters and hiring managers at the likes of Google, Facebook, Microsoft, Transferwise, and other well-known companies. Based on that experience, here are the seven pieces of advice that I give to engineers on writing a resume that represents you as fairly as possible. Know what the goal of your resume is Many engineers assume their resume should just contain highlights of their employment history. They\\u2019ve seen other people\\u2019s LinkedIn profiles and seen a few resumes. Most of these look like this, and companies must be interested in what you did. Right? Wrong. The goal of your resume is to sell you enough to get a recruiter phone call and continue the process. This is a very different goal from telling your entire professional story. Your goal should be to showcase to the company why you\\u2019re a good fit for the position they are recruiting for. This means highlighting parts of your resume that show you being a great match for a specific position. Tuning it to fit the opening might be as simple as changing the order of things or adding specific details that only this position might find interesting. When you have lots of experience, this might mean cutting less relevant parts short and leaving irrelevant things off. Use an easy-to-scan template Here\\u2019s how a typical hiring manager and recruiter will read your resume: 1. Quick scan. They\\u2019ll do a short scan of a few seconds, gathering all key information. Your location, years of experience, languages and technologies, position names, company names, and anything else that stands out. 2. Second read. Assuming this first scan matches what they\\u2019re looking for, they\\u2019ll re-read your resume, top to bottom, reading the content you wrote. However, if, in the quick scan, it didn\\u2019t seem that you have what the position needs, there will be no second read. You should choose a resume format that helps highlight the key information the recruiter or hiring manager looks for in that first scan. A good resume template follows these principles: Single column, allowing for easy top-to-bottom reading. Dates, position name, and company name are all separated. Dates are easy to scan, top-to-bottom. Your location and languages\\/technologies are easy to find. Why bother spending the time finding a good template? The less effort it is for a recruiter to get the key information in the quick scan, the more time they\\u2019ll have to look at other parts of your resume. Here\\u2019s a resume template you could use\\u2014I created this template for the book, and it satisfies all the above requirements. Of course, there are many others to choose from, and you can also design your own. Structure: relevant things first The recruiter or hiring manager will read your resume top to bottom. You\\u2019ll want the most relevant parts to be at the top and less relevant ones towards the bottom. When you have lots of experience, it\\u2019s fine to go beyond just one page: just make sure that everything relevant is still on the first page. When you\\u2019re a new grad or bootcamp grad, hiring managers usually care about experience in this order: Real-world experience, if you have any, including internships. Contribution to real-world projects: e.g., open-source projects. Details about your education. Projects that stand out for a reason or another. Things that go beyond \\u201cHello, world.\\u201d Tutoring and leadership positions in student groups. When you have work experience, the way a recruiter reads your resume changes. Here is what will be most relevant: Work experience: current company and title. Languages and technologies that you are proficient with. Education details: these become less relevant over time. With a few years\\u2019 experience, they can still be good indicators. After multiple jobs or decades, consider moving this lower down. Extracurricular things like patents, publications, talks, and standout open source contributions. Certifications. This one is interesting. Companies hiring for generalists don\\u2019t usually care, especially if it\\u2019s not an industry-wide recognized certification. Agencies and more \\u201ctraditional\\u201d companies could give it some weight, though. Personal projects. The more experience you have, the less important these become. Standout contributions, especially to popular projects, could be an exception. Still, they rarely weigh more than your work experience. Interests: these can be a starting point for the conversation on an onsite interview, and they make your resume more personal. With lots of work experience, you start to stand out from the crowd of applicants. At the same time, you\\u2019ll probably have more experience than would fit on a page or two. In this case, a one-page resume is no longer a must-have, but you\\u2019ll want to be more concise in your earlier experience: especially when that experience is not as relevant. Here\\u2019s the order you could consider structuring your resume: A summary section, briefly describing the standout part of your experience and what the company would get with you. Tailor this one for the job. With more experience, recruiters and hiring managers are far more likely to pay attention to this. Work experience: cut down on the older ones. Aim to tell a story of your career progression. You might even decide to drop old positions when they are not supporting your story. Education: a brief mention, at the end of your resume. You can safely remove all details\\u2014such as GPA, extracurricular activities\\u2014except for the fact of any degree you might have. It can feel painful to cut away some of your experience from your resume. But keep in mind your goal: it\\u2019s to have that recruiter call. I collaborated with a systems administrator turned developer who had 20 years of experience. Ten years ago, they went back to college to get a computer science degree. Their original resume had all 20 years of experience listed: non-CS degree, ten years working as a systems admin, CS degree, ten years as a developer. The first ten years did not add much professionally to their resume: they ended up removing this, but still keeping their first, non-CS degree there. The new resume was cleaner, and they saw more callbacks with it. While you don\\u2019t need to remove old positions, you should aim to reduce detail mentions significantly, except if they would add something very valuable for your current job application. Keep regional and cultural differences in mind as you craft your resume. For example, in most of the US, a one-page resume is the norm for developers with less than a few years\\u2019 experience. Even more senior people aim to fit everything important on the first page. In most of Europe, resumes of two pages are common, and some hiring managers actually prefer to read longer resumes for senior people. Whatever the length, make sure you communicate the relevant parts first. Use the space wisely, elaborating more on your experiences and results that relate to the position you are applying for. Languages and technologies: be crisp on what you know Positions hiring for generalist software engineers will want to see some evidence that you have worked with a few technologies. For these places, it\\u2019s a good sign if you\\u2019ve mastered multiple technologies. Positions hiring for specific technologies will want to confirm that you did meaningful work with those technologies. There are a few ways you could make it clear what languages and technologies you are proficient with: 1. Have a separate section for \\u201clanguages and technologies\\u201d on the first page of your resume. In this section, list out areas you are proficient with. Don\\u2019t bother specifying your expertise level: the hiring manager will assume you know these well enough if you listed them. An example of this approach can look like this: 2. Call out languages and technologies that you used as part of your work experience. An alternative to the previous approach is to mention the tools you used in each position. This gives more context on when you used these technologies or frameworks and what problems you solved using them. You could just list these out separately at the end of each position like this: However, I recommend \\u201cweaving in\\u201d the languages and technologies to the description itself. This both reads better, and you can give even more context: Standing out: results, impact, and numbers One thing I wish more resumes had is specifics. The majority of CVs I\\u2019ve read tend to list responsibilities, what work was assigned, or have a hand-wavy explanation of the work. Here\\u2019s an example of a resume snippet that recruiters and hiring managers see all too commonly: While the person writing these details probably felt they were showcasing the work they were doing\\u2014the hiring manager gets little to no context on the specifics of the work. To stand out, be specific. To be specific, follow this approach: Use numbers and quantify whatever you can. Numbers can be the number of users, service load numbers, number of customer support tickets you proactively resolved, and many others. Use active language that shows what you have done and how you have been proactive. For example, instead of stating \\u201cFixing various bugs that improve the user experience\\u201d, you could use active language and more specifics and write \\u201cReduced user reported defects by 50% after I identified and fixed root causes of the four most common user reports.\\u201d The first version reads more passive: \\u201cfixing\\u201d might be seen as \\u201cI was told to be fixing\\u201d. In the second version, you make it clear what it was that you did and the results you achieved. Mention specific languages and technologies where they make sense. This gives more context and makes your resume details more interesting as well. Tailor your resume to the position Having a \\u201cmaster\\u201d resume and tailoring it for every position you apply for is a great strategy. The tailoring doesn\\u2019t have to be drastic. However, if you are applying for a company where the job listing lists the stack as React and Node\\u2014and you have experience with these, among other languages\\u2014moving these up front could be a small change with a big impact. Similarly, if you\\u2019ve done work similar to what the position is asking for, having these bullet points listed first are all good ways to grab the attention of the person reading the resume earlier. One last thing I need to call out, as developers seeking jobs bring it up: the application tracking systems (ATS), and robots \\u201crejecting\\u201d your resume. This is false. Your resume will be read by a human. At tech companies, ATSes do not \\u201creject\\u201d resumes, and \\u201crobot rejection\\u201d does not exist in tech. Be wary of any resource that claims this is true: they are probably using the tactic to create fear, uncertainty, and doubt as an incentive for you to buy their service. I\\u2019m saying this both as a hiring manager who has worked with ATSes and as an author who interviewed recruiters at all major tech companies. I asked them about robot rejections; they all confirmed that they have not seen or heard of such a practice. Things that will help you beyond the resume Applying for a job does not end with having a good resume. A few things can greatly help your job search: referrals, cover letters, LinkedIn, GitHub, and Stack Overflow. Employee referrals are the best way to increase your chances of hearing back from a company. If you have a strong referral, much of the above becomes less relevant. How do you get a referral? You ask. Ask around in your network to see who is hiring. Ask on public forums where tech professionals gather like Twitter or LinkedIn\\u2014potentially even Blind. You can try and reach out for a cold referral: but if you do, add context on why you think you are a great fit for a job and offer an easy way out for the person to not refer you if they do not feel comfortable doing so. Cover letters are a coin toss. For larger companies, these places usually either don\\u2019t ask for one, or don\\u2019t pay much attention to it. At smaller firms and startups, where hiring managers are likely to read resumes and cover letters, it\\u2019s a better investment to spend time on this. Keep it short, sweet, and relevant. Don\\u2019t repeat your resume: add additional details that make your case stronger as to why you are a good fit for the position you are applying to. Even if you are not looking for a job today, invest in growing your professional network. The larger your network, the easier you can get referrals from people who know the professional \\u201cyou.\\u201d To grow your network, build genuine relationships with others, help people, and make yourself visible. You don\\u2019t have to do this on social media: you can start right now at your workplace, within and outside your team. LinkedIn, GitHub, and Stack Overflow are all sites where having an up-to-date profile will greatly help your job search. Keep your LinkedIn up to date: it\\u2019s a good idea to refresh it as you write your resume. For GitHub, consider creating a GitHub README to present yourself and your key projects more effectively. Make sure projects you mention in your resume or those that you pin to your GitHub profile also have READMEs that share what the project is about. On Stack Overflow, tailor your Developer Story to make it easy for recruiters and hiring managers to find you with relevant opportunities. For more advice, tips from recruiters in tech companies, and real-world \\u201cbefore\\u201d and \\u201cafter\\u201d resume examples that worked, you can always grab The Tech Resume Inside Out. The book is complimentary for devs currently out of a job. Good luck with writing your resume! The post How to write an effective developer resume: Advice from a hiring manager appeared first on Stack Overflow Blog.\",\"1830\":\"Learn how to build an Android app with Java that handles JSON data from a REST API service. The app uses the Volley library to create a weather app using API data. This course includes advice on building a RequestQueue, designing a Singleton, and using callbacks for async network communications. You will also learn to use the Volley library methods JsonArrayRequest and JsonArrayObject to parse a JSON file. \\u270f\\ufe0f Course developed by Shad Sluiter. Check out his YouTube channel: https:\\/\\/www.youtube.com\\/user\\/shadsluiter \\u2b50\\ufe0f Course Contents \\u2b50\\ufe0f \\u2328\\ufe0f (0:00:00) REST API explained: JSON vs XML \\u2328\\ufe0f (0:14:04) Introduction to the Android Weather App \\u2328\\ufe0f (0:17:32) Design the Layout \\u2328\\ufe0f (0:29:16) Button onClick Listeners \\u2328\\ufe0f (0:35:52) Request JSON Data with Volley \\u2328\\ufe0f (1:01:44) Singleton Request Queue in Volley \\u2328\\ufe0f (1:09:20) Callbacks for Async Requests \\u2328\\ufe0f (1:31:06) Fetch One JSONObject from an Array \\u2328\\ufe0f (1:45:56) JSONArrayRequest with Volley \\u2328\\ufe0f (1:59:14) Fetch JASONArray with Volley \\u2328\\ufe0f (2:08:16) Get Forecast by City Name \\u2b50\\ufe0f Special thanks to our Champion supporters! \\u2b50\\ufe0f \\ud83c\\udfc6 Loc Do \\ud83c\\udfc6 Joseph C \\ud83c\\udfc6 DeezMaster -- Learn to code for free and get a developer job: https:\\/\\/www.freecodecamp.org Read hundreds of articles on programming: https:\\/\\/freecodecamp.org\\/news And subscribe for new videos on technology every day: https:\\/\\/youtube.com\\/subscription_center?add_user=freecodecamp\",\"3321\":\"Stack Overflow Podcast - Episode #74 by The Stack Overflow Podcast\",\"1815\":\"I appeared for the Sap Labs interview in October 2020 through On-Campus Drive. After, the online test, there were 4 total rounds. Online Test: The\\u2026 Read More The post SAP Labs Interview Experience for SDE (On-Campus) appeared first on GeeksforGeeks.\",\"3292\":\"Paul and Sara walk us through the teetering tower of abstraction. Ben still hasn't mastered a single language, so it's a tough for him to know if it's better to start with the difficult fundamentals or stay in the simplified sandbox. Flatiron tries to teach developers how to code, but also how to communicate. Every student has to do some public writing or speaking about their education. We check out Human Readable Magazine and the painfully honest Reddit thread of early reviews. Rebekah tries to coach Ben through a mock interview for a junior web developer position. A torrent of word salad ensues. Paul and Sara show no mercy. New York City parking meters aren't the only systems being taken down by calendar bugs. We chat about the delightful Twitter thread on Y2038. You can follow Rebekah here and learn more about The Flatiron School here.\",\"3577\":\"The Stack Exchange network is a huge dynamic system with tens of thousands of interactions taking place each day. As the number of users grows and we improve our site engine, the social aspect of the network becomes more complicated: the number of user groups united by motivation on the site grows, and the groups themselves begin to interact with each other in new, complicated ways, forming feedback loops. As a result, it becomes difficult to determine the current state of our social system and what we should work on to make users succeed on the sites. Reducing complexity As in any system, the social part of the Stack Exchange network can be viewed from the standpoint of complexity and connectedness. Complexity indicates how difficult it is to understand and interpret the ongoing processes in the system. Connectedness indicates how the failure of one component affects the overall system. It is believed that the higher the complexity and connectedness of a system, the more difficult it is to keep the system working. It seems to me that while we have not yet reached the saturation point of connectedness, the social complexity on Stack Exchange is difficult to overestimate. Each day, we see very different people interacting with each other: New users at all levels of knowledge, background, and expertise from all over the world. Curators varying in activity level, domain knowledge, and preferred contribution. Long-time users with different motivations and their own visions of the future of the site. These and other user segments create unique contributions that combine to provide an incredibly diverse set of driving forces that might even look like chaos. With all this social complexity, the CM team must daily answer one simple question: Is the community healthy? And if not, what problem areas should we work on today to help our users be successful on our sites? Our first attempt: The meta health indicator To answer the question above in a systematic way, we created a prototype of a health indicator for meta communities. The indicator summarizes several metrics and has three states: It is green when the community is doing well. It is yellow when there are minor problems. It is red when the community needs special attention. All metrics used to build the indicator are relative, which allows us to use the indicator on all network sites regardless of their size. We think of the indicator as a set of heuristics and try to keep the metrics as simple as possible to make the interpretation easy. What does a healthy meta community mean? A meta community is \\u201chealthy\\u201d if: (1) It is actively used (2) for its intended purpose The growth of the number of active users leads to more social interactions on the main site that should result in more discussions on meta. (Metrics: compare the number of meta active users with the number of meta logged in users.) We need a meta site to enable users to set up the main site in their unique way, in other words, to discuss site settings, moderation policies and execute organizational work. (Metrics: compare the number of meta active users with the number of meta activities.) It facilitates diversity of opinion Discussion questions and answers should be asked and answered by a variety of users. (Metrics: the number of unique users who answer questions with the discussion tag to the number of those who ask the questions.) There should be multiple answers to a discussion question. (Metrics: compare the number of answers with questions with the discussion tag to the number of the questions.) A lot of users are active on the meta site If users want the main site to thrive, they will contribute to meta when they have time and the opportunity. As a community grows, the number of questions and answers on the meta site should increase as well. (Metrics: compare the number of meta logged users with the number of logged users on the main site.) The case studies Meta Stack Exchange. The meta community is healthy. The number of active users grows as well as the number of activities per active user. In discussion questions, there is a diverse set of opinions. Meta Mathematics. The meta community is healthy. Number of active users remains stable over time with a slight increase, the number of activities per user increases. Even though the number of discussions and people participating in them has declined slightly in the past two years, this year the trends have turned up. Meta Stack Overflow in Russian. The community needs some work. The current meta community seems to be stable. At the same time, most activities on meta are conducted by a group of users that slightly shrinks in size over time, i.e. people visit the meta site but do not act. We are observing that the number of folks who start discussions has reduced over time along with the number of things that are being discussed. Stay tuned! Even though this is a research project in progress, it shows us what in an amazing time we live in. The time when the combined effort of domain knowledge and data analysis makes it easy to understand how one, from the newest user answering their first question to the CEO of a company, can contribute to the community even more proactively. After all, everyone of us is here to make the internet a better place to find detailed answers to any question on our beloved topics. The post The Loop: A community health indicator appeared first on Stack Overflow Blog.\",\"3380\":\"Stack Overflow Podcast - Episode #32 by The Stack Overflow Podcast\",\"3299\":\"Stack Overflow Podcast - Episode #76 by The Stack Overflow Podcast\",\"1824\":\"Using Python microservices allows you to break up your apps into smaller parts that communicate with each other. This can make it simpler to scale the application based on the traffic. Also, the separation of concerns makes it easier to work on just one part of the app at a time. \\ud83d\\udcbb Code - Python Microservices: https:\\/\\/github.com\\/scalablescripts\\/python-microservices \\ud83d\\udcbb Code - React: https:\\/\\/github.com\\/scalablescripts\\/react-crud \\u270f\\ufe0f Course developed by Scalable Scripts. Check out their channel: https:\\/\\/www.youtube.com\\/watch?v=SzsPe_QX__c \\u2b50\\ufe0f Course Contents \\u2b50\\ufe0f \\u2328\\ufe0f (0:00:00) What are Microservices? \\u2328\\ufe0f (0:02:29) Project Introduction \\u2328\\ufe0f (0:05:29) Django Setup \\u2328\\ufe0f (0:06:31) Adding Docker Files \\u2328\\ufe0f (0:12:32) Connect Django with MySQL with Docker \\u2328\\ufe0f (0:19:12) Models & Serializers \\u2328\\ufe0f (0:23:11) Rest APIs with ViewSets \\u2328\\ufe0f (0:35:07) User Endpoint with APIView \\u2328\\ufe0f (0:37:53) Flask Setup with Docker \\u2328\\ufe0f (0:42:13) Connect Flask with Mysql \\u2328\\ufe0f (0:44:00) Models \\u2328\\ufe0f (0:47:41) Flask Migrations \\u2328\\ufe0f (0:51:44) RabbitMQ \\u2328\\ufe0f (0:52:15) Django Producer and Consumer \\u2328\\ufe0f (0:57:54) Flask Producer and Consumer \\u2328\\ufe0f (0:59:25) Queue Service \\u2328\\ufe0f (1:04:18) Data Consistency \\u2328\\ufe0f (1:14:36) Internal Http Requests \\u2328\\ufe0f (1:18:06) Finishing the python apps \\u2328\\ufe0f (1:25:51) React Setup \\u2328\\ufe0f (1:42:04) Products CRUD \\u2328\\ufe0f (2:08:44) Completing the Main App \\u2b50\\ufe0f Special thanks to our Champion supporters! \\u2b50\\ufe0f \\ud83c\\udfc6 Loc Do \\ud83c\\udfc6 Joseph C \\ud83c\\udfc6 DeezMaster -- Learn to code for free and get a developer job: https:\\/\\/www.freecodecamp.org Read hundreds of articles on programming: https:\\/\\/freecodecamp.org\\/news And subscribe for new videos on technology every day: https:\\/\\/youtube.com\\/subscription_center?add_user=freecodecamp\",\"3344\":\"Stack Overflow Podcast - Episode #86 by The Stack Overflow Podcast\",\"3579\":\"Like many of you out there, I have a long list of cool hobby project ideas that I never actually start because of, you know, more important things (day job, life, parties on the weekend, etc). Well, this changed recently for some reason, and by the end of this summer, my list finally got shorter by one. While I was working on this project, I made lots of notes for myself. Reading back over them, I\\u2019ve realized that the biggest roadblocks were not coding-related. They were more like mental roadblocks. Read on and I\\u2019ll share a few of my takeaways here. About the project Before everything else, let me put this into context. My idea was simple: creating an interactive game that helps people understand expected value. It\\u2019s a statistical concept, by the way, which I find super useful in everyday life, but I realized that many people don\\u2019t really get it. The concept of the game was simple: The user has a starting stack: 10,000 units of play money. In each round, she gets a deal. Something like \\u201cYou have an x% probability to win y amount of money.\\u201d She can decide how much of her play money she wants to risk. And the goal is to win as much as she can in 50 rounds. Something like this: So I wanted to create something like a mini-casino\\u2014only it teaches people how to identify a great vs. a not-so-great deal (and why it\\u2019s worth it to avoid casinos, after all). I\\u2019m not a web developer but I\\u2019m pretty comfortable with Python. So I decided to try and learn a popular and simple Python-based web framework called Flask for this project. What\\u2019s in it for me (or you)? The problem with hobby projects is that they don\\u2019t pay very well. At least, compared to real-life projects. But hobby projects have a lot of cool advantages that we tend to forget. For me particularly, this hobby project was great for multiple reasons: Finally, I got to learn Flask in practice. In a hobby project, no one tells me what I can or cannot do. I\\u2019m my own boss. I can add this project to my portfolio and to my CV (which helps it to stand out when I next apply to a job). And well, it\\u2019s a lot of fun! Plus one for me: I have a data science blog where I regularly publish data science tutorials. One of these articles was about expected value. You know statistics is considered boring by most people, so with this particular project, I made one of my tutorials a bit more interactive and exciting. Hopefully, I made it more sticky. The psychology of a hobby project\\u2026 What did I learn? But let\\u2019s talk about the psychology of a hobby project and the typical roadblocks I encountered. As I said, when I got stuck, the problem was never with coding or other technical issues. Of course, understanding every little detail of Flask was difficult sometimes\\u2014I was also hunting bugs for hours, sure. But the things that stopped me were mostly mindset related. So here are a few practical pieces of advice to get over these issues\\u2014for my future self and for you\\u2014if you want to get a hobby project done! Find something (that sounds) simple I had a pretty clear idea what I wanted as an end-result for my hobby project. And, of course, it changed and evolved over time. But I find it really important that I had a clear goal (or vision) in front of me. It was this. One of my ex-managers said that in any coding project, getting from step A to step B looks like this: So if your realistic estimate is X work hours for a task, then, it\\u2019ll turn out to actually be ~three times more. I can pretty much confirm this theory with my hobby project. At least, I definitely didn\\u2019t think I\\u2019d have to learn about nginx, as well, when I got started. But after a few hours of seeing this, I had to reconsider: The point is: the initial idea should be simple\\u2014because even that will turn out to be pretty complex. Don\\u2019t try to reinvent the wheel As I said, I used Flask for this project. And while it\\u2019s beautifully documented\\u2026 \\u2026 I didn\\u2019t want to learn it from the documentation. It\\u2019s like learning a foreign language from books. It\\u2019s fine but that\\u2019s not how you will learn to speak. Instead I wanted to use it. And the first step of that was to see how others were using it. For instance: My initial server setup followed this DigitalOcean Flask server tutorial. I watched how Corey Schafer built a web app in Flask. When I got stuck with a `session_id` question, for instance, I just went to Stack Overflow to find how others fixed the same issue. This was way easier than troubleshooting all by myself. I think that too many people want to work out for themselves what others have already figured out and shared. Instead of that, I recommend spending a few hours learning and building on what others have already created. You\\u2019ll get much further, much faster! Come up with a working prototype as quickly as you can While working on a project, motivation can go down. That\\u2019s normal. The first big boost for me was seeing my first prototype working! In fact, it happened pretty fast, after a few hours of coding in a Jupyter Notebook. The code was ugly. And I didn\\u2019t have an application, a website or a front-end, either. But it was working: I had a proof-of-concept. It was great, because when you do a project, there\\u2019s always that small uncertainty that your idea is stupid and it can\\u2019t be done at all. But when you have a working prototype, all that insecurity is gone and it becomes much easier to go on. Prepare for roadblocks. After seeing the prototype working on my local computer, I started turning it into a Flask application that works online from a browser. I thought, I\\u2019ll just have to copy-paste my code, tweak a few things in it, and I\\u2019ll be good to go. It should be the same Python code, right? Well, I have to say, even with years of experience under my belt, I was way too naive. Turning my Jupyter-compatible Python code into Flask-compatible Python code took dozens of hours. I ran into small bugs and errors, and as I said, I wasn\\u2019t very familiar with Flask, so I had to learn the logic of it and re-structure my code so that it fit that framework. It was a very frustrating phase in my hobby project. Luckily, I\\u2019d seen this frustration coming. I just didn\\u2019t know which part of my project it would show up in. I\\u2019ve done hobby projects before and I know that the most frustrating part will be the most rewarding, after it\\u2019s done. And it was true this time, as well. Most of these little roadblocks led me to things that make my work on other current data science projects more efficient, too. For example (incoming confession!), before this project, I was always too lazy to use proper exception handling (`try-except`) in my scripts. For many years, I was just fine without it (yeah, I know what you are thinking right now). But in this project, I was forced to learn it to solve a specific problem. And now I see how stupid I was not using it before in other places. So I have no better advice here but: prepare for roadblocks and work your way through them. It\\u2019ll be the most rewarding and most useful part in the end. Publish your working beta The second motivation boost in every hobby project is when you can show it to others. For me, this demo version was extremely ugly (I don\\u2019t even dare to show you the code behind this). But it didn\\u2019t matter. I posted this on my Twitter\\u2026 and people came and started to try it out. It was great for three things: motivation (people used what I built!) feedback (they sent me the bugs they encountered) accountability (from the moment I tweeted about this publicly, I really felt like that I\\u2019d have to finish this project\\u2026 otherwise, it would be embarrassing) I know, this sounds like an empty pep talk. But believe me, keeping yourself motivated and accountable is important. You shouldn\\u2019t worry about polishing everything to perfection. Don\\u2019t worry about the design or that your code is ugly and inefficient. Just show your working beta to others. And gather feedback and motivation. Never take a long break The biggest mistake that I made during this project was taking a long break. As mentioned, I worked on this during the summer. Looking back at my time tracking tool, I had two big batches: 13-21 July 2020 1-5 September 2020 Can you spot that 40-day long break between the two? Well, vacation(s) happened. Maybe a bit too much of it. Frankly, it was quite an accident that I eventually went back and finished the project. It was only because Twitter sent me a notification of someone liking my tweet about the working beta. Either way: never ever take a long break on a hobby project! Try to release the 1.0 version in one take\\u2014otherwise, you may never finish it at all. BONUS: Enjoy the process! And the most important of all: enjoy the whole process! Call me a nerd, [Ed. note: Nerd.] but for me this view (screens with code and wireframes) is an absolute pleasure: home office + hobby project One more thing here: Flow is a state of mind unlike anything else. And coding requires and supports getting into flow at the same time. Here\\u2019s a trick\\u2014a bit of a childish one\\u2014but I\\u2019ll share it anyway! My \\u201cfeel like a hacker\\u201d playlist: Note: my wife always says that my taste in music is below average. But you\\u2019ll be the judge of it now! This is a collaborative playlist, so share your favorite hacker tunes. Conclusion Hey, and eventually I finished the project! And these were my six plus one tips for starting and (maybe more importantly) finishing data science\\u2014or any kind of coding\\u2014hobby projects. I hope it helped. And one final piece of advice for the end: the word \\u201chobby\\u201d doesn\\u2019t mean that you won\\u2019t profit from your project. Keep in mind, though, that profit isn\\u2019t just money, so make sure that once your project is done, you publish it (not just the end product but the code, as well, to Github) and get people to see it. Post it to Linkedin, Twitter, add it to your CV, etc. Maybe it won\\u2019t be your next million-dollar startup (or who knows!), but it\\u2019s more than enough for your career right now if the right people (e.g. the right recruiters) get to see it! The post Tips to stay focused and finish your hobby project appeared first on Stack Overflow Blog.\",\"915\":\"Are you interested in building REST APIs with Flask and SQLAlchemy? This week we have Doug Farrell on the show. We talk about his four-part Real Python article series on Python REST APIs. We discuss the various Python tools and libraries used in the series. Doug also shares his practices for continuous learning. Doug has worked in process control, embedded systems, and has a long background in software development. He\\u2019s currently a developer at ShutterFly, and discusses developing tools for his internal customers. He also teaches Python to kids at a STEM school near where he lives. Doug is writing a book for Manning Publications, \\u201cThe Well-Grounded Python Developer\\u201d. The book is currently available in an early access state. And as always please check out all the additional resources and tools that Doug discusses, they are all gathered for you in the show notes. Topics: 00:00:00 \\u2013 Introduction 00:01:30 \\u2013 Doug\\u2019s programming background 00:06:16 \\u2013 Building a Polargraph 00:08:51 \\u2013 When did you get into Python? 00:10:43 \\u2013 Working at Shutterfly 00:13:45 \\u2013 How does Python help at Shutterfly? 00:16:21 \\u2013 Difficulties for a self-taught developer 00:18:58 \\u2013 How do you keep honing your skills? 00:20:32 \\u2013 Writing articles 00:22:04 \\u2013 Python REST APIs With Flask, Connexion, and SQLAlchemy Series 00:27:54 \\u2013 Picking tools for REST APIs 00:36:27 \\u2013 The Well-Ground Python Developer Book 00:39:27 \\u2013 What topic are you most interested in covering? 00:42:35 \\u2013 How has working with hardware helped you become a better programmer? 00:45:36 \\u2013 Something you thought you knew about Python, but were wrong about? 00:46:25 \\u2013 What\\u2019s a good tool to use for profiling? 00:47:34 \\u2013 Getting up to speed on data science 00:50:45 \\u2013 What are you excited about in the world of Python? 00:53:26 \\u2013 Contact info, thank you and sign off Show links: Python REST APIs With Flask, Connexion, and SQLAlchemy Python REST APIs With Flask, Connexion, and SQLAlchemy \\u2013 Part 2 Python REST APIs With Flask, Connexion, and SQLAlchemy \\u2013 Part 3 Python REST APIs With Flask, Connexion, and SQLAlchemy \\u2013 Part 4 API Integration in Python \\u2013 Part 1 Flask Tutorials - Real Python SQLAlchemy - The Python SQL Toolkit and Object Relational Mapper marshmallow: simplified object serialization Swagger - API Development for Everyone Connexion - Swagger\\/OpenAPI First framework for Python Serialization - Wikipedia article Working With JSON Data in Python - Real Python Article Ajax - Wikipedia article What\\u2019s a polargraph Polargraph (vertical plotter \\/ drawing machine) written in Go The Python Profilers - docs.python.org Python Timer Functions: Three Ways to Monitor Your Code - Real Python Doug\\u2019s personal website The Well-Grounded Python Developer - Early Access Book Doug\\u2019s Linked-In Profile Support the podcast & join our community of Pythonistas\",\"3332\":\"You can find some of Jack's art and other projects here. Ben breaks through and answers his first SO question\\u2014by copy\\/pasting from the comments, of course. Sara finds the relevant XKCD. Later, we check out Darling.hq, a MacOS translation layer for Linux If you are in the mood to learn programming with colors and shapes, check out the website that Jack built: Maria.cloud\",\"3554\":\"Gone in a Flash. Actually it took quite a while. Adobe explains its decision to stop supporting Flash here. You can learn more about Ruffle, the Flash emulator written in Rust, here. Here are some tips on writing a developer resume from a hiring manager who's written an entire book on the topic. You can read more about the Supreme Court case considering the limits of the Computer Fraud and Abuse Act here and here Our Lifeboat badge of the week goes to a user named simply 4386427, who answered the most basic and frustrating question: why does \\u201cprintf\\u201d not work?\",\"218\":\"It's not an India thing. I see that levied every time it happens to be someone from India. India is just easily the largest and fastest growing population of new devs\\/creators...etc. It's a human thing. nitter.net\\/imneonizer\\/status\\/1349024677453246464#m\",\"3526\":\"Stack Overflow Podcast - Episode #54 by The Stack Overflow Podcast\",\"526\":\"Billions of possibilities - Dr Alex Turner borrowed some cluster time to obtain all of the potential results from all the possible games of Countdown's Numbers Game. Thanks to David Domminney Fowler for creating our 'quiz show counting' music - more about Dave here: https:\\/\\/youtube.com\\/DavidDomminneyFowler https:\\/\\/www.facebook.com\\/computerphile https:\\/\\/twitter.com\\/computer_phile This video was filmed and edited by Sean Riley. Computer Science at the University of Nottingham: https:\\/\\/bit.ly\\/nottscomputer Computerphile is a sister project to Brady Haran's Numberphile. More at http:\\/\\/www.bradyharan.com\",\"3297\":\"Stack Exchange Podcast - Episode #51 - The Return of Coding Horror by The Stack Overflow Podcast\",\"3535\":\"Stack Overflow Podcast - Episode #56 by The Stack Overflow Podcast\",\"1239\":\"Using some basic computer vision techniques with #Python and #OpenCV to have a simple AI walk around in #cyberpunk2077. Keys file: https:\\/\\/github.com\\/Sentdex\\/pygta5\\/blob\\/master\\/keys.py Grabscreen file: https:\\/\\/github.com\\/Sentdex\\/pygta5\\/blob\\/master\\/grabscreen.py Channel membership: https:\\/\\/www.youtube.com\\/channel\\/UCfzlCWGWYyIQ0aLC5w48gBQ\\/join Discord: https:\\/\\/discord.gg\\/sentdex Support the content: https:\\/\\/pythonprogramming.net\\/support-donate\\/ Twitter: https:\\/\\/twitter.com\\/sentdex Instagram: https:\\/\\/instagram.com\\/sentdex Facebook: https:\\/\\/www.facebook.com\\/pythonprogramming.net\\/ Twitch: https:\\/\\/www.twitch.tv\\/sentdex\",\"1811\":\"Service now came to our college, (tier-2\\/NIT) for Data Analytics Profile- full-time role hiring. Round 1(75 Mins VAries on College): 15-MCQs \\u2013 DS, OS, OOPS,\\u2026 Read More The post Service Now Interview Experience for FTE | On-Campus 2021 appeared first on GeeksforGeeks.\",\"3411\":\"You can learn more about the Power of 10 here. TIOBE's latest index can be found here. Our lifeboat of the week goes to lealceldeiro for answering the question: What does the multi: true attribute of HTTP_INTERCEPTORS mean?\",\"3564\":\"Stack Overflow Podcast - Episode #81 by The Stack Overflow Podcast\",\"579\":\"This live session describes three simple services used in most distributed microservice architecture systems. We use Go for creating a reverse proxy and Java for service discovery and registering profiles. The services use heartbeats to stay registered. We use the MySQL database in service registry and profile. The applications are written using Spring Boot, with their jar files running in AWS. The Gateway service is written in Go. Every service registers it's IP and ports to the service registry. The EC2 instance running the gateway and profile services is different from the one hosting the service registry. We confirm that the services work using a GET and POST request using curl from the local machine. Code: https:\\/\\/github.com\\/coding-parrot\\/microservices-core System Design Video Course: https:\\/\\/get.interviewready.io\\/courses\\/system-design-interview-prep System Design book - https:\\/\\/amzn.to\\/2yQIrxH System Design Playlist: https:\\/\\/www.youtube.com\\/playlist?list=PLMCXHnjXnTnvo6alSjVkgxV-VH6EPyvoX You can follow me on: Quora: https:\\/\\/www.quora.com\\/profile\\/Gaurav-Sen-6 LinkedIn: https:\\/\\/www.linkedin.com\\/in\\/gaurav-sen-56b6a941\\/ Twitter: https:\\/\\/twitter.com\\/gkcs_ #Microservices #SoftwareDevelopment #Deployment\",\"4849\":\"Web development and Android development are the two most emerging career sectors for developers. Both of these sectors require different skills, have different markets, and\\u2026 Read More The post Web Developer or Android Developer \\u2013 Which One is Better Career Choice? appeared first on GeeksforGeeks.\",\"3544\":\"Stack Overflow Podcast - Episode #38 by The Stack Overflow Podcast\",\"3609\":\"Welcome to ISSUE #53 of the Overflow! This newsletter is by developers, for developers, written and curated by the Stack Overflow team and Cassidy Williams at Netlify. We\\u2019re on the cusp of holiday festivities, and we here at Stack Overflow hope you and yours are happy and safe this season. This week, we\\u2019ve got a first look at our community health indicators, the odds your Secret Santa will end in a perfect pairing, and the merits of older technologies. From the blog Hat season is on its way! Join us for Winter Bash 2020 stackoverflow.blog 2020 was not an easy year for anyone in the world. As we do with someone who has overstayed their welcome at a party, let\\u2019s signal that it\\u2019s time for 2020 to leave&#8230; by wearing hats! The Loop: A community health indicator stackoverflow.blog As the number of users grows and we improve our site engine, the social aspect of the network becomes more complicated. With all this social complexity, the CM team must daily answer one simple question: Is the community healthy? Podcast 295: Diving into headless automation, active monitoring, Playwright and Puppeteer stackoverflow.blog We chat with Checkly\\u2019s Tim Nolet about active monitoring and how he made peace with AWS after they turned his open source project into a new product. Build security skills with AWS Training and Certification. promotion Security is the foundation for everything you do in the cloud. With AWS Training and Certification, you can begin enhancing your skills, differentiating your abilities, and mastering best practices to innovate securely and confidently. Interesting questions How much did the first hard drives for PCs cost? retrocomputing.stackexchange.com A few megabytes used to cost megabucks. What is the probability that Secret Santa arrangement will result in perfect pairings? stats.stackexchange.com We\\u2019ve made a list, we\\u2019ve checked it twice, what are the chances, we got it just right? Why do exploration spacecraft like Voyager 1 and 2 go through the asteroid belt, and not over or below it? space.stackexchange.com It turns out that there\\u2019s a lot of space in space, so hitting asteroids is pretty unlikely. Is copying a lot of files bad for the CPU or computer in any way? superuser.com \\u201cA computer is a machine. This is one of the things that machine is designed to do.\\u201d Links from around the web Old is solid; new gets talked about css-tricks.com It\\u2019s often tempting to go for the latest flashy tool that everyone is talking about, but sometimes going to the \\u201cold\\u201d dependable tech that you know is just as good (if not better). Privacy matters even if \\u201cyou have nothing to hide\\u201d write.privacytools.io Privacy is a touchy subject throughout the world. It is good to be reminded sometimes why it is so important to protect yours. Generating social sharing images In Eleventy dev.to As you\\u2019re building out your personal site and figuring out your New Year\\u2019s Resolutions for your online presence, why not try generating social cards for the content you share? The rules of margin collapse www.joshwcomeau.com Sometimes in your CSS, adjacent margins can overlap. This is an awesome deep dive into everything you need to know about the phenomenon called \\u201cmargin collapse.\\u201d Spend less time in Slack. Try Stack Overflow for Teams. The post The Overflow #53: Winter Bash is here! appeared first on Stack Overflow Blog.\",\"3470\":\"Stack Overflow Podcast - Episode #87 by The Stack Overflow Podcast\",\"3586\":\"This week we chat with Tim Nolet, whose commentary appeared in a previous episode after he complained about Amazon forking his OS service and presenting it as new product without so much as a thanks. Since then the two parties have worked things out, and Tim came on the show to explain what happened, what he builds in the open source world, and the company he runs. Episode Notes You can find the original tweet here. AWS told Tim they will work with him on publicity and open source their version of the tool so that there can be a flow of value in both directions. You can learn more about Tim\\u2019s company, Checkly.hq, which works on active monitoring for developers. The team there also works on Headless Recorder, a Chrome extension that records your browser interactions and generates scripts for Playwright or Puppeteer. The team also operate The Headless Dev, which helps coders learn Playwright and Puppeteer. This week\\u2019s Lifeboat badge goes to Ravindra Bagale for answering the question: How to Convert Integer to Character Array using C The post Podcast 295: Diving into headless automation, active monitoring, Playwright and Puppeteer appeared first on Stack Overflow Blog.\",\"3560\":\"Stack Overflow Podcast - Episode #12 by The Stack Overflow Podcast\",\"1838\":\"So you built a web application in Python. Now how are you going to authorize users? Security goes beyond authentication. Who gets to do what, where, and when? This week on the show, we have Sam Scott, chief technology officer from Oso. Oso is an open-source policy engine for authorization that you embed in your application. [ Improve Your Python With \\ud83d\\udc0d Python Tricks \\ud83d\\udc8c \\u2013 Get a short & sweet Python Trick delivered to your inbox every couple of days.\",\"3610\":\"2020 was not an easy year for anyone in the world. As we do with someone who has overstayed their welcome at a party, let\\u2019s signal that it\\u2019s time for 2020 to leave\\u2026 by wearing hats! Over the last couple of months, we have sewed new, fashionable hats to warm you up this winter (or keep you in the shade, if you\\u2019re in the southern hemisphere). We\\u2019ve hidden some of the hats in the most unexpected places, so be creative and look in all directions if you want to get these secret treasures. And if you\\u2019re alert, you may stumble upon a way to run fast and jump for joy. How can you participate? Simply ask your best questions, post insightful answers, vote on others\\u2019 posts, and make other useful contributions to the community knowledge base on your most beloved topics. When you complete a challenge, the system will grant a hat that you can arrange on your avatar and wear all around the network. Hat season starts now (December 16, 2020 at midnight UTC) and ends on January 4, 2021 (at 11:59 UTC). Winter Bash 101 Be active on Stack Exchange sites to unlock fun hats and accessories you can wear on your avatar. Once you complete a challenge, a hat will appear on your profile. Click on the hat to go to your wardrobe. Select the hat that you want to wear, customize it to fit your avatar, and start showing it off around the sites. If you want to learn more about Winter Bash, please visit the FAQ page. Even though Winter Bash is our annual opportunity to relax and have some fun around the network, we know that not everyone likes parties. We are respectful of those who prefer to keep their Stack Overflow and Stack Exchange experience professional. As always, you can opt out of Winter Bash by choosing \\u201cNo hats for me, please\\u201d from the snowflake menu in the topbar. As for the rest, we wish you the best of luck in your hat adventure! The post Hat season is on its way! Join us for Winter Bash 2020 appeared first on Stack Overflow Blog.\",\"3333\":\"In this week's episode, our hosts give updates on what's happening with Stack Overflow Documentation and the new Stack Overflow Constitution. They also argue about what to do with a time machine.\",\"214\":\"This complaint from Facebook about @Apple's new iOS #privacy settings just makes me want to buy more @Apple products. nitter.net\\/AppleTerminal\\/status\\/1339156025757331457#m\",\"3479\":\"Stack Overflow Podcast - Episode #25 by The Stack Overflow Podcast\",\"3311\":\"Stack Exchange Podcast - Episode #24 w\\/ Eric Ries by The Stack Overflow Podcast\",\"1837\":\"Are you interested in learning more about Natural Language Processing? Have you heard of sentiment analysis? This week on the show, Kyle Stratis returns to talk about his new article titled, Use Sentiment Analysis With Python to Classify Movie Reviews. David Amos is also here, and all of us cover another batch of PyCoder\\u2019s Weekly articles and projects. [ Improve Your Python With \\ud83d\\udc0d Python Tricks \\ud83d\\udc8c \\u2013 Get a short & sweet Python Trick delivered to your inbox every couple of days.\",\"576\":\"You can check out the course here: https:\\/\\/get.interviewready.io\\/courses\\/system-design-interview-prep This is a set of 4 chapters, which dive into System Design in-depth. The videos also have supplementary content: 1) Capacity Planning 2) API contracts 3) Architecture Diagrams 4) Tests 5) FAQs 6) Subtitles 00:00 Course Target Audience 00:48 What's inside? 02:02 Pricing 02:22 Course Walkthrough 05:15 Future plans System Design Playlist: https:\\/\\/www.youtube.com\\/playlist?list=PLMCXHnjXnTnvo6alSjVkgxV-VH6EPyvoX You can follow me on: Facebook: https:\\/\\/facebook.com\\/gkcs0\\/ Quora: https:\\/\\/www.quora.com\\/profile\\/Gaurav-Sen-6 LinkedIn: https:\\/\\/www.linkedin.com\\/in\\/gaurav-sen-56b6a941\\/ Twitter: https:\\/\\/twitter.com\\/gkcs_\",\"951\":\"A weekly Python podcast hosted by Christopher Bailey with interviews, coding tips, and conversation with guests from the Python community. The show covers a wide range of topics including Python programming best practices, career tips, and related software development topics. Join us to hear what\\u2019s new in the world of Python programming and become a better coder. Support the podcast & join our community of Pythonistas\",\"217\":\"Neat invidious.snopyta.org\\/watch?v=ZC0gMhYh\\u2026\",\"3408\":\"Stack Exchange Podcast - Episode #28 w\\/ Brent Ozar by The Stack Overflow Podcast\",\"3399\":\"Stack Overflow Podcast - Episode #03 by The Stack Overflow Podcast\",\"944\":\"Do you want to distribute your Python applications to other users who don\\u2019t have or even use Python? Maybe you\\u2019re interested in seeing your Python application run on iOS or Android mobile devices. This week on the show we have Russell Keith-Magee, the founder and maintainer of the BeeWare project. Russell talks about Briefcase, a tool that converts a Python application into native installers on macOS, Windows, Linux, and mobile devices. We spend some time digging into BeeWare\\u2019s cross-platform widget toolkit named Toga. Russell talks about some of the intricacies of converting graphical user interface components from across multiple computing platforms. If you\\u2019re interested in contributing to an open source project, he discusses how you could get involved in the project. We also talk about the struggle of getting funding for open source projects. Course Spotlight: Python Decorators 101 In this course on Python decorators, you\\u2019ll learn what they are and how to create and use them. Decorators provide a simple syntax for calling higher-order functions in Python. By definition, a decorator is a function that takes another function and extends the behavior of the latter function without explicitly modifying it. Topics: 00:00:00 \\u2013 Introduction 00:01:36 \\u2013 History of the BeeWare project 00:05:20 \\u2013 Is having separate tools helpful? 00:07:06 \\u2013 Gaming frameworks in Briefcase 00:09:05 \\u2013 How is Briefcase different from similar tools? 00:14:36 \\u2013 Platform considerations 32bit vs 64bit 00:16:27 \\u2013 Coming Mac hardware platform changes 00:18:20 \\u2013 TOML: Background, use in Python projects, and Briefcase 00:26:29 \\u2013 How is the project going for different platforms? 00:32:09 \\u2013 Android hardware as a developer test device 00:36:14 \\u2013 Making Toga (GUI) cross platform 00:41:21 \\u2013 What type of interface widgets are available in Toga? 00:44:26 \\u2013 Video Course Spotlight 00:45:37 \\u2013 Distribution to the web as a platform 00:49:54 \\u2013 What is WASM (Web Assembly)? 00:53:26 \\u2013 Version numbering for BeeWare projects 00:56:23 \\u2013 What is your day-to-day involvement in the project? 00:58:32 \\u2013 How would someone get involved in the project? 01:05:15 \\u2013 Funding open-source projects 01:13:31 \\u2013 Including a smaller version of Python 01:17:08 \\u2013 What are you currently excited about? 01:22:17 \\u2013 What are you interested in learning next? 01:23:07 \\u2013 Thanks and Goodbye Show Links: BeeWare: Write once. Deploy everywhere. Briefcase: Convert a Python Project Into a Standalone Native Application Toga: A Python Native, OS Native GUI Toolkit BeeWare Documentation Snakes in a case: Packaging Python apps for distribution - Russell Keith-Magee PyCon 2020 Python Community Interview With Russell Keith-Magee: Real Python Ceci n\\u2019est pas un homepage: The personal blog of Russell Keith-Magee Ludum Dare: Online Event Where Games are Made From Scratch in a Weekend PursuedPyBear: Unbearably Fun Game Development Blink: PPB App, Packaged with Briefcase TOML: Tom\\u2019s Obvious, Minimal Language What the heck is pyproject.toml? PEP 518 \\u2013 Specifying Minimum Build System Requirements for Python Projects Elinor Ostrom\\u2019s 8 Principles for Managing A Commons - On the Commons Russell Keith-Magee Github Sponsors Page BeeWare Financial Membership PSF: Become a Supporting Member of the Python Software Foundation! Quake in the browser WebAssembly: Binary Instruction Format for a Stack-based Virtual Machine Emscripten: Toolchain for Compiling to asm.js and WebAssembly Announcing Pylance: Fast, feature-rich language support for Python in Visual Studio Code Support the podcast & join our community of Pythonistas\",\"3425\":\"We're back baby! After a 7 month hiatus, the Stack Exchange Podcast is back with new co-hosts: Joel Spolsky and Jay Hanlon. Our guest this week: David Fullerton\",\"3492\":\"Stack Overflow Podcast - Episode #44 by The Stack Overflow Podcast\",\"3268\":\"Stack Exchange Podcast - Episode #57 - We Just Saw This On Florp by The Stack Overflow Podcast\",\"916\":\"Docker is a common tool for Python developers creating and deploying applications, but what do you need to know if you want to use Docker for data science and machine learning? What are the best practices if you want to start using containers for your scientific projects? This week we have Tania Allard on the show. She is a Sr. Developer Advocate at Microsoft focusing on Machine Learning, scientific computing, research and open source. Tania has created a talk for the PyCon US 2020 which is now online. The talk is titled \\u201cDocker and Python: Making them Play Nicely and Securely for Data Science and ML.\\u201d Her talk draws on her expertise in the improvement of processes, reproducibility and transparency in research and data science. We discuss a variety of tools for making your containers more secure and results reproducible. Tania is passionate about mentoring, open-source, and its community. She is an organizer for Mentored Sprints for Diverse Beginners, and she talks about the upcoming online sprints for PyCon US 2020. We also discuss her plans to start a podcast. Topics: 00:00:00 \\u2013 Introduction 00:01:43 \\u2013 Microsoft Senior Developer Advocate Role 00:04:07 \\u2013 PyCon 2020 Talk - Docker and Python: making them play nicely 00:05:34 \\u2013 What is Docker? 00:10:08 \\u2013 Reproducibility of project results 00:12:03 \\u2013 What are the challenges of using Docker for machine learning? 00:15:06 \\u2013 Getting started suggestions 00:16:26 \\u2013 What metadata should be included? 00:17:48 \\u2013 Creating images through stages 00:21:16 \\u2013 What about your data? 00:22:40 \\u2013 Kubernetes: Orchestrating containers 00:24:37 \\u2013 Continuing stages into testing 00:25:37 \\u2013 What are tools for testing security? 00:27:07 \\u2013 Challenges in using containers for ML 00:28:52 \\u2013 What types of databases? 00:29:39 \\u2013 Are you doing initial research on a local machine? 00:30:59 \\u2013 An example of a recent ML project 00:32:16 \\u2013 Papermill: parameterizing and executing notebooks 00:33:16 \\u2013 NLP: Natural Language Processing 00:33:58 \\u2013 Kaggle: Help us better understand COVID-19 00:34:42 \\u2013 What are other best practices for data intensive projects? 00:39:13 \\u2013 Resources to get started in machine learning? 00:40:30 \\u2013 Mentored Sprints for Diverse Beginners 00:45:34 \\u2013 Tania\\u2019s upcoming podcast 00:48:38 \\u2013 A visiting fellow at the Alan Turing Institute 00:49:08 \\u2013 Weight lifting 00:50:16 \\u2013 Craft beer 00:52:09 \\u2013 What is something you thought you knew in Python but were wrong about? 00:53:50 \\u2013 What are excited about in the world of Python? 00:54:42 \\u2013 Thank you and Goodbye Show links: Tania Allard: Personal site Docker and Python: making them play nicely and securely for Data Science and ML - Tania Allard Slides for Docker and Python Talk Docker XKCD: Python Superfund Site Best practices for writing Dockerfiles Run Python Versions in Docker: How to Try the Latest Python Release Kubernetes: Production-Grade Container Orchestration Snyk: Securing open source and containers papermill: A tool for parameterizing and executing Jupyter Notebooks Natural Language Processing: Wikipedia article Natural Language Processing With spaCy in Python: Real Python article Kaggle: Help us better understand COVID-19 datree.io: Scale Engineering organization repo2docker: Build, Run, and Push Docker Images from Source Code Repositories Jupyter Docker Stacks: A set of ready-to-run Docker images binder: Turn a Git Repo into a Collection of Interactive Notebooks Hands-On Machine Learning with Scikit-Learn and TensorFlow: O\\u2019Reilly Data Science from Scratch: O\\u2019Reilly Python for Data Analysis: Wes McKinney - Creator of Pandas Mentored Sprints for Diverse Beginners The Alan Turing Institute Easy Data Processing With Azure Fun - Tania Allard - PyCon 2020 PEP 581 \\u2013 Using GitHub Issues for CPython Python\\u2019s migration to GitHub - Request for Project Manager Resumes Support the podcast & join our community of Pythonistas\",\"3317\":\"Alex graduated from NYU with a degree in computer science and worked as a developer and engineer at several startups in New York City, eventually assuming senior roles like engineering team lead and director of technology. Along the way, however, she found herself face with discrimination and harassment. In 2016, she dramatically altered her appearance, an experience she discusses in a humorous and poignant talk - Shaving My Head Made me a Better Developer. In 2016 she read the book The New Jim Crow by Michelle Alexander and was inspired to do more to help people impacted by the justice system. She began organizing donations of unused laptops, and then moved on to help found the Code Cooperative in October of 2016. the group describes itself as a community of people who learn, use, and build technology to create life changing possibilities for individuals and communities impacted by incarceration. If you want to get involved, you can donate a laptop or make a financial contribution here. If you would like to volunteer as a mentor, you can apply here.\",\"1860\":\"In the past, creating analytical web applications was a task for seasoned developers that required knowledge of multiple programming languages and frameworks. That\\u2019s no longer the case. Nowadays, you can make data visualization interfaces using pure Python. One popular tool for this is Dash. Dash gives data scientists the ability to showcase their results in interactive web applications. You don\\u2019t need to be an expert in web development. In an afternoon, you can build and deploy a Dash app to share with others. In this tutorial, you\\u2019ll learn how to: Create a Dash application Use Dash core components and HTML components Customize the style of your Dash application Use callbacks to build interactive applications Deploy your application on Heroku You can download the source code, data, and resources for the sample application you\\u2019ll make in this tutorial by clicking the link below: Get the Source Code: Click here to get the source code you\\u2019ll use to learn about creating data visualization interfaces in Python with Dash in this tutorial. What Is Dash? Dash is an open source framework for building data visualization interfaces. Released in 2017 as a Python library, it\\u2019s grown to include implementations for R and Julia. Dash helps data scientists build analytical web applications without requiring advanced web development knowledge. Three technologies constitute the core of Dash: Flask supplies the web server functionality. React.js renders the user interface of the web page. Plotly.js generates the charts used in your application. But you don\\u2019t have to worry about making all these technologies work together. Dash will do that for you. You just need to write Python, R, or Julia and sprinkle it with a bit of CSS. Plotly, a Canada-based company, built Dash and supports its development. You may know the company from the popular graphing libraries that share its name. Plotly (the company) open-sourced Dash and released it under an MIT license, so you can use Dash at no cost. Plotly also offers a commercial companion to Dash called Dash Enterprise. This paid service provides companies with support services such as hosting, deploying, and handling authentication on Dash applications. But these features live outside of Dash\\u2019s open source ecosystem. Dash will help you build dashboards quickly. If you\\u2019re used to analyzing data or building data visualizations using Python, then Dash will be a useful addition to your toolbox. Here are a few examples of what you can make with Dash: A dashboard to analyze trading positions in real-time A visualization of millions of Uber rides An interactive financial report This is just a tiny sample. If you\\u2019d like to see other interesting use cases, then go check the Dash App Gallery. Note: You don\\u2019t need advanced knowledge of web development to follow this tutorial, but some familiarity with HTML and CSS won\\u2019t hurt. The rest of this tutorial assumes you know the basics of the following topics: Python graphing libraries such as Plotly, Bokeh, or Matplotlib HTML and the structure of an HTML file CSS and style sheets If you feel comfortable with the requirements and want to learn how to use Dash in your next project, then continue to the following section! Get Started With Dash in Python In this tutorial, you\\u2019ll go through the end-to-end process of building a dashboard using Dash. If you follow along with the examples, then you\\u2019ll go from a bare-bones dashboard on your local machine to a styled dashboard deployed on Heroku. To build the dashboard, you\\u2019ll use a dataset of sales and prices of avocados in the United States between 2015 and 2018. This dataset was compiled by Justin Kiggins using data from the Hass Avocado Board. How to Set Up Your Local Environment To develop your app, you\\u2019ll need a new directory to store your code and data and a clean Python 3 virtual environment. To create those, follow the instructions below, choosing the version that matches your operating system. If you\\u2019re using Windows, then open a command prompt and execute these commands: c:\\\\\\/spanspan class=\\\"k\\\"\\/spanspan class=\\\"p\\\"\\/spanspan class=\\\"k\\\"\\/spanspan class=\\\"gp\\\"\",\"3270\":\"Today's episode is a real scream. Recorded in a haunted house, this week's host is longtime podcast friend Anil Dash, joined by Fog Creek's Jenn Schiffer, Stack Overflow engineering manager Matt Sherman, news editor Ilana Yitzhaki, and executive producer Kaitlin Pike. Special guest is Leon Young of Cogniss.\",\"3541\":\"Stack Overflow Podcast - Episode #43 by The Stack Overflow Podcast\",\"3467\":\"In this episode, Host Jon Skeet takes the reins along with Jay, Jess, Ilana, and special guests Casey Ashenhurst (SO Inclusion Manager & Senior People Ops Partner) and Cassie Montrose (SO Executive Assistant) to chat about hitting a million rep on Stack Overflow; Jon's thoughts on feminism and inclusion and how those have evolved over the years; and a rant about a regrettable Applebee's experience in Times Square. You should'a known better, Jon...\",\"3507\":\"Oracle is in the midst of trying to negotiate and get approved a deal that would allow it to acquire Tik Tok's US Operations, and allow Tik Tok to avoid a ban on its service in the United States. For US citizens, software being banned over geopolitical concerns is a new reality. What will happen to the code if the deal goes through? Is there a clean room where software updates are inspected before rolling out? Is data segregated to local servers, and if so, will it be siloed from the rest of Tik Tok's global user base? Tik Tok users have thoughts on what is really happening with their private data. In the second half of the episode we talk about Nvidia's purchase of Arm from Softbank. Paul and Sara speculate about what this means for our personal computers and mobile devices, as well as its implications for GPU programming, which has found new homes in burgeoning fields like machine learning and crypto mining. If you're a reader looking to spend some quality time with other book worms, check out this Kickstarter from our friend Jeffrey Zie. No lifeboats this week, but be sure to check out this amazing question on the math behind spider webs.\",\"1842\":\"Have you wondered how Python manages memory? How are your variables stored in memory, and when do they get deleted? This week on the show, David Amos is here, and he has brought another batch of PyCoder's Weekly articles and projects. Along with the Real Python article on Python memory management, we also talk about another article about creating even and non-even spaced arrays in Python with np.linspace. [ Improve Your Python With \\ud83d\\udc0d Python Tricks \\ud83d\\udc8c \\u2013 Get a short & sweet Python Trick delivered to your inbox every couple of days.\",\"3606\":\"It\\u2019s Christmas Day, so we left a podcast under the tree for you. We finished up our conversation with Li Ouyang, a software engineer at Coinbase, about what its like to code for the world of crypto. We also give a shoutout to our annual Winter Bash, where you can win some great digital swag by answering questions on Stack Overflow, and tease a very special guest coming up for episode 300. Episode Notes With Bitcoin hitting all time highs, there has been a lot of speculation about what will happen next in the market crypto market. Meanwhile, regulators are targeting Ripple with a lawsuit and arguing that crypto isn\\u2019t really a currency after all. You have until Jan, 4, 2021 to participate in our annual Winter Bash. By answering questions on Stack Overflow and across Stack Exchange, you can unlock some unique digital flair for your avatar. Don\\u2019t forget to tune in the first day of the new year for episode 300 of the podcast, we booked a very special guest. Check out this episode to learn more. TRANSCRIPT The post Podcast 298: A Very Crypto Christmas appeared first on Stack Overflow Blog.\",\"3290\":\"Stack Overflow Podcast - Episode #80 by The Stack Overflow Podcast\",\"3338\":\"You can read our story on Rachel and the work she is doing with the React community here. Nabors' is the author of Animation at Work, which you can find on A Book Apart. If you want to get a feel for an animated web project Rachel worked on, check out DevToolsChallenger, an interactive site she helped create for Mozilla. Nabors has digitized a lot of her work, signal boosting members of the React community at Reactjs.org\\/stories.\",\"604\":\"Book a mock interview or coaching session with an Amazon engineer as early as tomorrow on interviewing.io! Sign up here: https:\\/\\/interviewing.io\\/signup?utm_source=youtube.com&utm_medium=referral&utm_campaign=video_link Check out the feedback by the Amazon interviewer and the full transcript on https:\\/\\/interviewing.io\\/recordings\\/System-Design-Amazon-8\\/ Disclaimer: All interviews are shared with explicit permission from the interviewer and the interviewee, and all interviews are anonymous. interviewing.io has the sole right to distribute this content.\",\"3600\":\"NoSQL climbed up the charts as the next big thing in system architecture in 2011, but overall interest in it has plateaued recently. You\\u2019ve may have heard of it and ignored it, safe in the knowledge that you can always have a an SQL command line at your fingertips. But what is NoSQL, what does it have to do with modern development, and is it worth implementing in your project? Let\\u2019s find out. Sysadmins managing big projects know a few things about traditional SQL databases. First, they are notoriously hard to scale, making it difficult to spread data across services or geographic regions. A small mistake in a single file can tank an entire database. And while SQL statements are fun, it\\u2019s easy to drop all tables while futzing with a key or corrupting an entire repository with a malformed query. The goal of a NoSQL database, on the other hand, is to ensure ultimate scalability by making sure that the data is stored in a format that can be shared\\u2014or sharded\\u2014across multiple servers. NoSQL databases scale far more linearly than relational databases, i.e. ones that depend on various keys shared across tables. NoSQL databases come in a lot of flavors: Indexed document stores like MongoDB Graph databases like Neo4j Column stores like Cassandra Time-series databases, which index data by time stamps, like InfluxDB. Hybrid forms that use multiple of the previous paradigms Some of them even store in a table format. The commonality between all of them, though, is that no matter what format they store data in, these databases don\\u2019t support relations between data. NoSQL is no joke Understanding NoSQL databases takes a minute of comprehension. Traditional SQL uses related tables connected by IDs. A single domain entity might be fragmented or normalized across multiple tables, which means the overhead necessary to ensure a record is accurate can be immense. Instead of, say, a table for user IDs and then a table for addresses, NoSQL lets you create a generalized user object that holds everything important about those users. The benefit of this is that you can easily replicate the database across multiple devices, ensuring the ability to scale and replicate. Further, a NoSQL database allows for fast access to lots of data. An SQL, or relational database, is excellent for data processing\\u2014creating granular connections between pieces of data. A NoSQL database is great for finding one piece of data quickly and operating on it. There\\u2019s little to no searching; it just gives you the user data. How it works Many types of NoSQL databases are designed for fast data lookups. Instead of writing a complex query, many use a single value\\u2014a key, a timestamp, a document\\u2014and pull data stored under that value. That is, if you expect to want to know the details for a user account, then all the user data can be retrieved by reading that user\\u2019s record. The relationships between different records are unimportant and data can change\\u2014one record can hold multiple addresses while another can hold none. Because companies like Google and Amazon created these databases for their own massive data stores, the goal was to reduce the time needed to grab a piece of data. In fact, NoSQL forgoes the traditional database expectations of atomicity, consistency, isolation, and durability\\u2014ACID\\u2014for a far looser interpretation of data storage. Using a NoSQL database doesn\\u2019t mean you can\\u2019t use SQL; SQL is just the query language. In fact, NoSQL and SQL can be complementary. Some NoSQL databases use SQL to search the data. Those that don\\u2019t can be either analyzed using a SQL query engine like Presto or sent through a data pipeline to more analyzable data warehouses. To be fair, a good data pipeline requires sophisticated ETL processing to get the end data into a usable state. Because an SQL database uses a schema or structure, this means changes are difficult. Say you\\u2019re running a production database full of a million records. Adding a single field is a nightmare and could trash the entire database. Further, connecting those million records through joins is hugely expensive. This means you can very easily search for a particular piece of data and connect it with another piece when you\\u2019re looking for a few records and a few tables. Multiply that out, however, and you\\u2019ve got a headache. NoSQL databases like MongoDB just take data and store it. Want to add a field? Add it to the next record stored. Want to ignore a field? Just don\\u2019t read it. You can add multiple addresses to a user record, for example, or none. You can add a last name or avoid adding a last name. And because you can shard the data, you can send some data to a server in an untrusted jurisdiction and other data in a trusted jurisdiction. The database considers each chunk as part of the whole. Querying data is a little harder. Apache\\u2019s Cassandra uses Cassandra Query Language or CQL which, interestingly, does not allow for joins. MongoDB just sends JSON objects in reaction to requests. Need all users in Ohio? MongoDB sends a big chunk of data. Want to delete all users in Spain? MongoDB will run the search and perform the action. Further, there is no need to ping every server to get a piece of data. The closest server will share nothing with other servers and instead return what it has. At some point all the data replicates but each server works in a vacuum. This means that changes to records on one server won\\u2019t affect a query made on another server. Benefits of NoSQL NoSQL databases\\u2014MongoDB being the most popular\\u2014are great for scaling. Because the databases use sharding to partition data on multiple machines, you can ensure that the right data is in the right place at the right time. Further, an outage on one machine won\\u2019t take down the entire network. As data grows, the database can simply expand to another device as needed and shrink if things slow down. You can also, say, store geo-specific data in geo-specific servers, ensuring that calls from a certain country are faster on data relating specifically to that country. Next, NoSQL databases offer high availability. Because the data is simply a single file, you can copy backups from other servers on the network. If a server fails, another server can take over that server\\u2019s shard and incorporate it. The data is constantly replicated and safe. The problems NoSQL databases don\\u2019t offer much in the way of transaction management or real coding. They are great for storing data that doesn\\u2019t change much or changes minutely with every transaction. NoSQL systems have been daunting for new users to approach. While hosted solutions are available, running your own simple instance isn\\u2019t as easy as, say, spinning up a MySQL server. Finally, because the entire database can have a lot of duplicated data, the actual database is quite large. There are a number of types of NoSQL databases, with the document-based solution being the most prevalent. However, you can also use key-value databases like Redis as well as tabular ones like Hbase and Acculuo. A key-based solution like Redis is a bit more familiar to admins and Redis in particular is performant because it stores much of its data in memory. Tabular databases like Hbase offer a slightly different system that focuses on, according to the documentation, \\u201cvery large tables\\u2014billions of rows X millions of columns\\u2014atop clusters of commodity hardware.\\u201d If NoSQL provides so much freedom and flexibility, why not abandon SQL entirely? The simple answer: Many applications still call for the kinds of constraints, consistency, and safeguards that SQL databases provide. In those cases, some \\u201cadvantages\\u201d of NoSQL may turn to disadvantages. Traditional relational databases have long caught up with the novelty that some NoSQL databases promised. They\\u2019ve massively improved their sharding functionality, so you\\u2019re no longer limited to scaling vertically. They introduced more lenient data types; you can store JSON in PostgreSQL, MySQL, SQL Server now, giving you a MongoDB-like experience. There are a number of problems with NoSQL databases, the first one being a dearth of sysadmins who can maintain them. Implementing a NoSQL database is a real endeavor and picking the right provider and manager is tough. If you\\u2019re in the position to need a massive database you might be in the financial position to pay for that expertise but smaller companies may have to wait. Further, understanding the NoSQL model is difficult for developers used to coding for SQL systems. Because much of the structure must happen in the application, a developer could go into a dev project expecting certain constraints to be met or errors to throw on duplicate rows. Instead, this logic must be managed in the application itself. NoSQL solutions offer faster and more performant data storage but that\\u2019s about it. You, the developer, have to step in to manage the various relationships. Finally, because NoSQL is not consistent, roll-backs are impossible if something goes wrong. Further, some parts of the database may return inconsistent information\\u2014one example experts offer is that an SQL database will return the right bank balance all the time while a NoSQL solution might return a different balance based on the server. If that sounds scary you might want to rethink your choice. This happens in real life when you search for orders on ecommerce sites like Amazon. In some cases the data takes a few seconds to appear because it must be populated throughout the network. Believe the hype? First, we have to remember that NoSQL databases are probably great for Amazon and Google but not so great for your side hustle. The performance benefits become more obvious the greater the scale of your database. Implementing them sounds like fun and it\\u2019s a great way to become conversant in a brand new technology, but you could probably do that by reading a few FAQs and trying out a MongoDB install for yourself. Using a NoSQL solution for a small ecommerce site or recommendation engine might not work out so well. A consensus has emerged in conferences and blogs that SQL is the gold standard\\u2014with a lot of emphasis on PostgeSQL\\u2014and you should use it by default, only deviating if you have good reasons to use NoSQL. That said, big companies that need the kind of speed that NoSQL offers use these databases, and NoSQL skills are in demand. You can grab a nice salary if you can support someone else\\u2019s NoSQL database. By the time you\\u2019re ready to implement a NoSQL solution of your own\\u2014in a side project or over a massive data store\\u2014you\\u2019ll be fully versed in the pros and cons and, to paraphrase Kenny Rogers, you\\u2019ll know when to shard \\u2018em, know when to JOIN them, know when to use a schema, and know when to use none. The post Have the tables turned on NoSQL? appeared first on Stack Overflow Blog.\",\"208\":\"Are these other 3 malware or what of the @brave browser? I see them when searching for \\\"Brave browser\\\" on ddg, google, and bing. Looks sketchy.\",\"1245\":\"Neural Networks from Scratch book: https:\\/\\/nnfs.io NNFSiX Github: https:\\/\\/github.com\\/Sentdex\\/NNfSiX Playlist for this series: https:\\/\\/www.youtube.com\\/playlist?list=PLQVvvaa0QuDcjD5BAw2DxE6OF2tius3V3 Neural Networks IN Scratch (the programming language): https:\\/\\/youtu.be\\/eJ1HdTZAcn4 Python 3 basics: https:\\/\\/pythonprogramming.net\\/introduction-learn-python-3-tutorials\\/ Intermediate Python (w\\/ OOP): https:\\/\\/pythonprogramming.net\\/introduction-intermediate-python-tutorial\\/ Mug link for fellow mug aficionados: https:\\/\\/amzn.to\\/2KFwsWn Channel membership: https:\\/\\/www.youtube.com\\/channel\\/UCfzlCWGWYyIQ0aLC5w48gBQ\\/join Discord: https:\\/\\/discord.gg\\/sentdex Support the content: https:\\/\\/pythonprogramming.net\\/support-donate\\/ Twitter: https:\\/\\/twitter.com\\/sentdex Instagram: https:\\/\\/instagram.com\\/sentdex Facebook: https:\\/\\/www.facebook.com\\/pythonprogramming.net\\/ Twitch: https:\\/\\/www.twitch.tv\\/sentdex #nnfs #python #neuralnetworks\",\"3277\":\"This week we welcome Joel back from leave, talk a LOT about the correct pronunciation of \\\"hummus\\\", and chat with special guest Sarah Drasner about the awesomeness that is SVG Animation. Also, NEW LOGO! I guess you can say we're official...\",\"5290\":\"In order to do backpropagation and optimization, we need to have some measure of how wrong the model is. For this, we use a loss function. In our case, with a softmax classifier, we'll be using categorical cross-entropy. Neural Networks from Scratch book: https:\\/\\/nnfs.io Playlist for this series: https:\\/\\/www.youtube.com\\/playlist?list=PLQVvvaa0QuDcjD5BAw2DxE6OF2tius3V3 Channel membership: https:\\/\\/www.youtube.com\\/channel\\/UCfzlCWGWYyIQ0aLC5w48gBQ\\/join Discord: https:\\/\\/discord.gg\\/sentdex Support the content: https:\\/\\/pythonprogramming.net\\/support-donate\\/ Twitter: https:\\/\\/twitter.com\\/sentdex Instagram: https:\\/\\/instagram.com\\/sentdex Facebook: https:\\/\\/www.facebook.com\\/pythonprogramming.net\\/ Twitch: https:\\/\\/www.twitch.tv\\/sentdex #nnfs #python #neuralnetworks\",\"1852\":\"As a developer, you may sometimes need to send complex object hierarchies over a network or save the internal state of your objects to a disk or database for later use. To accomplish this, you can use a process called serialization, which is fully supported by the standard library thanks to the Python pickle module. In this course, you\\u2019ll learn: What it means to serialize and deserialize an object Which modules you can use to serialize objects in Python Which kinds of objects can be serialized with the Python pickle module How to use the Python pickle module to serialize object hierarchies What the risks are when deserializing an object from an untrusted source [ Improve Your Python With \\ud83d\\udc0d Python Tricks \\ud83d\\udc8c \\u2013 Get a short & sweet Python Trick delivered to your inbox every couple of days.\",\"3413\":\"Stack Exchange Podcast - Episode #47 - Do You Even Twitter Bro? by The Stack Overflow Podcast\",\"3405\":\"You can find a more in depth discussion of these topics on our blog. Prashanth shares his ideas about the importance of community and what it means to be a product led company.\",\"3374\":\"Ben is now the full time IT department for his two sons, one of whom is in kindergarten and one in first grade. The children have transitioned from public school to Zoom, Google Classroom, Konstella, FaceTime, and five million other services. Paul's neighbors in his apartment building are digging old laptops out of storage and leaving them in front of his door. They bleach them first, so that they are 100% disinfected. Then Paul slaps on a little Ubuntu\\/Lubuntu and those old machines are suddenly zippy netbooks that help adults and kids work and study from home. Sara reveals she has an amazing \\\"resting interested face\\\" - a skill that makes her the most popular person at any live talk in front of an audience. That box of old cables finally came in handy! We shout out our lifeboat badge winners, as we near the major milestone of 1000 lifeboats. Keep them coming.\",\"3335\":\"On today's episode, we learn about travel-hacking and building a fully remote company with the co-founders of FlightFox, as well as chat with former Stack Overflow mods turned current Stack Overflow developers to learn about moderator processes at SO.\",\"929\":\"Have you wanted to generate advanced reports as PDFs using Python? Maybe you want to build documents with tables, images, or fillable forms. This week on the show we have Mike Driscoll to talk about his book \\u201cReportLab - PDF Processing with Python.\\u201d Mike is an author of multiple books about Python, and has recently re-written his Python 101 book. He is also a member of the Real Python team and has written several articles for the site. Along with our discussion about ReportLab and PDFs, Mike talks about being a self-published author. We also talk briefly about his favorite Python GUI framework. Course Spotlight: How to Work With a PDF in Python In this step-by-step course, you\\u2019ll learn how to work with a PDF in Python. You\\u2019ll see how to extract metadata from preexisting PDFs. You\\u2019ll also learn how to merge, split, watermark, and rotate pages in PDFs using Python and PyPDF2. Topics: 00:00:00 \\u2013 Introduction 00:01:23 \\u2013 Python 101 book revisions\\/rewrite 00:04:48 \\u2013 Python 201 book 00:05:47 \\u2013 What Python GUI framework do you prefer? 00:12:46 \\u2013 MouseVsPython YouTube channel 00:14:34 \\u2013 Why write a ReportLab book? 00:16:11 \\u2013 Kickstarter and self-publishing books 00:21:38 \\u2013 Reader feedback about the book 00:22:35 \\u2013 What other PDF tools are covered in the book? 00:23:48 \\u2013 Differences with ReportLab Plus 00:25:00 \\u2013 Flowables and PLATYPUS 00:28:56 \\u2013 Video Course Spotlight 00:29:49 \\u2013 What types of projects have you used ReportLab for? 00:35:50 \\u2013 Creating PDF forms with ReportLab 00:40:21 \\u2013 LaTeX comparison with ReportLab 00:41:40 \\u2013 PDFMiner text extraction 00:43:17 \\u2013 PyFPDF Library for PDF document creation 00:45:28 \\u2013 Camelot: PDF Table Extraction for Humans 00:47:17 \\u2013 Working with passwords and encryption - PyPDF2 00:47:56 \\u2013 What are you excited about in the world of Python? 00:48:47 \\u2013 Learning OpenCV 00:49:38 \\u2013 What do you want to learn next in Python? 00:50:20 \\u2013 Suggestions for Python libraries to read 00:52:11 \\u2013 Thanks and Goodbye Show links: MouseVsPython Blog Python 101: 2nd Edition \\u2013 Leanpub Python 201: Intermediate Python \\u2013 Leanpub How to Build a Python GUI Application With wxPython \\u2013 Real Python article wxPython Recipes: A Problem - Solution Approach \\u2013 Apress wxPython: The GUI Toolkit for Python PySimpleGUI: The Simple Way to Create a GUI With Python \\u2013 Real Python article PySimpleGUI: Python GUI For Humans Mouse Vs Python: YouTube channel ReportLab - PDF Processing with Python \\u2013 Leanpub ReportLab: Developer pages - Open Source LaTeX \\u2013 Document preparation system PDFMiner: Text extraction tool for PDF documents PyFPDF: Library for PDF document generation under Python Camelot: PDF Table Extraction for Humans PyPDF2: Pure-Python library built as a PDF toolkit How to Work With a PDF in Python \\u2013 Real Python article PyViz: List of libraries for visualizing data in Python Adrian Rosebrock: author page \\u2013 pyimagesearch.com OpenCV Tutorials, Resources, and Guides - pyimagesearch.com Image Segmentation Using Color Spaces in OpenCV + Python \\u2013 Real Python article Pillow: The friendly PIL (Python Imaging Library) fork Three Ways of Storing and Accessing Lots of Images in Python \\u2013 Real Python article Support the podcast & join our community of Pythonistas\",\"598\":\"Book a mock interview or coaching session with an Amazon engineer as early as tomorrow on interviewing.io! Sign up here: https:\\/\\/interviewing.io\\/signup?utm_source=youtube.com&utm_medium=referral&utm_campaign=video_link Check out the feedback by the Amazon interviewer and the full transcript on https:\\/\\/interviewing.io\\/recordings\\/JavaScript-Amazon-6\\/ Disclaimer: All interviews are shared with explicit permission from the interviewer and the interviewee, and all interviews are anonymous. interviewing.io has the sole right to distribute this content.\",\"1250\":\"Me toying around with the scored outputs of 20-something models, trying to figure out how to find the best answers. Neural Networks from Scratch: https:\\/\\/nnfs.io Chat response samples: https:\\/\\/github.com\\/Sentdex\\/chatbotrnd\\/blob\\/master\\/chat_question_examples.py Channel membership: https:\\/\\/www.youtube.com\\/channel\\/UCfzlCWGWYyIQ0aLC5w48gBQ\\/join Discord: https:\\/\\/discord.gg\\/sentdex Support the content: https:\\/\\/pythonprogramming.net\\/support-donate\\/ Twitter: https:\\/\\/twitter.com\\/sentdex Instagram: https:\\/\\/instagram.com\\/sentdex Facebook: https:\\/\\/www.facebook.com\\/pythonprogramming.net\\/ Twitch: https:\\/\\/www.twitch.tv\\/sentdex\",\"3444\":\"You can find some more of Holly's work and bio here. She gave a great talk at KubeCon 2020, How to Love K8s and Not Wreck the Planet, which you can watch on YouTube here. And here's a lovely presentation, Containers Will Not Fix Your Broken DevOps Cultures, drawing on her long history of programming and consulting.\",\"574\":\"This is an announcement for the hack-athon organised by Ispirit. The last date of registration is the 24th of October. It's the second hackathon based on DEPA! Hackathon Links: http:\\/\\/healthathon.devfolio.co\\/ https:\\/\\/pn.ispirt.in\\/healthathon-2020\\/ You can follow me on: LinkedIn: https:\\/\\/www.linkedin.com\\/in\\/gaurav-sen-56b6a941\\/ Instagram: https:\\/\\/www.instagram.com\\/applepie404\\/ Twitter: https:\\/\\/twitter.com\\/gkcs_ Quora: https:\\/\\/www.quora.com\\/profile\\/Gaurav-Sen-6 See you at there! #Hackathon #DEPA #Healthathon\",\"949\":\"Do you want to learn more about Python decorators? Have you ever wondered what goes on behind the scenes to create a Real Python article? In this first episode, We have Geir Arne Hjelle from the Real Python team on the show. You\\u2019ll learn about Geir Arne\\u2019s background as a Pythonista and PyCon speaker, the tutorials he\\u2019s written for the site, how Python decorators can help you write better code, and what Real Python\\u2019s tutorial publishing process looks like behind the scenes. Note: This episode was recorded earlier. We discuss PyCon US 2020 and Geir Arne\\u2019s planned tutorial. At the time this episode was released PyCon US 2020 was currently looking at re-scheduling or a potential cancelation. Updates will be provided in upcoming episodes. Topics: 00:00:00 \\u2013 Introduction 00:01:39 \\u2013 Geir Arne Python Background 00:04:16 \\u2013 Real Python Background 00:05:55 \\u2013 Real Python Editing Process 00:09:00 \\u2013 Christopher\\u2019s Real Python Background 00:10:45 \\u2013 Working on Decorators 00:13:00 \\u2013 Decorators in the wild 00:16:30 \\u2013 Pycon 2019 Talk - Plugins 00:19:32 \\u2013 Pyplugs 00:20:09 \\u2013 Links to talk materials 00:20:29 \\u2013 Pycon 2020 Tutorial - Decorators 00:22:59 \\u2013 Euro SciPy 00:23:47 \\u2013 Real Python Meetup Pycon 2019 00:25:05 \\u2013 More on the Decorators Article 00:26:18 \\u2013 Slack Decorators Q&A 00:27:29 \\u2013 More on Euro SciPy 00:28:12 \\u2013 Current Position at Amesto NextBridge 00:32:09 \\u2013 Decorators Examples 00:39:47 \\u2013 What are You Excited About in Python 00:47:04 \\u2013 PyCon 2020 Tutorial on Decorators additional 00:49:45 \\u2013 Conclusion Links from the show: Real Python Article: Primer on Python Decorators Real Python Course: Python Decorators 101 Real Python Article: Python Timer Functions: Three Ways to Monitor Your Code Join the Real Python Team: Apply to become a Tutorial Author Codetiming: PyPI Package PyPlugs: PyPI Package PyConfs: PyPI Package Geir Arne\\u2019s PyCon 2019 Talk on Plugins + Video IPython: Alternative REPL bpython: Alternative REPL PyCon 2020 Geir Arne\\u2019s Decorators Tutorial at PyCon 2020 EuroSciPy 2020 Support the podcast & join our community of Pythonistas\",\"3546\":\"Part 1 The crew chats about how Paul and Sara made the transition from individual contributors to managers overseeing teams of engineers. Sara used to see this transition as a form of selling out, but has a new perspective after having made the shift. Paul admits he still doesn\\u2019t feel like a \\u201cCEO\\u201d and how he approaches his role as the co-founder who focuses on creating signal instead of operations. OF course, we argue about Bitcoin, and finally we examine the role luck plays in life, especially for The Rock. Interview - Kent C Dodds Kent admits that when he first tried programming, he just couldn\\u2019t understand strings, and decided the career path wasn\\u2019t for him. He ended up on a track that would have made him an accountant or business intelligence analyst. From that perch, however, he began to find ways to automate and improve his workflows. Not only did this help him stand out at work, it reawakened his interest in coding, which is now his full time career. Part 2 Sara talks about the difference between writing code for software applications, and writing firmware, which she got into while helping to launch and run Jewelbots. Paul and Sara recall what it was like working in tech during the 90s, when they had to constantly worry about how to conserve RAM. We also talk about the days before Git, when folks passed a hard drive around from hand to hand. The kids today have no idea how good they have it.\",\"3312\":\"Stack Overflow Podcast - Episode #28 by The Stack Overflow Podcast\",\"213\":\"\\ud83d\\ude0d nitter.net\\/SeanG1911\\/status\\/1336678600016322560#m\",\"3276\":\"SHOW NOTESPart 1 (0:00-9:58) the crew discusses Google's declaration of Quantum Supremacy and tries to wrap their mind around qubits and superpositions. Ben mangles the pronunciation of ASP.net, Sara finds a name for her new pet snake, and Paul wonders how JFK would have pronounced quantum. Also, updates on the Stack Overflow helicopter. From our Physics and Quantum Computing Stack Exchanges: Is Quantum Computing just pie in the sky? Why is Google Quantum Supremacy experiment impressive? What does Google's claim of Quantum Supremacy mean? Interview (9:59-26:05) Clive Thompson. When it comes to bugs, Thompson says the best book on the subject is The Bug by Ellen Ulman. Got a different recommendation? Let us know in the comments below. You can check out Clive's band, the Dolorean Sisters, here. He is currently writing software to help optimize the group's set lists. Clive, you own me a blog post on this. Part 2 (26:52-fin) We chat about the wonderful Ian Allen and his introduction to programming. Paul declares CSS is a plate of scrambled eggs. Sara hips us to a wonderful talk - Cascading S**t Show. As you might have guessed from the title, the language in the video is NSFW. Later, Sara declares that CSS Grid is, in fact, just tables, mostly to troll her good friend Brenda Storer. Paul protests, but then remembers an old tweet.\",\"3454\":\"Software is eating the world, but what's on the menu for dessert? This week we chat about the best way for engineers to give feedback to executives. Paul explains the Purple room method they use at Postlight. Sara references Zero to One and why engineers and marketers have so much trouble communicating. As a member of a marketing department , it's true our job is to see the glass as half full. But sometimes the point of the exercise is to be aspirational. Police learn how to be suspicious, marketers learn how to sell, and engineers look for what's broken so they can fix it. We chat about the ten thousand or so parking meters that went on the fritz in New York City. The company says it was the result of a fraud prevention protocol. Was this a Y2K style glitch or a logic bomb? Sara finds the developer angle on the recent rift in the British Royal Family. New technologies always reshape the Monarchy's relationship to the public. From the first radio address to the televised coronation, to a Wordpress website and an Instagram post, each generation tries to use the modern medium to their advantage. We discuss a fairly devious bit of brilliant parenting. If your young child wants to be a YouTube star, and you can build them their own private version of the platform, with randomly generated likes and none of the cyber-bullying, are you protecting them? Or, perhaps, crafting a Truman Show for the internet age that will have consequences down the road. Last but not least, we check out the Blazor tag, one of the fastest growing areas of interest on Stack Overflow. It's a framework that extends the established Razor syntax. The goal is to enable developers to write client-side code in .NET, backed by WebAssembly.\",\"3562\":\"Stack Overflow Podcast - Episode #01 by The Stack Overflow Podcast\",\"3529\":\"On this week's episode, we talk about the what the data team has been up to lately as well as learning a thing or two about rockets. Guest host - Anil Dash!\",\"3302\":\"Paul spent the weekend building a parser, cause who doesn't? He needed a Regex, found one on Stack Overflow, looked over the characters, and realized this is not the way to get folks interested or excited about code. \\\"You come across a problem and you think to yourself, I know I'll use a regular expression. Now you have two problems.\\\" This sets Sara off on a tangent about CSS. What's wrong with CSS in her opinion. Well, all of it. She shares a few thoughts on how it could have been built right. Ben dives into the endless annoyances Bluetooth has been bringing to his life recently. When you have four people in a family sharing six mobile devices and five sets of headphones, audio signals are constantly getting piped to the wrong ears. Now his car wants to connect. When Bluetooth tells you it's forgetting a device, how come it never keeps it promise? Our lifeboat badge of the week goes to Zero Piraeus for answering the question: Why must dictionary keys be immutable? He provided his answer in the form an elegant short essay, and it's definitely worth checking out.\",\"3323\":\"For many years Matt worked on defending the quality of Google's web search results, and you may know him as the creator of the first version of SafeSearch.As Paul noted on the show, he was seen as one of the few people with whom ordinary folks could communicate about the often inscrutable world of Google search results and rankings. You can read his blog here. In 2016 Matt joined USDS, initially at the Department of Defense. Since 2017, Matt has served as the USDS Administrator and is responsible for setting the overall direction and strategy for projects. He has worked on everything from Healthcare.gov to online services for veterans to fraud prevention at the IRS. Topics discussed on this episode: The 1993 comedy film Dave, in which Kevin Kline plays a presidential body double who manages to fix government and melt the steely heart of Sigourney Weaver. Open source as an ever growing trend, even inside of big government. Which organization has more meeting and process, Google, or the US federal government?\",\"3593\":\"A Morality Tale Once upon a time there was a large and terrifying pirate ship, and it ruled the high seas despite being a bit leaky. The crew often had to pump seawater out of the lower decks after a storm or a fight. One day, after a particularly vicious battle, they realized that cannonballs had breached the hull below the water line. They weren\\u2019t sure how to fix it without tools or carpenters. So they just hooked the pumps up to run constantly, day and night. For a while this kept pace, but soon they had to buy twice as many pumps, and bring on more sailors to staff the pumps while others sailed. Before long, they had more sailors running pumps than actually sailing the ship or looting and pillaging. This wasn\\u2019t what they signed up for, which made everyone pretty cranky. Before long they became experts in everything that had to do with pumping water out of ships, but their other skills of sailing, looting and pillaging suffered, and their best people left in frustration. Before the year was over their ship had sunk. The moral of the story is, don\\u2019t treat the symptoms: treat the cause. Speaking of which, let\\u2019s talk about CI\\/CD. CI\\/CD (continuous integration and Continuous Delivery\\/Deployment) is part of the fabric of our lives. We go to conferences about CI\\/CD, we write articles and blog about CI\\/CD, we list CI\\/CD on our LinkedIn page. Nobody even debates about whether it\\u2019s the right thing to do or not. We are all on the same page. Right? Except \\u2026 if you listen closely to what people are saying, they aren\\u2019t talking about CI\\/CD at all\\u2014they may say \\u201cCI\\/CD,\\u201d but they are only talking about continuous integration. Nobody is talking about (or practicing) continuous deployment. AT ALL. It\\u2019s like we have all forgotten it exists. Don\\u2019t get me wrong, it is wonderful that we have gotten better at CI over the past decade. But it\\u2019s not enough. It\\u2019s not even half the battle. The point of continuous integration was never to feel smug about the syntactic and logically integrated correctness of our software, although that\\u2019s a nice bonus. The point of CI is to clear the path and set the stage for continuous delivery, because CD is what will actually save your ass. Just like on that pirate ship, you need to treat the causes instead of chasing after symptoms. And what is the primary source of those leaks and holes in our (arr!) production pirate ship? It is everything that happens between the moment you write the code and the moment that code is live: your too-long, leaky, distended, bloated, lumped-up, misfiring software digestive system. Err\\u2026what is CI\\/CD, really? Great question. Glad you asked. CI\\/CD is a process and a methodology designed to make sure that all the code you merge to main is deployable at any time by testing it and deploying it. Automatically. After every diff. The goal of CI\\/CD is to reduce the lead time of software changes to an interval short enough that our human learning systems (adrenaline, dopamine, etc.) can map to the feedback loops of writing and shipping code. If any engineer on your team can merge a set of changes to main, secure in the knowledge that 15 minutes later their changes will have been tested and deployed to production, with no human gates or manual intervention required, then congratulations! You\\u2019re doing CI\\/CD. Very few teams are actually practicing CI\\/CD, but nearly all should be. This is basic software hygiene. The software development death spiral The time elapsed between writing and shipping is the room temp petri dish where pathological symptoms breed and snowball. Longer lead times lead to larger code diffs and slower code reviews. This means anyone reviewing or revising these nightmare diffs has to pause and swap the full context in and out of their mind any time they switch gears, from writing code to reviewing and back again. Thus the elastic feedback loop of the development cycle begins to stretch out longer and longer, as people spend more and more time waiting on each other\\u2014to review, to comment, to deploy, to make requested changes\\u2014and more and more time paging state in and out of their brains and trying to remember where they were and what they were trying to do. But it gets worse. Most deploys are run by hand, at some indeterminate interval after the code was written, not by the person who wrote the code, and\\u2014worst of all\\u2014with many developers\\u2019 changes batched up at once. It is this, above all else, that severs the engineer from the effects of their work, and makes it impossible for them to practice responsible ownership over the full lifecycle of their code. Batching up changes means you cannot practice observability-driven development; you can\\u2019t expect engineers to watch their code go out and ensure it is working in production. You don\\u2019t know when your code is going out and you don\\u2019t know who is responsible for a change in production behavior; therefore, you have no accountability or autonomy and cannot practice software ownership over your own code. Ultimately, your engineers will spend a higher percentage of their time waiting, fumbling, or dealing with tech debt, not moving the business forward. Since so many of your existing engineers are tied up, you will need to hire many more of them, which carries higher coordination costs. Soon, you will need specialized roles such as SRE, ops, QA, build engineers, etc. to help you heroically battle each of the symptoms in isolation. Then you will need more managers and TPMs, and so on. Guess what! Now you\\u2019re a big, expensive company, and you lumber like a dinosaur. It gets slower, so it gets harder and more complicated, so you need more resources to manage the complexity and battle the side effects, which creates even more complexity and surface area. This is the death spiral of software development. But there is another way. You can fix the problem at the source, by focusing relentlessly on the length of time between when a line of code is written and when it is fully deployed to production. Fixate on that interval, automate that interval, track that interval, dedicate real engineering resources to shrinking it over time. Until that interval is short enough to be a functional feedback loop, all you will be doing is managing the symptoms of dysfunction. The longer the delay, the more of these symptoms will appear, and the more time your teams will spend running around bailing leaks. How short? 15 minutes is great, under an hour is probably fine. Predictability matters as much as length, which is why human gates are a disqualifier. But if your current interval is something like 15 days, take heart\\u2014any work you put into shortening this interval will pay off. Any improvement pays dividends. This is where lots of people look dubious. \\u201cI\\u2019m not sure my team can handle that\\u201d, they may say. \\u201cThis is all very well and good for Facebook or Google, but we aren\\u2019t them.\\u201d The way you are doing it now is the hard way This may surprise you, but continuous deployment is far and away the easiest way to write, ship, and run code in production. This is the counterintuitive truth about software: making lots of little changes swiftly is infinitely easier than making a few bulky changes slowly. Think of it this way. Which of these bugs would be easier for you to find, understand, repro, and fix: a bug in the code you know you wrote earlier today or a bug in the code someone on your team probably wrote last year? It\\u2019s not even close! You will never, ever again debug or understand this code as well as you do right now, with your original intent fresh in your brain, your understanding of the problem and its solution space rich and fresh. As you write your code, you should be instrumenting it with an eye to your future self half an hour from now: \\u201cHow will you be able to tell if your code is doing what you wanted it to or not?\\u201d You write the code, you merge to main, wait a few minutes, and pull up your observability tool to view production through the lens of your instrumentation. Ask yourself, \\u201cis it doing what it\\u2019s supposed to do?\\u201d and \\u201cdoes anything else look \\u2026 weird?\\u201d Teams that get this rhythm down usually find em\\/emem\\/emem\\/emh2 id=\\\"h-the-1-challenge-for-technical-leadership-in-2021\\\"\\/h2em\\/emem\\/ema rel=\\\"nofollow\\\" href=\\\"https:\\/\\/stackoverflow.blog\\/2021\\/01\\/19\\/fulfilling-the-promise-of-ci-cd\\/\\\"\\/aa rel=\\\"nofollow\\\" href=\\\"https:\\/\\/stackoverflow.blog\\\"\\/a\",\"3274\":\"Stack Overflow Podcast - Episode #71 by The Stack Overflow Podcast\",\"568\":\"This live session will talk about a strategy to solve low level design questions. This question was asked in a #Google software engineering interview. We need to implement an interface: a LogClient. This client has three methods: start, end and poll. The start and end method are event listeners. They are notified of a process start and end. The poll method waits on the first task in queue to complete, and then prints it. We will be updating the code in part 2: https:\\/\\/youtu.be\\/bPkXQszkkpY Code: https:\\/\\/github.com\\/coding-parrot\\/projects\\/blob\\/master\\/java-projects\\/src\\/main\\/java\\/logger\\/LogClient.java System Design Video Course: https:\\/\\/get.interviewready.io\\/courses\\/system-design-interview-prep System Design book - https:\\/\\/amzn.to\\/2yQIrxH System Design Playlist: https:\\/\\/www.youtube.com\\/playlist?list=PLMCXHnjXnTnvo6alSjVkgxV-VH6EPyvoX You can follow me on: Quora: https:\\/\\/www.quora.com\\/profile\\/Gaurav-Sen-6 LinkedIn: https:\\/\\/www.linkedin.com\\/in\\/gaurav-sen-56b6a941\\/ Twitter: https:\\/\\/twitter.com\\/gkcs_ #LowLevelDesign #LLD\",\"1238\":\"Expanding from a single neuron with 3 inputs to a layer of neurons with 4 inputs. Neural Networks from Scratch book: https:\\/\\/nnfs.io Playlist for this series: https:\\/\\/www.youtube.com\\/playlist?list=PLQVvvaa0QuDcjD5BAw2DxE6OF2tius3V3 Python 3 basics: https:\\/\\/pythonprogramming.net\\/introduction-learn-python-3-tutorials\\/ Intermediate Python (w\\/ OOP): https:\\/\\/pythonprogramming.net\\/introduction-intermediate-python-tutorial\\/ Mug link for fellow mug aficionados: https:\\/\\/amzn.to\\/2Vz9Hs0 Channel membership: https:\\/\\/www.youtube.com\\/channel\\/UCfzlCWGWYyIQ0aLC5w48gBQ\\/join Discord: https:\\/\\/discord.gg\\/sentdex Support the content: https:\\/\\/pythonprogramming.net\\/support-donate\\/ Twitter: https:\\/\\/twitter.com\\/sentdex Instagram: https:\\/\\/instagram.com\\/sentdex Facebook: https:\\/\\/www.facebook.com\\/pythonprogramming.net\\/ Twitch: https:\\/\\/www.twitch.tv\\/sentdex #nnfs #python #neuralnetworks\",\"3313\":\"What happens when the grizzled captain decides they need to stop delegating and put their hands back on the helm? Sara is rewatching Star Trek and trying to find some wisdom in Picard's approach to crisis. Where did React come from? What's the line between a library, a framework, and a whole new language? You can learn lots more in this extensive video from the Women in React conference that happened remotely last weekend. One thing we didn't know about that conference was that they gave out original swag you can use while playing Animal Crossing. And just yesterday we noticed the Deserted Island DevOps conference, where the entire event is actually happening inside Animal Crossing. From there we got to talking about Second Life, Linden Bucks, and the amazing concert that Travis Scott put on in Fortnite recently. The longer this quarantine goes on, the closer we move to a truly virtual work world. You can find the Fortnite concert here. It's just ten minutes long, but skip ahead to 2:10 if you want to see something really cool. Last but not least, Paul didn't take the easy way out. He finalyl sat down and did some parsing. He is ready for you to make fun of him.\",\"3287\":\"Stack Overflow Podcast - Episode #69 by The Stack Overflow Podcast\",\"3303\":\"Stack Exchange Podcast - Episode #60 - Are We That Predictable? by The Stack Overflow Podcast\",\"3316\":\"It's just your hosts this episode - Paul, Sara, and Ben. We chat about the end of the influential open-source events that O'reillly held for many years, conferences that in many ways helped to form the personality of the early web. Engineers love to solve problems and create new tools. So what do you do when the best solution is to stay home? We have a few ideas about how to deal with the moment. If we all go into cryosleep, will the bots keep trading the market, and for how long? Sara recommends a novel - Machines Like Me.\",\"3325\":\"Stack Overflow Podcast - Episode #41 by The Stack Overflow Podcast\",\"923\":\"Are you familiar with linear programming, and how it can be used to solve resource optimization problems? Would you like to free your Python code from a clunky command line and start making convenient graphical interfaces for your users? This week on the show, David Amos is back with another batch of PyCoder\\u2019s Weekly articles and projects. David talks about a recent Real Python article about linear programming in Python. We discuss an article titled \\u201cPySimpleGUI: The Simple Way to Create a GUI With Python.\\u201d We also cover several other articles and projects from the Python community including: Python\\u2019s reduce() function, flaws in the pickle module, advanced pytest techniques, and how to trick a neural network. Course Spotlight: Parallel Iteration With Python\\u2019s zip() Function This course will get you up to speed with Python\\u2019s zip() function. In this course, you\\u2019ll discover the logic behind zip() and how you can use it to consistently solve common programming problems, like creating dictionaries. Topics: 00:00:00 \\u2013 Introduction 00:01:34 \\u2013 Python\\u2019s reduce(): From Functional to Pythonic Style 00:07:46 \\u2013 Hands-On Linear Programming: Optimization With Python 00:15:07 \\u2013 Pickle\\u2019s Nine Flaws 00:22:31 \\u2013 Video Course Spotlight 00:23:33 \\u2013 Advanced pytest Techniques I Learned While Contributing to pandas 00:33:41 \\u2013 PySimpleGUI: The Simple Way to Create a GUI With Python 00:38:20 \\u2013 How to Trick a Neural Network in Python 3 00:43:31 \\u2013 TextAttack: A Python Framework for Adversarial Attacks, Data Augmentation, and Model Training in NLP 00:46:09 \\u2013 byob: BYOB (Build Your Own Botnet) 00:49:09 \\u2013 Thanks and Goodbye Show Links: Python\\u2019s reduce(): From Functional to Pythonic Style \\u2013 In this step-by-step tutorial, you\\u2019ll learn how Python\\u2019s reduce() works and how to use it effectively in your programs. You\\u2019ll also learn some more modern, efficient, and Pythonic ways to gently replace reduce() in your programs. Hands-On Linear Programming: Optimization With Python \\u2013 In this tutorial, you\\u2019ll learn about implementing optimization in Python with linear programming libraries. Linear programming is one of the fundamental mathematical optimization techniques. You\\u2019ll use SciPy and PuLP to solve linear programming problems. Pickle\\u2019s Nine Flaws \\u2013 \\u201cPython\\u2019s pickle module is a very convenient way to serialize and de-serialize objects. It needs no schema, and can handle arbitrary Python objects. But it has problems. This post briefly explains the problems.\\u201d Advanced pytest Techniques I Learned While Contributing to pandas \\u2013 Contributing to open-source projects is a great way to learn new techniques and level up your skills. Martin Winkel shares five advanced pytest techniques he learned while contributing to the pandas project. PySimpleGUI: The Simple Way to Create a GUI With Python \\u2013 In this step-by-step tutorial, you\\u2019ll learn how to create a cross-platform graphical user interface (GUI) using Python and PySimpleGUI. A graphical user interface is an application that has buttons, windows, and lots of other elements that the user can use to interact with your application. How to Trick a Neural Network in Python 3 \\u2013 Is that a corgi or a goldfish? Projects: TextAttack: A Python Framework for Adversarial Attacks, Data Augmentation, and Model Training in NLP byob: Build Your Own Botnet Additional Links: PyCoder\\u2019s Weekly Functional Programming in Python Linear Programming: Wikipedia article The Python pickle Module: How to Persist Objects in Python Marshmallow Python REST APIs With Flask, Connexion, and SQLAlchemy \\u2013 Part 2 Effective Python Testing With Pytest Getting Started With Testing in Python Practical Text Classification With Python and Keras PySimpleGUI Support the podcast & join our community of Pythonistas\",\"3367\":\"Stack Exchange Podcast - Episode #42 - The Exception That Proves The Rule by The Stack Overflow Podcast\",\"3420\":\"This week on the pod, we chat about Cloudflare.tv, a 24\\/7 streaming channel dedicated to discussions of software, startups, and technology. We also dig into a new offering called Github Classroom. Do pedagogy and programming mix well? Can this approach to collaborative work be useful beyond the computer science classroom? So, you want to delete half your database? Well, I can guarantee this method will delete about half your database...most of the time. Thanks, as always, to our Lifeboat badge winner of the week!\",\"3603\":\"What does it take to attract developers to your organization and to create an environment internally where they feel empowered to do their best work. One of the most successful strategies is to employ a great developer evangelist, which we\\u2019ll shorten to DevEv for brevity\\u2019s sake. In an era of remote work, DevEvs might be needed more than ever \\u2014 advocating for the needs of programmers, ensuring collaboration across business units, liaising with external partners, and creating a positive environment. Attracting great developer talent is difficult, as demand continues to outpace supply in many areas. And while individual companies compete for talent, it takes the work of many companies to create the products and services people love and need in today\\u2019s world. Cross-company awareness and collaboration becomes increasingly important in our connected world. In the piece below, we\\u2019ll dive into more detail on what developer evangelism means and how people working in DevEv do their jobs. Then we\\u2019ll explore the criteria a company should consider before investing in a DevEv program and how to know when your organization is ready to benefit from this practice. What does a developer evangelist really do? So what does that look like on a day to day? Christian Heilmann\\u2019s free resource seems like a good starting point: \\u201dA developer evangelist is a spokesperson, mediator, and translator between a company and its technical staff.\\u201d The role is all about improving communication, internally and externally, to support the creation of good work. As Jon Chan, an engineering manager, who has been with Stack since 2013 and has done a lot of developer evangelism for the company put it: \\u201cA developer evangelist is someone who promotes and futhers the company agenda in the public eye of the community.\\u201d On a tactical level, this may involve a wide range of duties from improving the internal developer experience (advocating for new tools or processes, supporting internal and external meetups, protecting developers\\u2019 time for and facilitating their open source contributions), a lot of content marketing starting with blogging and speaking engagement for developers or sometimes even joining the conversation online, but extends to managing educational materials around the company\\u2019s products or APIs. Let\\u2019s look at some practical examples and then discuss if it\\u2019s the right time for your organization to invest in developer evangelism. How can engineering teams connect with a company\\u2019s user base and surrounding global tech community? Take a look at how developer evangelists like Nathaniel Okenwa at Twilio often host webinars to share valuable insights for professional development and growth. Join @Twilio Developer Evangelist, Nathaniel Okenwa @chatterboxCoder and Staff, Software Engineer, Elmer Thomas @thinkingserious on the next episode of Twilio Insiders, Wednesday, Oct 7th at 12:30pm EDT \\/ 5:30pm BST streaming live on https:\\/\\/t.co\\/amdRMwjWIL pic.twitter.com\\/XYsTN0woRy \\u2014 Twilio Developers (@TwilioDevs) October 7, 2020 Even a simple tweet, like the following GIFY tutorial from Ashley Alicea, senior developer advocate for games at Unity3D, can communicate a message about your team\\u2019s engineering culture. In this case, a tweet makes a simple statement about the benefits for developers. But it also opens the door to deeper, longer lasting interactions by offering a gamified tutorial where curious coders can level up. Specific tactics, like webinars and interacting with developers using your product, are only part of a successful DevEv experience. As Chloe Condon, senior cloud advocate at Microsoft explains, the ability to create impact in a DevEv role begins with the right mindset. \\u201cEvery day is different,\\u201d says Condon. \\u201cPre-COVID, you could catch me flying around the globe giving talks about Azure, hosting events at the Microsoft Reactor, writing blog posts, hosting office hours, and attending meetups (sometimes while singing). I spent a lot of time writing talks, hosting webinars, tweeting, and recording podcasts. Pre-2020, I hosted a monthly, camp-themed meet-up. I miss these events a lot. The shift to new styles of working during a pandemic has been dramatic. \\u201cThese days it still varies. I work on our academic team targeting students. That means a lot of live streaming, video content brainstorming sessions, blog writing, and live presenting at online conferences. I\\u2019m still hosting webinars and making tutorials with a big focus on video content since that\\u2019s most people\\u2019s main way of communication for now.\\u201d While being a broadway singer is not a requirement for developer evangelists, being a great communicator is. Chloe Condon in a duet with Misty robot. Here are some thoughts about introducing evangelism to your engineering org. Should you hire a developer evangelist? If you are a company in need of deeper connections with developers, there are at least a couple of ways to go about it. While it\\u2019s common to see developer evangelists at big, public tech companies, not every organization can afford a dedicated DevEv team. For smaller organizations, you can hire a full-time developer advocate or you can establish a culture of developer evangelism among your team. At Stack Overflow, we don\\u2019t currently have anyone with the job title advocate or evangelist, but from the start it\\u2019s been part of our culture. We spoke about this with Jon Chan and David Haney, two tenured engineers and team leads who have been with the company for a long time and see themselves as sometimes wearing a developer evangelist hat. \\u201cThere are companies who benefit from developer evangelism as a position, others benefit from a culture of dev evangelism,\\u201d explains Haney. Chan points out that, if you are a company loved by developers, you may not need a full-time position. \\u201cCompanies that aren\\u2019t tech companies or known to be traditionally involved in the dev community could probably benefit more from such a role. A lot of them might have really interesting API or services or data you wouldn\\u2019t otherwise get access to.\\u201d But of course, these approaches are by no means mutually exclusive. There are brands like GitHub and Twilio that were beloved by programmers but also had developer advocates before they were at massive scale. For them, it was worth the investment to spread the word about the tools and services they offered. If you are an insurance provider or a bank not traditionally associated with the latest tech, it might still make sense to invest in your reputation through evangelism, but would be a tall order for your developer team to do this on the side without any full-time support. \\u201cCompanies like that don\\u2019t start out with the same brand recognition in the tech space,\\u201d says Chan. Developer evangelism is easier for companies that began by selling developers tools and had public APIs early on. Talk with your technical staff about what areas of your stack would lend themselves to a more playful and public presence before diving into the deep end of DevEv. If you decide to go the in-house route, you should enable your team to take the time off to prepare content and meet up (virtually) with the community at large. As far as finding people to take on the task of evangelism is concerned, those individuals will often show an interest already. \\u201cI think the most common way to come into this role (or to carve it out for yourself ) is management noticing that you have the communications skills, networking skill and an interest in taking on a role of advocacy,\\u201d says Chan. \\u201cIt often is an additional responsibility, not a full on sidestep into a new role. \\u201d When is developer evangelism not the right approach for your company? Regardless if you are hiring a person or enabling your team to become dev evangelists, you need to be thinking about what you want to achieve. Even though developer evangelism and developer advocacy are the more widely spread terms, another one often used in the context gets at the core of it: developer relations. As someone who is often on the receiving end of developer evangelism, Haney stresses that introducing this role means getting used to a new way of talking about your product. Avoiding developer evangelism is better than doing it badly. \\u201cIf you hire an evangelist, you need to give them the agency to speak on behalf of the company. Developers are very good at seeing through anything that is not authentic.\\u201d DevEv involves a way more unfiltered advocacy for a product than traditional marketing, including admitting that you don\\u2019t have the best solution. What you want to avoid is what Haney describes as the hammer problem. \\u201cIf you are trying to sell hammers, everything looks like a nail. That is poor evangelism for sure.\\u201d Some of the best evangelism includes sharing learnings, and yes, even failures, in talks or blog posts. If a company is not ready to commit to this level of transparency, DevEv should probably wait. It\\u2019s only when their developer evangelist (or the people doing the evangelising at the company) begin to talk about the product openly that they will build meaningful relationships with the public. \\u201cPosting your solution in a forum and not responding to feedback is not evangelism,\\u201d Haney notes. Dion Almaer puts it nicely in a blog post, bringing it back to the term developer advocacy. \\u201cAt first people think that you are advocating to developers, but it is also very important to think about the other connotation. You think about being an advocate of the developer. What does this mean? It means that when you are in a meeting with your product group, you are their mouth piece. What do they think of the products? The APIs? What are they asking for? You get to almost be an outsider on the inside. That is the power of the developer advocate role and why it can be such a fun one at companies.\\u201d The potential in 2020 and beyond In 2020 advocating for developers has started to include a more holistic approach of them as not just employees but human beings and the groups they represent. The COVID-19 pandemic has brought to the forefront inequalities in our society and injustices that exist on our planet, the full extent of which many of us did not previously recognize and realize. \\u201cWhat I love most about this role is that you need empathy to be successful,\\u201d explains John Coghlan, developer evangelism manager at GitLab. \\u201cYou need to be able to understand and relate to other people \\u2014 and deliver what they need to be successful. My passion has always been to create welcoming communities that provide opportunities for people to grow, explore their intellectual curiosities, develop new skills, and find happiness at work.\\u201d Developer evangelists have the position to create pathways for understanding of the human experience. They are in a perfect position to foster inclusivity and feeling of belonging in organizations to encourage a welcome space for everyone. Chan, \\u201cI am excited about developer evangelism developing in the industry, because almost all companies have a stake when it comes to developers.\\u201d The post Does your organization need a developer evangelist? appeared first on Stack Overflow Blog.\",\"3570\":\"In this week's episode (with only a brief IT interlude), the gang talks about the Dell XPS-13, Macbook Pro touch bars, and ugh, Uber\\u2026 And our special guest this week is Erica Brescia, co-founder and COO at Bitnami. She speaks to us about her passion for dev tools as well as the challenges of being a predominantly remote company (something that Stack Overflow knows a little bit about).\",\"1832\":\"\\u201cDeep Learning with PyTorch: Zero to GANs\\u201d is a beginner-friendly online course offering a practical and coding-focused introduction to deep learning using the PyTorch framework. Learn more and register for a certificate of accomplishment here: http:\\/\\/zerotogans.com Watch the entire series here: https:\\/\\/www.youtube.com\\/playlist?list=PLWKjhJtqVAbm5dir5TLEy2aZQMG7cHEZp Code and Resources: \\ud83d\\udd17 Generative Adversarial Networks in PyTorch: https:\\/\\/jovian.ai\\/aakashns\\/06b-anime-dcgan \\ud83d\\udd17 Generative Adversarial Networks using MNSIT: https:\\/\\/jovian.ai\\/aakashns\\/06-mnist-gan \\ud83d\\udd17 Tensorflow 2.1 port of Pytorch - Zero to GANs: https:\\/\\/jovian.ai\\/kartik.godawat\\/collections\\/tf-zero-to-gan \\ud83d\\udd17 Discussion forum: https:\\/\\/jovian.ai\\/forum\\/t\\/lecture-6-image-generation-using-generative-adversarial-networks-gans\\/13775 Topics covered in this video: * Generative modeling and applications of GANs * Training generator and discriminator networks * Generating fake digits & anime faces with GANs This course is taught by Aakash N S, co-founder & CEO of Jovian - a data science platform and global community. - YouTube: https:\\/\\/youtube.com\\/jovianml - Twitter: https:\\/\\/twitter.com\\/jovianml - LinkedIn: https:\\/\\/linkedin.com\\/company\\/jovianml -- Learn to code for free and get a developer job: https:\\/\\/www.freecodecamp.org Read hundreds of articles on programming: https:\\/\\/freecodecamp.org\\/news And subscribe for new videos on technology every day: https:\\/\\/youtube.com\\/subscription_center?add_user=freecodecamp\",\"1241\":\"Neural Networks from Scratch book, access the draft now: https:\\/\\/nnfs.io NNFSiX Github: https:\\/\\/github.com\\/Sentdex\\/NNfSiX Playlist for this series: https:\\/\\/www.youtube.com\\/playlist?list=PLQVvvaa0QuDcjD5BAw2DxE6OF2tius3V3 Spiral data function: https:\\/\\/gist.github.com\\/Sentdex\\/454cb20ec5acf0e76ee8ab8448e6266c Python 3 basics: https:\\/\\/pythonprogramming.net\\/introduction-learn-python-3-tutorials\\/ Intermediate Python (w\\/ OOP): https:\\/\\/pythonprogramming.net\\/introduction-intermediate-python-tutorial\\/ Mug link for fellow mug aficionados: https:\\/\\/amzn.to\\/3bvkZ6B Channel membership: https:\\/\\/www.youtube.com\\/channel\\/UCfzlCWGWYyIQ0aLC5w48gBQ\\/join Discord: https:\\/\\/discord.gg\\/sentdex Support the content: https:\\/\\/pythonprogramming.net\\/support-donate\\/ Twitter: https:\\/\\/twitter.com\\/sentdex Instagram: https:\\/\\/instagram.com\\/sentdex Facebook: https:\\/\\/www.facebook.com\\/pythonprogramming.net\\/ Twitch: https:\\/\\/www.twitch.tv\\/sentdex #nnfs #python #neuralnetworks\",\"954\":\"Want to learn more about AsyncIO in Python, with an example where you can see and hear events being triggered in real-time? This week we have \\u0141ukasz Langa on the show. \\u0141ukasz has created a talk for PyCon 2020 online about using AsyncIO with Music. In his talk he shows live examples of coroutines, gathering, the event loop and events being triggered to create a piece of music. We also talk about his role as the release manager for Python 3.8 and 3.9. \\u0141ukasz provides background on the origins of his very popular, uncompromising code formatter, Black, and the types of problems it can solve inside of an organization. \\u0141ukasz previously worked for Facebook, which is where he started Black. He talks about recently moving back to Poland. We discuss his current work for Edge DB, building a new generation object-relational database. Topics: 00:00:00 \\u2013 Introduction 00:01:32 \\u2013 \\u0141ukasz\\u2019s background 00:03:22 \\u2013 Leaving Facebook and moving back to Poland 00:05:26 \\u2013 Starting work with EdgeDB 00:06:07 \\u2013 What is Edge DB? 00:12:28 \\u2013 AsyncIO + Music PyCon 2020 talk 00:18:56 \\u2013 More AsyncIO resources 00:23:36 \\u2013 Comparing the event loop to a game loop 00:27:12 \\u2013 Coroutines and gather 00:30:00 \\u2013 A conversation with Glyph 00:33:40 \\u2013 Bigger ideas for the AsyncIO MIDI sequencer 00:35:41 \\u2013 Using uvloop as a replacement for the built-in reference AsyncIO loop 00:39:13 \\u2013 Thoughts on MIDI 2.0 00:46:30 \\u2013 Origins of Black 00:53:51 \\u2013 Black grows in popularity 00:58:35 \\u2013 What is involved in being the Python 3.9 release manager? 01:02:22 \\u2013 The Python language summit 01:07:44 \\u2013 Is the beta on schedule? 01:09:27 \\u2013 How did you get the role of Release Manager? 01:15:09 \\u2013 What are you excited about in the world of Python? 01:19:02 \\u2013 If you were learning Python from scratch, what would do differently? 01:22:18 \\u2013 What is something you thought you knew about Python, but were wrong about? 01:26:05 \\u2013 Goodbye and Thanks Show links: \\u0141ukasz Langa - AsyncIO + Music - PyCon 2020 Edge DB: The next generation database Edge DB YouTube Channel - Learn Python\\u2019s AsyncIO - Series PyCon 2020 Online Launch! code::dive 2017 \\u2013 \\u0141ukasz Langa \\u2013 Thinking in coroutines code::dive 2019 - \\u0141ukasz Langa - AsyncIO and Music - Earlier version John Carmack: \\u201cit\\u2019s time to start pushing forward on higher frame-rate, lower latency\\u201d - PCGamesN Glyph Lefkowitz: Wikipedia Article Orca: an esoteric programming language designed to quickly create procedural sequencer uvloop: an ultra fast implementation of the asyncio event loop Introducing MIDI 2.0 - Sound on Sound Polyend Tracker: Break the pattern YAPF: Python code formatter from Google Black: The uncompromising Python code formatter \\u0141ukasz Langa - Life Is Better Painted Black, or: How to Stop Worrying and Embrace Auto-Formatting - PyCon 2019 The 2020 Python Language Summit Winterbloom: Synth Modules You Can Make Your Own Starlette: \\u2728 The little ASGI framework that shines. \\u2728 CircuitPython ambv - \\u0141ukasz Langa\\u2019s GitHub Support the podcast & join our community of Pythonistas\",\"3304\":\"You can find the first episode of the SO podcast here. It was conducted over Asterix, open source telephony software that allowed for fancy operations like voice messaging and recording calls! What would social software look like if we designed them to remove commerce and popularity? Are services like Mightybell an interesting example of where we might be headed? If you want to build a model of something - say traffic patterns in your town or a hypothetical zombie invasion - you should check out a new project Joel is involved in, Hash.ai.\",\"1861\":\"In this course, you\\u2019ll explore regular expressions, also known as regexes, in Python. A regex is a special sequence of characters that defines a pattern for complex string-matching functionality. String matching like this is a common task in programming, and you can get a lot done with string operators and built-in methods. At times, though, you may need more sophisticated pattern-matching capabilities. In this course, you\\u2019ll learn: How to access the re module, which implements regex matching in Python How to use re.search() to match a pattern against a string How to create complex matching pattern with regex metacharacters Explore more functions, beyond re.search(), that the re module provides Learn when and how to precompile a regex in Python into a regular expression object Discover useful things that you can do with the match object returned by the functions in the re module [ Improve Your Python With \\ud83d\\udc0d Python Tricks \\ud83d\\udc8c \\u2013 Get a short & sweet Python Trick delivered to your inbox every couple of days.\",\"3418\":\"You can find the podcast and article that inspired our chat here. It's the second of Kelsey Hightower's \\\"Unpopular Opinions\\\" series. We have heard the requests for full episodes transcripts and we know accessibility is important, so we're working on a solution. Stay tuned. The recipients of the lifeboat badges this episode were for questions that were between three and six years old. It's a testament to the ongoing value of the knowledge shared on our network and to the contributions of our community to help others through questions and answers. Last but not least, our 2020 Developer Survey is open. It takes about 15-20 minutes to complete, and we want to hear from as many coders as possible, regardless of age, experience, or occupation.\",\"3355\":\"Stack Exchange Podcast - Episode #43 - False Facts & Blood Feuds by The Stack Overflow Podcast\",\"932\":\"Have you wanted to work with PDF files in Python? Maybe you want to extract text, merge and concatenate files, or even create PDFs from scratch. Are you interested in building hardware projects using a Raspberry Pi? This week on the show we have David Amos from the Real Python team to discuss his recent article on working with PDFs. David also brings a few other articles from the wider Python community for us to discuss. David searches for the latest Python news, links, and articles to produce PyCoder\\u2019s Weekly with Dan Bader. PyCoder\\u2019s Weekly is a free email newsletter for those interested in Python development. Along with David\\u2019s article on PDFs, we discuss another recent Real Python article about building physical projects with the Raspberry Pi. We also discuss articles from the community about: the PEPs of Python 3.9, why you should stop using datetime.now, Python dependency tools, and several ways to pass code to Python from the terminal. Course Spotlight: Cool New Features in Python 3.8 This course will get you up to speed with the new features of the latest release of Python. You\\u2019ll learn about using assignment expressions, how to enforce postional-only arguments, more precise type hints, and using f-strings for simpler debugging. It\\u2019s a worthy investment of your time to understand what the most recent release of Python provides before moving on to the next version this fall. Topics: 00:00:00 \\u2013 Introduction 00:02:06 \\u2013 Ways to Pass Code to Python From the Terminal 00:05:54 \\u2013 The PEPs of Python 3.9 00:10:54 \\u2013 Creating and Modifying PDF Files in Python 00:18:51 \\u2013 Video Course Spotlight 00:19:56 \\u2013 An Overview of Python Dependency Tools 00:26:55 \\u2013 Stop Using datetime.now 00:31:44 \\u2013 Build Physical Projects With Python on the Raspberry Pi 00:38:18 \\u2013 What are you excited about in the world of Python? 00:42:29 \\u2013 What do you want to learn next in Python? 00:44:31 \\u2013 Thanks and Good Bye Topic Links: PyCoder\\u2019s Weekly The Many Ways to Pass Code to Python From the Terminal \\u2013 You might know about pointing Python to a file path, or using -m to execute a module. But did you know that Python can execute a directory? Or a .zip file? The PEPs of Python 3.9 \\u2013 The first Python 3.9 beta release is upon us! Learn what to expect in the final October release by taking a tour of the Python Enhancement Proposals (PEPs) that were accepted for Python 3.9. Creating and Modifying PDF Files in Python \\u2013 Explore the different ways of creating and modifying PDF files in Python. You\\u2019ll learn how to read and extract text, merge and concatenate files, crop and rotate pages, encrypt and decrypt files, and even create PDFs from scratch. Overview of Python Dependency Management Tools \\u2013 While pip is often considered the de facto Python package manager, the dependency management ecosystem has really grown over that last few years. Learn about the different tools available and how they fit into this ecosystem. Stop Using datetime.now! (With Dependency Injection) \\u2013 How do you test a function that relies on datetime.now() or date.today()? You could use libraries like FreezeGun or libfaketime, but not every project can afford the luxury of reaching for third-party solutions. Learn how dependency injection can help you write code that is more testable, maintainable, and practical. Build Physical Projects With Python on the Raspberry Pi \\u2013 In this tutorial, you\\u2019ll learn to use Python on the Raspberry Pi. The Raspberry Pi is one of the leading physical computing boards on the market and a great way to get started using Python to interact with the physical world. Additional Links: Python Basics: A Practical Introduction to Python 3 PEG Parsers -Guido van Rossum - Medium article Code with Mu: a simple Python editor for beginner programmers SSH (Secure Shell) Visual Studio Code VSCode - Remote Development using SSH VIM and Python \\u2013 A Match Made in Heaven - Real Python article How to Build a Python GUI Application With wxPython - Real Python article import asyncio: Learn Python\\u2019s AsyncIO #1 - The Async Ecosystem python-rtmidi - A Python binding for the RtMidi C++ library Support the podcast & join our community of Pythonistas\",\"3392\":\"Stack Overflow Podcast - Episode #35 by The Stack Overflow Podcast\",\"3515\":\"In this week's episode, we chat about our annual company meetup, which took place this year in the sometimes sunny Philadelphia, and featured a now-viral talk. Our very special guest this week is Fereshteh Forough, the founder and executive director of Code to Inspire, which is celebrating its one year anniversary this week. Code to Inspire uses technology, education and outreach to support Afghan women in their fight for social, political, and economic equality.\",\"3342\":\"Stack Overflow Podcast - Episode #82 by The Stack Overflow Podcast\",\"3605\":\"This week we chat with Lyel Resner, a fellow at the MIT Civic Data Lab and Adjunct Professor of Civic Technology at NYU\\u2019s ITP program. He explains the surge in tech startups looking to ground themselves in ethical practices, and argues that the extra work and expense of these considerations are outweighed by the eventual costs that come with ignoring ethics until a company is more well established. You can find more about Resner here. Learn more about the topics we discussed by following some of Resner\\u2019s suggested links below: People to follow on Twitter: Safyia Noble, Ruha Benjamin, and Kamal Sinclair. Ellen Pao and Project Include. Eli Pariser and New Public by Civic Signals. The post Podcast 291: Why developers are demanding more ethics in tech appeared first on Stack Overflow Blog.\",\"3341\":\"Stack Overflow Podcast - Episode #73 by The Stack Overflow Podcast\",\"3396\":\"We're back! In today's episode: Jay, David, Ilana, Jess, and special guest Abby Mars read mean tweets, discuss what we are doing to prevent further mean tweets, and wait, the iPhone X does what with your face? Warning: Explicit content\",\"225\":\"d'aww ty. Something tells me @coffeebreak_YT doesn't watch programming videos, but I will admit coffeezilla on YT is 100% a guilty pleasure for me. Collab when? Could possibly talk about a certain massive online course selling site that I'm currently doing battle with. \\ud83e\\udd20\",\"3278\":\"In this week's episode, the hosts talk about the launch of Stack Overflow's latest product, Developer Story. They also talk about Jay's unique vernacular, and what angers programmers the most.\",\"3361\":\"Stack Exchange Podcast #71 - A Bunch of Bald Yaks by The Stack Overflow Podcast\",\"3471\":\"Stack Exchange Podcast - Episode #37 - Back At It, Again by The Stack Overflow Podcast\",\"1240\":\"The what and why of the Softmax Activation function with deep learning. Neural Networks from Scratch book: https:\\/\\/nnfs.io Playlist for this series: https:\\/\\/www.youtube.com\\/playlist?list=PLQVvvaa0QuDcjD5BAw2DxE6OF2tius3V3 Channel membership: https:\\/\\/www.youtube.com\\/channel\\/UCfzlCWGWYyIQ0aLC5w48gBQ\\/join Discord: https:\\/\\/discord.gg\\/sentdex Support the content: https:\\/\\/pythonprogramming.net\\/support-donate\\/ Twitter: https:\\/\\/twitter.com\\/sentdex Instagram: https:\\/\\/instagram.com\\/sentdex Facebook: https:\\/\\/www.facebook.com\\/pythonprogramming.net\\/ Twitch: https:\\/\\/www.twitch.tv\\/sentdex #nnfs #python #neuralnetworks\",\"1864\":\"Computers store all kinds of information as a stream of binary digits called bits. Whether you\\u2019re working with text, images, or videos, they all boil down to ones and zeros. Python\\u2019s bitwise operators let you manipulate those individual bits of data at the most granular level. You can use bitwise operators to implement algorithms such as compression, encryption, and error detection as well as to control physical devices in your Raspberry Pi project or elsewhere. Often, Python isolates you from the underlying bits with high-level abstractions. You\\u2019re more likely to find the overloaded flavors of bitwise operators in practice. But when you work with them in their original form, you\\u2019ll be surprised by their quirks! In this tutorial, you\\u2019ll learn how to: Use Python bitwise operators to manipulate individual bits Read and write binary data in a platform-agnostic way Use bitmasks to pack information on a single byte Overload Python bitwise operators in custom data types Hide secret messages in digital images To get the complete source code of the digital watermarking example, and to extract a secret treat hidden in an image, click the link below: Get the Source Code: Click here to get the source code you\\u2019ll use to learn about Python\\u2019s bitwise operators in this tutorial. Overview of Python\\u2019s Bitwise Operators Python comes with a few different kinds of operators, such as the arithmetic, logical, and comparison operators. You can think of them as functions that take advantage of a more compact prefix and infix syntax. Note: Python does not include postfix operators like the increment (i++) or decrement (i--) operators available in C. Bitwise operators look virtually the same across different programming languages: Operator Example Meaning & a & b Bitwise AND | a | b Bitwise OR ^ a ^ b Bitwise XOR (exclusive OR) ~ ~a Bitwise NOT n Bitwise right shift As you can see, they\\u2019re denoted with strange-looking symbols instead of words. This makes them stand out in Python as slightly less verbose than you might be used to seeing. You probably wouldn\\u2019t be able to figure out their meaning just by looking at them. Note: If you\\u2019re coming from another programming language such as Java, then you\\u2019ll immediately notice that Python is missing the unsigned right shift operator denoted by three greater-than signs (\\/code\\/tdtdcode\\/code\\/tdtdcode\",\"3449\":\"Stack Exchange Podcast - Episode #17 w\\/ Kyle & George by The Stack Overflow Podcast\",\"609\":\"Book a mock interview or coaching session with a FireEye engineer as early as tomorrow on interviewing.io! Sign up here: https:\\/\\/interviewing.io\\/signup?utm_source=youtube.com&utm_medium=referral&utm_campaign=video_link Check out the feedback by the FireEye interviewer and the full transcript on https:\\/\\/interviewing.io\\/recordings\\/Java-Fireeye-1\\/ Disclaimer: All interviews are shared with explicit permission from the interviewer and the interviewee, and all interviews are anonymous. interviewing.io has the sole right to distribute this content.\",\"4850\":\"The selection process of TCS NQT was divided into two categories: Online Proctored Test Interview (TR+MR+HR) The online test was a 3-hour test. The test\\u2026 Read More The post TCS NQT Interview Experience (2020-21) appeared first on GeeksforGeeks.\",\"3429\":\"Stack Exchange Podcast - Episode #19 w\\/ John Sheehan by The Stack Overflow Podcast\",\"3573\":\"Stack Overflow Podcast - Episode #11 by The Stack Overflow Podcast\",\"3370\":\"For this episode we spoke again with Georges Saab, Vice President of Software Development at the Java Platform Group and Manish Gupta, Vice President of Global Marketing for Java and GraalVM. The very first feature that made a massive impact wasn\\u2019t a change in the Java language at all. It was the vastly improved library support that happened in the early releases. Between 1.0 and 1.3, these libraries included the Swing window toolkit, the Collections framework, a RPC-like API for remote calls, JDBC for interacting with databases, and more. The standard libraries grew richer, more sophisticated, and allowed Java to become a real enterprise language. In 2004, Java added generics, which allowed types, methods, and interfaces to be specified with the associated data types to be specified when that item was instantiated without sacrificing type safety. \\u201cAt the time, generics were a challenge and people had strong opinions about them,\\u201d said Saab. Today, generics are one of the enduring features of the language. Java may have been designed as a completely object oriented language, but when Java SE 8 was released in 2014, it added Lamda expressions (aka closures), which added some functional programming elements. Not every problem is best served by OOP, and by adding Lambdas, Java became more flexible. Despite its prominence across numerous industries, Java isn\\u2019t sitting still. Saab mentioned four big projects coming to Java that had him excited, all designated by codenames: Loom, Valhalla, Leyden, and ZGC. You can read all about them on our blog. If you want to learn more, Oracle has put together a wealth of resources to celebrate Java's 25th anniversary.\",\"1237\":\"Get the book: https:\\/\\/nnfs.io twitters: twitter.com\\/sentdex twitter.com\\/daniel_kukiela Channel membership: https:\\/\\/www.youtube.com\\/channel\\/UCfzlCWGWYyIQ0aLC5w48gBQ\\/join Discord: https:\\/\\/discord.gg\\/sentdex Support the content: https:\\/\\/pythonprogramming.net\\/support-donate\\/ Twitter: https:\\/\\/twitter.com\\/sentdex Instagram: https:\\/\\/instagram.com\\/sentdex Facebook: https:\\/\\/www.facebook.com\\/pythonprogramming.net\\/ Twitch: https:\\/\\/www.twitch.tv\\/sentdex\",\"3362\":\"In this week\\u2019s podcast, Anil Dash - new CEO of Fog Creek and old friend of ours - stops by, as does Dr. Dave Robinson for our new segment, Dr Dave\\u2019s Data Desk with Dr. Dave Robinson. Because alliteration. And this week\\u2019s Stack Overflow Constitution question has the potential to destroy us all: Is it pronounced GIF with a hard G \\/\\u0261if\\/ or GIF with a J \\/jif\\/?\",\"3258\":\"Every week, thought leaders and disruptive strategists hop onto the Uprisor Podcast to discuss the future of work and share their insights and ideas about on-demand talent, remote work and innovation. In today\\u2019s episode, Clinton Bonner (Topcoder\\u2019s VP of Marketing) sits down to chat with Jarah Meador. Originally trained as a scientist, Jarah now serves at the Director of Open Innovation Programs for the U.S. General Services Administration (GSA). In her current role, Jarah oversees Challenge.gov where she and her team use prize competitions and challenges to engage the general public into solving the government\\u2019s most pressing problems. Jarah shares why the U.S. government is turning to its citizens for cutting edge ideas, and why leaders need to invest in innovation culture within their own organization before seeking solutions from the outside. Enjoy the conversation and top moments below. How the U.S. Government is Seeking Solutions From Citizen-Solvers The two kicked off this episode with Jarah explaining how the GSA is sourcing solutions from Americans through challenges and competitions. Historically, this is nothing new. In fact, the designs for the White House and the U.S. Capitol all initially came from crowdsourcing. In today\\u2019s modern era, the GSA is simply taking it a step further, helping the government innovate with advancements like artificial intelligence and cybersecurity. The GSA identifies problems that the government is struggling to solve, then posts public challenges to Challenge.gov. Jarah\\u2019s department invites anyone, from experts to academic researchers to hobbyists, to submit concepts, ideas and solutions. The first challenge was created in 2010, and since then more than 1,000 challenges have helped solve problems at more than 100 federal agencies. \\u201cWe\\u2019re introducing [federal agencies] to open innovation\\u2026and how to allow folks from outside of government \\u2014 the customers that we serve \\u2014 to be able to bring their ideas into government, where there can be a broader impact.\\u201d \\u2014Jarah Meador True Innovation Requires Fostering the Right Culture Inside Your Business Simply seeking new ideas or out-of-the-box thinking from external sources is important. However, Jarah warns that without an internal culture of innovation, your own employees or team leaders can act as gatekeepers that prevent true innovation from taking place. She says she\\u2019s encouraged to see more federal agencies fostering an internal innovation culture, which helps with the success of the GSA\\u2019s public challenges. \\u201cPut effort and resources behind discovery, problem definition, working with stakeholders and end users to map the needs, so that you create a truly open and fair participation environment.\\u201d \\u2014Jarah Meador Bridge the Gap Between Internal and External Innovation Jarah suggests that one way to ensure your internal culture is ready for true innovation and crowdsourcing solutions is to build teams or hire talent specifically focused on identifying areas where collaborative problem-solving can be helpful. For example, she points out that the Veterans Health Administration hired an innovation specialist for each of its hospitals. These specialists then work together to share information and data and identify opportunities for collaborating with the public. She notes that this type of hiring or culture-building can be instrumental in creating an internal culture of innovation that\\u2019s accepting to external ideas. Thanks to Jarah Meador for sharing her experiences with the U.S. government\\u2019s crowdsourcing and innovation strategies with the Uprisor audience. \\u201cIf you can bridge these two communities\\u2014inside and outside of an organization\\u2014your pathway to innovation and scale is more linear.\\u201d \\u2014Jarah Meador Uprisor podcast A unique future of work discussion crafted for enterprise leaders Listen to the Podcast The post Open Innovation & Prize Competitions Across Government with the GSA\\u2019s Jarah Meador appeared first on Topcoder.\",\"948\":\"This week on the show we have Armin Ronacher to talk about the first 10 years of Flask. Armin talks about the origins of Flask and the components that make up the framework. He talks about what goes into documenting a framework or API. He also talks about the community working on the ongoing development of Flask. He also shares his thoughts about Python, and how it contrasts with Rust and TypeScript. Armin talks about what he would do differently if he were to start development of a project like Flask now. Course Spotlight: Documenting Python Code: A Complete Guide This course will get you up to speed with how to document your Python code. Documenting your code is an important step to help developers and users fully understand its usage and purpose. Topics: 00:00:00 \\u2013 Introduction 00:01:21 \\u2013 Director of Engineering at Sentry 00:07:27 \\u2013 How much are you currently involved with Flask? 00:08:32 \\u2013 Are you still using both Python and Rust currently? 00:11:37 \\u2013 The origins of Flask 00:19:14 \\u2013 Initial reactions and focus 00:21:26 \\u2013 Where has Jinja use shifted? 00:23:23 \\u2013 Flask usage trends 00:25:44 \\u2013 The Pallets Projects name 00:29:08 \\u2013 Flask version numbers 00:34:21 \\u2013 Video Course Spotlight 00:35:21 \\u2013 The community working on Flask 00:38:18 \\u2013 Thoughts on type checking 00:41:40 \\u2013 Flask\\u2019s documentation 00:43:26 \\u2013 Thoughts on API documentation 00:47:27 \\u2013 What would you change if you started from scratch? 00:49:58 \\u2013 Listener question about using Python with WordPress 00:58:15 \\u2013 Any suggestions of a Python project source code to read? 01:00:13 \\u2013 Revisit - What would you change if you started from scratch? 01:03:17 \\u2013 Thoughts on the current path of Python 01:06:20 \\u2013 What are you excited about in the world of Python? 01:07:44 \\u2013 What do you want to learn next? 01:11:35 \\u2013 Thoughts on conferences and speaking 01:16:19 \\u2013 Thanks and Conclusion Show links: Armin Ronacher\\u2019s Thoughts and Writings Sentry Flask: A lightweight WSGI web application framework The Flask Mega-Tutorial: Miguel Grinberg ItsDangerous:It\\u2019s dangerous, so better sign this Pocoo Jinja2: Full-featured template engine for Python Werkzeug: Comprehensive WSGI web application library Click: Creating beautiful command line interfaces in a composable way The Pallets Projects: A collection of Python web development libraries Euro-pallet: Wikipedia article Pygments: Python syntax highlighter Sphinx: Python Documentation Generator Python Type Checking: Real Python Guide Typescript: JavaScript that scales mypy: Optional static type checker for Python Rust: A language empowering everyone to build reliable and efficient software Web Assembly: A binary instruction format for a stack-based virtual machine Support the podcast & join our community of Pythonistas\",\"212\":\"Needs 1 more for when you cancel the domain. nitter.net\\/iamdevloper\\/status\\/1348935264249511936#m\",\"940\":\"Do you know someone in the Python community who recently was let go from their job due to the pandemic? What does the job landscape currently look like? What are skills and techniques that will help you in your job search? This week we have Kyle Stratis on the show to discuss how he is managing his job search after just being let go from his data engineering job. Kyle is a member of the Real Python team and has written several articles for the site. We discuss Kyle\\u2019s career and the skills that he\\u2019s developed, which are currently helping him in his job search. Kyle left academia to work as a data engineer. His background helps him to communicate between teams of scientists and engineers. We also talk about Kyle\\u2019s recent article on combining data in Pandas. Kyle shares a tip on Pandas efficiency, and hints at some lesser known features of Python generators. Topics: 00:00:00 \\u2013 Introduction 00:01:27 \\u2013 Kyle\\u2019s background on being let go 00:04:17 \\u2013 Programming background and building connections 00:10:18 \\u2013 Becoming a Data Engineer 00:15:59 \\u2013 Translating between science and data teams 00:20:35 \\u2013 Every job has different language requirements 00:23:44 \\u2013 Getting out of your Python language comfort zone 00:27:08 \\u2013 NASDANQ project - a stockmarket for Memes 00:30:34 \\u2013 Learning the power of building a network 00:35:13 \\u2013 Using skills developed in outside projects 00:38:45 \\u2013 What does the job landscape look like currently? 00:49:52 \\u2013 Writing for Real Python 00:52:53 \\u2013 Combining data in Pandas article 00:55:22 \\u2013 Merging in Pandas 01:03:05 \\u2013 Feedback and community 01:10:37 \\u2013 What are you excited ab out in the world of Python? 01:12:12 \\u2013 What is something you thought you knew about Python but were wrong about it? 01:14:01 \\u2013 What is a little known Python trick or tip? 01:14:33 \\u2013 More efficient Pandas 01:15:52 \\u2013 Using more of the advanced features of generators 01:18:55 \\u2013 Thanks and Goodbye Show Links: Kyle\\u2019s Blog Kyle\\u2019s LinkedIn A MongoDB Optimization: Kyle Stratis\\u2019 Blog Memes are serious business with their own stock exchange: CNET How a group of Redditors is creating a fake stock market to figure out the value of memes: The Verge The joke Meme Economy is a now real thing called NASDANQ: AV Club Forbes Did A V. Serious Analysis Of NASDANQ, The Stock Market For Memes: Pedestrian Domi Station in Tallahassee Combining Data in Pandas With merge(), .join(), and concat(): Real Python article A Visual Explanation of SQL Joins: Coding Horror Wily: A command-line application for tracking, reporting on complexity of Python tests and applications Refactoring Python Applications for Simplicity: Real Python article Fast, Flexible, Easy and Intuitive: How to Speed Up Your Pandas Projects: Real Python article How to Use Generators and yield in Python: Real Python article Support the podcast & join our community of Pythonistas\",\"3387\":\"You can check out the back story of Dixon\\u2019s first company, SiteAdvisor, here. It was built during a time when spyware was a booming business and browsers had few systems in place to combat bad actors. The company was acquired by McAfee in 2006. It's a great trip through the history of web security at the time. Dixon next turned his attention to machine learning. He and his co-founders created Hunch, which worked to learn users\\u2019 tastes and recommend items they might enjoy. It was an early attempt to build the taste graph, a parallel to the social graph. It was acquired by eBay in 2011. Many of these techniques are now widely used across the biggest social networks in the world. Dixon then moved into the world of venture capital. You can read more about the Crypto Fund he helps to lead and the new startup school a16Zz is launching to help educate a new generation of programmers and founders. Application are still open. If you're interested in learning more about the background of Hashcash, which foreshadowed a lot of the ideas found in Bitcoin, there is some good info here.\",\"603\":\"Book a mock interview or coaching session with a Google engineer as early as tomorrow on interviewing.io! Sign up here: https:\\/\\/interviewing.io\\/signup?utm_source=youtube.com&utm_medium=referral&utm_campaign=video_link Check out the feedback by the Google interviewer and the full transcript on https:\\/\\/interviewing.io\\/recordings\\/CSharp-Google-23\\/ Disclaimer: All interviews are shared with explicit permission from the interviewer and the interviewee, and all interviews are anonymous. interviewing.io has the sole right to distribute this content.\",\"3543\":\"Today's hijinks include: Talking about engineering management (and pranks)with Ben Kamens; discussing a new study on how to ask a question on Stack Overflow, and chatting way too much about Star Trek IV: The Voyage Home.\",\"3565\":\"Stack Exchange Podcast - Episode #56 - Green or Red Curae by The Stack Overflow Podcast\",\"578\":\"We continue trying to optimize our the garbage collection process with concurrent algorithms, write barriers and compaction. Concurrent algorithms allow our application to respond to requests intermittently while the GC runs. This reduces app latency (although it also reduces app throughput). Compaction allows efficient memory allocation, but has the downside of stopping the application while objects are moved from one region to another. We discuss the problems, solutions and algorithms to speed up garbage collection here. Part 1: https:\\/\\/youtu.be\\/ZhbIReLe-r8 0:00 - Agenda 0:41 - Concurrency 1:34 - Lost object problem 2:41 - Defining constraints 3:25 - Solving through Write Barrier 3:49 - Memory Fragmentation 4:51 - G1GC 5:45 - Remembered Set 6:28 - Lost Update problem 7:09 - Solution teaser Final part coming soon! References: Tricolor Algorithm: Knuth, The art of computer programming Generational Hypothesis: https:\\/\\/people.cs.umass.edu\\/~emery\\/classes\\/cmpsci691s-fall2004\\/papers\\/p157-ungar.pdf System Design Video Course: https:\\/\\/get.interviewready.io\\/ Software Engineering Fundamentals: https:\\/\\/www.youtube.com\\/playlist?list=PLMCXHnjXnTntYbKsUs6Pj8_BO_8ou4y07 You can follow me on: Instagram: https:\\/\\/www.instagram.com\\/applepie404\\/ LinkedIn: https:\\/\\/www.linkedin.com\\/in\\/gaurav-sen-56b6a941\\/ Quora: https:\\/\\/www.quora.com\\/profile\\/Gaurav-Sen-6 Twitter: https:\\/\\/twitter.com\\/gkcs_ #GarbageCollection #JavaGC #JavaGarbageCollection\",\"606\":\"Book a mock interview or coaching session with a JP Morgan engineer as early as tomorrow on interviewing.io! Sign up here: https:\\/\\/interviewing.io\\/signup?utm_source=youtube.com&utm_medium=referral&utm_campaign=video_link Check out the feedback by the JP Morgan interviewer and the full transcript on https:\\/\\/interviewing.io\\/recordings\\/Python-JPMorgan-1\\/ Disclaimer: All interviews are shared with explicit permission from the interviewer and the interviewee, and all interviews are anonymous. interviewing.io has the sole right to distribute this content.\",\"3836\":\"Given a Binary Tree of positive integers. The task is to convert it to a BST using left shift operations on the digits of the\\u2026 Read More The post Convert a Binary Tree to BST by left shifting digits of node values appeared first on GeeksforGeeks.\",\"3567\":\"Stack Overflow Podcast - Episode #05 by The Stack Overflow Podcast\",\"3434\":\"On this week's episode, the gang talks about their favorite hats... for Winter Bash 2016! Developer Dan Luu comes by to tell Joel why he's wrong, and Joel talks about awful airports.\",\"3386\":\"Stack Overflow Podcast - Episode #10 by The Stack Overflow Podcast\",\"3842\":\"Given a 2D array edges[][] of type { X, Y } representing that there is an edge between the node X and Y in a\\u2026 Read More The post Find a node such that all paths from that node to leaf nodes are of the same color appeared first on GeeksforGeeks.\",\"3437\":\"Chloe Condon has a great post about how she created her medication reminder app and an official endorsement from Smash Mouth. You can find some writing from Iheanyi Ekechukwu on our blog here and you can find his podcast here. Learn about the Great Molasses Flood of 1919. It\\u2019s not funny so don\\u2019t laugh. Decades old code is putting millions of critical devices at risk. Should we be regulating software more closely? Ben Popper is the worst coder in the world\",\"3517\":\"Stack Exchange Podcast - Episode #53 - Let's Go Rio by The Stack Overflow Podcast\",\"565\":\"Code reviews are what we are doing now: a run through of someone's code to check for correctness and code quality. They are useful because another pair of eyes can catch bugs and problems easier than the person writing the code. Some considerations during code reviews: Know what you are reviewing. Knowing the code context is important. Look for bad code smells. Refer to the refactoring book in the description for this. Factors for good code: readability, correctness, performance. If you are unsure, do not sign off the review. Expect tests backing up the author's claims. Things to keep in mind: Look for problems. Only suggest solutions. Don't have long discussions of solutions with other reviewers here. Set a meeting or make a separate report. (Link it to the review later) Don't try and score points during the review. Don't mention irrelevant or complex solutions to sound cool. (Especially for the fresher engineers) Don't be nitpicky to sign-off. Fix the code yourself if you have a lot of nitpicky issues. Trust your teammates to improve themselves as they spend time looking at your code. Offload general issues to the build manager. Styling, formatting, conventions etc\\u2026 can be parser checks. Test coverage must be compulsory before sending a pull request, etc\\u2026 Some tricks for readability: Use an IDE when doing the review. Move magic numbers and strings to constants and Enums. Complex maps should be objects. Nested loops should be broken into functions or graph searches. Name variables and functions by what they do instead of how or why they do it. Move common object conversions, validations and other pieces of code to common Utils. Some tricks for performance: Use singletons and resource pools where you can. Constructing and Configuring a client is tricky. There should be dependency injection here. IO calls are expensive. Use caching, request collapsing and batch queries to reduce load. Some tricks for resource management: Make sure resources are being released. Make sure that race conditions are dealt with. Logging is critical when handling resources. Log with context. Code repository: https:\\/\\/github.com\\/coding-parrot\\/projects Designing Data Intensive Applications - https:\\/\\/amzn.to\\/2yQIrxH System Design Playlist: https:\\/\\/www.youtube.com\\/playlist?list=PLMCXHnjXnTnvo6alSjVkgxV-VH6EPyvoX Become a channel member! https:\\/\\/www.youtube.com\\/channel\\/UCRPMAqdtSgd0Ipeef7iFsKw\\/join You can follow me on: Quora: https:\\/\\/www.quora.com\\/profile\\/Gaurav-Sen-6 LinkedIn: https:\\/\\/www.linkedin.com\\/in\\/gaurav-sen-56b6a941\\/ Twitter: https:\\/\\/twitter.com\\/gkcs_ #SoftwareEngineering #GoodCodingPractices #CodeReview\",\"3835\":\"Given an array A[] consisting of N positive integers and an integer X, the task is to determine if it is possible to convert all\\u2026 Read More The post Check if all array elements can be reduced to less than X appeared first on GeeksforGeeks.\",\"4852\":\"Given a Binary Tree and an integer target, denoting the value of a node, the task is to find the sum of distances of all\\u2026 Read More The post Sum of distances of all nodes from a given node appeared first on GeeksforGeeks.\",\"3322\":\"Stack Overflow Podcast - Episode #63 by The Stack Overflow Podcast\",\"222\":\"Neural Networks from Scratch part 6, covering the Softmax activation function, is now out! #machinelearning #deeplearning #nnfs invidious.snopyta.org\\/watch?v=omz_NdFg\\u2026\",\"3445\":\"Stack Overflow Podcast - Episode #15 by The Stack Overflow Podcast\",\"3611\":\"This week we chat about coding like it\\u2019s 1985 with BBC BASIC and a delightful Twitter bot that will run your BASIC code and publish the results. After that we take a deep dive into the quantified life, with a year-in-review from a blogger who logged every single thing they did in 2020\\u2026in 15-minute increments. Also, Svelte, lifeboats, and some predictions for the new year. EPISODE NOTES If you\\u2019re interested in learning a bit of BBC Basic, there is a fun introduction here. You can tweet at this bot, and it will run the contents as code and reply with a video of the results. If you are interested in life-logging and want to see it done with a lot of very pretty graphs, check out this post, My Year in Data. Last but not least we chat about Svelte, which lets you create \\u201ccybernetically enhanced web apps.\\u201d Shout to Murali, a listener who suggested this topic. Our lifeboat of the week goes to koekenbakker for answering the question: R plots: Is there a way to draw a border, shadow or buffer around text labels? TRANSCRIPT The post Podcast 301: What can you program in just one tweet? appeared first on Stack Overflow Blog.\",\"3530\":\"Stack Exchange Podcast - Episode #16 by The Stack Overflow Podcast\",\"3447\":\"Stack Overflow Podcast - Episode #55 by The Stack Overflow Podcast\",\"938\":\"Are you ready to move beyond flat files for your data in Python? Maybe you\\u2019re not sure where to start with databases and SQL. This week on the show, David Amos returns with another batch of PyCoder\\u2019s Weekly articles and projects. We cover a Real Python article about managing data with SQLite and SQLAlchemy. David explores the intricacies of using the modulo operator (%). We also cover several other articles and projects from the Python community including, how to shoot yourself in the foot with python, exploring fractals on a cloud computer, the DMCA takedown request for youtube-dl, python for feature film, an online multiplayer text-based game framework, and a sorting algorithms visualizer. Course Spotlight: Playing and Recording Sound in Python In this course, you\\u2019ll learn about libraries that can be used for playing and recording sound in Python, such as PyAudio and python-sounddevice. You\\u2019ll also see code snippets for playing and recording sound files and arrays, as well as for converting between different sound file formats. Topics: 00:00:00 \\u2013 Introduction 00:01:35 \\u2013 How to Shoot Yourself in the Foot With Python, Part 1 00:11:31 \\u2013 Data Management With Python, SQLite, and SQLAlchemy 00:19:00 \\u2013 Sponsor: Techmeme Ride Home Podcast 00:19:29 \\u2013 Exploring Fractals on a Cloud Computer 00:23:28 \\u2013 The youtube-dl GitHub Repo Has Received a DMCA Takedown Request From the RIAA 00:29:09 \\u2013 Video Course Spotlight 00:30:12 \\u2013 Python Modulo in Practice: How to Use the % Operator 00:36:29 \\u2013 Python For Feature Film 00:44:01 \\u2013 evennia: Online Multiplayer Text-Based Game Framework 00:47:11 \\u2013 Sorting-Algorithms-Visualizer: See How Sorting Algorithm Works With Pygame 00:51:55 \\u2013 Thanks and goodbye Show Links: How to Shoot Yourself in the Foot With Python, Part 1 \\u2013 If you\\u2019re new to Python, you might find yourself confused by some of the situations described in this article. Learn about five mistakes you could make, why they happen, and how to fix them. Data Management With Python, SQLite, and SQLAlchemy \\u2013 In this tutorial, you\\u2019ll learn how to store and retrieve data using Python, SQLite, and SQLAlchemy as well as with flat files. Using SQLite with Python brings with it the additional benefit of accessing data with SQL. By adding SQLAlchemy, you can work with data in terms of objects and methods. Exploring Fractals on a Cloud Computer \\u2013 Fractals might be some of the most interesting mathematical structures to study and to visualize. Learn what fractals are and how to create beautiful fractal animations with Python. The youtube-dl GitHub Repo Has Received a DMCA Takedown Request From the RIAA Python Modulo in Practice: How to Use the % Operator \\u2013 In this tutorial, you\\u2019ll learn about the Python modulo operator (%). You\\u2019ll look at the mathematical concepts behind the modulo operation and how the modulo operator is used with Python\\u2019s numeric types. You\\u2019ll also see ways to use the modulo operator in your own code. Python For Feature Film \\u2013 A look into how Python is used to bring your favorite movies to the big screen. Projects: evennia: Online Multiplayer Text-Based Game Framework Sorting-Algorithms-Visualizer: See How Sorting Algorithm Works With Pygame Additional Links: Python REST APIs and The Well-Grounded Python Developer: Doug Farrell Ep06: Python REST APIs With Flask, Connexion, and SQLAlchemy: Real Python series Python in Maya: Autodesk Using Python - Maya: Autodesk Knowledge Network Ineffective Sorts - xkcd comic stacksort - StackSort connects to StackOverflow, searches for \\u2018sort a list\\u2019 Support the podcast & join our community of Pythonistas\",\"4854\":\"Perfios had recently come to our college to recruit full-time employees for the role of Member of Technical Staff(Software Development Engineer). The interview process was\\u2026 Read More The post Perfios Interview Experience | On-Campus 2021 appeared first on GeeksforGeeks.\",\"1847\":\"MySQL is one of the most popular database management systems (DBMSs) on the market today. It ranked second only to the Oracle DBMS in this year\\u2019s DB-Engines Ranking. As most software applications need to interact with data in some form, programming languages like Python provide tools for storing and accessing these data sources. Using the techniques discussed in this tutorial, you\\u2019ll be able to efficiently integrate a MySQL database with a Python application. You\\u2019ll develop a small MySQL database for a movie rating system and learn how to query it directly from your Python code. By the end of this tutorial, you\\u2019ll be able to: Identify unique features of MySQL Connect your application to a MySQL database Query the database to fetch required data Handle exceptions that occur while accessing the database Use best practices while building database applications To get the most out of this tutorial, you should have a working knowledge of Python concepts like for loops, functions, exception handling, and installing Python packages using pip. You should also have a basic understanding of relational database management systems and SQL queries like SELECT, DROP, CREATE, and JOIN. Free Download: Get a sample chapter from Python Tricks: The Book that shows you Python\\u2019s best practices with simple examples you can apply instantly to write more beautiful + Pythonic code. Comparing MySQL to Other SQL Databases SQL stands for Structured Query Language and is a widely used programming language for managing relational databases. You may have heard of the different flavors of SQL-based DBMSs. The most popular ones include MySQL, PostgreSQL, SQLite, and SQL Server. All of these databases are compliant with the SQL standards but with varying degrees of compliance. Being open source since its inception in 1995, MySQL quickly became a market leader among SQL solutions. MySQL is also a part of the Oracle ecosystem. While its core functionality is completely free, there are some paid add-ons as well. Currently, MySQL is used by all major tech firms, including Google, LinkedIn, Uber, Netflix, Twitter, and others. Apart from a large open source community for support, there are many other reasons for MySQL\\u2019s success: Ease of installation: MySQL was designed to be user-friendly. It\\u2019s quite straightforward to set up a MySQL database, and several widely available third-party tools, like phpMyAdmin, further streamline the setup process. MySQL is available for all major operating systems, including Windows, macOS, Linux, and Solaris. Speed: MySQL holds a reputation for being an exceedingly fast database solution. It has a relatively smaller footprint and is extremely scalable in the long run. User privileges and security: MySQL comes with a script that allows you to set the password security level, assign admin passwords, and add and remove user account privileges. This script uncomplicates the admin process for a web hosting user management portal. Other DBMSs, like PostgreSQL, use config files that are more complicated to use. While MySQL is famous for its speed and ease of use, you can get more advanced features with PostgreSQL. Also, MySQL isn\\u2019t fully SQL compliant and has certain functional limitations, like no support for FULL JOIN clauses. You might also face some issues with concurrent reading and writing in MySQL. If your software has many users writing data to it at once, then PostgreSQL might be a more suitable choice. Note: For a more in-depth comparison of MySQL and PostgreSQL in a real-world context, check out Why Uber Engineering Switched from Postgres to MySQL. SQL Server is also a very popular DBMS and is known for its reliability, efficiency, and security. It\\u2019s preferred by companies, especially in the banking domain, who regularly deal with large traffic workloads. It\\u2019s a commercial solution and is one of the systems that are most compatible with Windows services. In 2010, when Oracle acquired Sun Microsystems and MySQL, many were worried about MySQL\\u2019s future. At the time, Oracle was MySQL\\u2019s biggest competitor. Developers feared that this was a hostile takeover from Oracle with the aim of destroying MySQL. Several developers led by Michael Widenius, the original author of MySQL, created a fork of the MySQL code base and laid the foundation of MariaDB. The aim was to secure access to MySQL and keep it free forever. To date, MariaDB remains fully GPL licensed, keeping it completely in the public domain. Some features of MySQL, on the other hand, are available only with paid licenses. Also, MariaDB provides several extremely useful features that aren\\u2019t supported by MySQL server, like distributed SQL and columnar storage. You can find more differences between MySQL and MariaDB listed on MariaDB\\u2019s website. MySQL uses a very similar syntax to the Standard SQL. There are, however, some notable differences mentioned in the official documentation. Installing MySQL Server and MySQL Connector\\/Python Now, to start working through this tutorial, you need to set up two things: a MySQL server and a MySQL connector. MySQL server will provide all the services required for handling your database. Once the server is up and running, you can connect your Python application with it using MySQL Connector\\/Python. Installing MySQL Server The official documentation details the recommended way to download and install MySQL server. You\\u2019ll find instructions for all popular operating systems, including Windows, macOS, Solaris, Linux, and many more. For Windows, the best way is to download MySQL Installer and let it take care of the entire process. The installation manager also helps you configure the security settings of the MySQL server. On the Accounts and Roles page, you need to enter a password for the root (admin) account and also optionally add other users with varying privileges: MySQL Installer Account Setup Read the full article at https:\\/\\/realpython.com\\/python-mysql\\/ \\u00bb [ Improve Your Python With \\ud83d\\udc0d Python Tricks \\ud83d\\udc8c \\u2013 Get a short & sweet Python Trick delivered to your inbox every couple of days.\",\"3483\":\"Today's shenanigans include Sarah Clatterbuck, Director of Engineering at LinkedIn and all-around awesome person! Also, Jay and David introduce Channels while Jess and Jenn compete to see who knows less about Star Wars.\",\"3463\":\"Stack Exchange Podcast - Episode #31 - Goodbye Jeff by The Stack Overflow Podcast\",\"3291\":\"In this week's episode, the gang talks about terrible, awful, no good, very bad recruiter questions, and how to actually interview developers. Additionally, the gang plays our new game, Startup or Shut Up. Jay doesn't do very well.\",\"4855\":\"I applied for the role of SDE I through Amazon WOW drive 2020. There were a total of 5 rounds (1 coding test + 4\\u2026 Read More The post Amazon WOW Interview Experience appeared first on GeeksforGeeks.\",\"3330\":\"Stack Overflow Podcast - Episode #21 by The Stack Overflow Podcast\",\"927\":\"Are you familiar with the role data engineers play in the modern landscape of data science and Python? Data engineering is a sub-discipline that focuses on the transportation, transformation, and storage of data. This week on the show, David Amos is back, and he\\u2019s brought another batch of PyCoder\\u2019s Weekly articles and projects. Along with the Real Python article on data engineering, we talk about a project where researchers downloaded 10 million Jupyter notebooks from Github to gather insights about the current state of data science technology. We also discuss an article about validating data in Python with the package Cerberus. And this led us to a conversation about a set of coding challenges from Advent of Code. We also cover several other articles and projects from the Python community including, building my own chess engine, the visual guide to NumPy, a free and open-source alternative to SAP, a library for working with STL files and 3D objects, and is Python really a bottleneck? Course Spotlight: Building With Django REST Framework This course will get you ready to build with Django REST Framework. The Django REST framework (DRF) is a toolkit built on top of the Django web framework that reduces the amount of code you need to write to create REST interfaces. Topics: 00:00:00 \\u2013 Introduction 00:01:51 \\u2013 What Is Data Engineering and Is It Right for You? 00:12:07 \\u2013 Building My Own Chess Engine 00:17:52 \\u2013 We Downloaded 10,000,000 Jupyter Notebooks From Github: This Is What We Learned 00:28:12 \\u2013 Video Course Spotlight 00:29:20 \\u2013 Is Python Really a Bottleneck? 00:34:01 \\u2013 Validating Data in Python With Cerberus 00:39:04 \\u2013 NumPy Illustrated: The Visual Guide to NumPy 00:42:54 \\u2013 erpnext: Free and Open Source Alternative to SAP 00:48:49 \\u2013 numpy-stl: Library for Working With STL Files and 3D Objects 00:54:54 \\u2013 Thanks and goodbye Show Links: What Is Data Engineering and Is It Right for You? \\u2014 In this article, you\\u2019ll get an overview of the discipline of data engineering. You\\u2019ll learn what is and isn\\u2019t part of a data engineer\\u2019s job, who data engineers work with, and why data engineers play a crucial role in many industries. Building My Own Chess Engine \\u2014 Writing your own chess engine is a great way to explore computational complexity and combinatorial aspects of programming. Not to mention it\\u2019s pretty fun! Follow along with this reflection on how one coder created his own Chess engine from scratch. We Downloaded 10,000,000 Jupyter Notebooks From Github: This Is What We Learned \\u2014 The JetBrains Datalore team downloaded ten million Jupyter Notebooks and analyzed them to determine things like which languages were the most popular, what kinds of content are in notebook cells, and how consistently notebooks can be reproduced. It\\u2019s a fascinating look into trends in data science technology! Is Python Really a Bottleneck? \\u2014 Python is slow. From one perspective, that is. But what are the true bottlenecks in the data engineering\\/data processing space, and how does Python compare to other technologies when those factors are considered? Validating Data in Python With Cerberus \\u2014 Thanks to an Advent of Code challenge, author Hector Castro was exposed to the Cerberus Python package for data validation. Get a quick introduction to Cerberus and see Hector\\u2019s solution to an Advent of Code challenge in this quick-yet-informative read. NumPy Illustrated: The Visual Guide to NumPy \\u2014 This illustrated guide to NumPy is a great way to learn NumPy or brush up on the package. Full of great visual aides, this tutorial covers all the basics and more! Projects: erpnext: Free and Open Source Alternative to SAP numpy-stl: Library for Working With STL Files and 3D Objects Additional Links: Range - Why Generalists Triumph In a Specialized World: David Epstein Shannon number: Wikipedia article Apple\\u2019s open source chess engine minimum response times: Twitter thread Advent of Code cerberus: Lightweight and Extensible Data Validation Library for Python Cerberus - Greek Mythology: Wikipedia article A Visual Intro to NumPy and Data Representation Generating STL Models With Python Support the podcast & join our community of Pythonistas\",\"575\":\"Virtualisation of hardware and compute resources is a key idea when operating on the cloud. Containers allow us to scale applications faster and easier, while avoiding large initial investments and reducing maintenance costs. More importantly, containers allow DevOps teams to run programs on heterogenous hardware with small start up times and better configuration capabilities than virtual machines. This video is an introduction to the concept of virtual machines and containers. 00:00 The problem 01:00 Purchasing hardware 01:47 Shared compute 02:09 Compute resources 03:19 Virtual Machines 05:36 Containers System design video course: https:\\/\\/get.interviewready.io\\/courses\\/system-design-interview-prep The chapters have architectural diagrams and capacity estimates, along with subtitled videos. Use the coupon code of 'earlybird' to get a 20% discount. References: https:\\/\\/docs.docker.com\\/get-started\\/ https:\\/\\/blog.cloudflare.com\\/cloud-computing-without-containers\\/ https:\\/\\/engineering.fb.com\\/developer-tools\\/zookeeper-twine\\/ https:\\/\\/docs.docker.com\\/get-started\\/overview\\/#docker-architecture You can follow me on: LinkedIn: https:\\/\\/www.linkedin.com\\/in\\/gaurav-sen-56b6a941\\/ Instagram: https:\\/\\/www.instagram.com\\/applepie404\\/ Quora: https:\\/\\/www.quora.com\\/profile\\/Gaurav-Sen-6 Twitter: https:\\/\\/twitter.com\\/gkcs_ #softwareengineering #containers #virtualisation\",\"3352\":\"Jon is the team lead for Public Q&A, which is what we call the platform that hosts the 172 community sites across Stack. Adam is a senior software developer on the community team and a former community manager. Jon describes his job these days as intercepting all the meetings, phone calls, and busy work that would keep the devs on his team from actually writing code. That, and to deliver product on time and to spec, with the hope that a predictable product pipeline is the best way to keep all stakeholders happy. Adam spends most days writing code, although his most productive days are the ones when he deletes more than he creates. He was part of the team that helped ship our recent Dark Mode feature. If you want to learn more about some of our plans for upcoming changes to Stack Overflow and Stack Exchange, tune in Friday for part two of this episode.\",\"3608\":\"This week we sit down with Guillermo Rauch, CEO of Vercel and co-creator of Next.JS. We chat about the front end development trends he is excited about in 2021 and how small improvements in performance, down to a hundred milliseconds, can make a huge difference for e-commerce sites. The title of this week\\u2019s episode comes from a Hacker News thread where Guillermo argued that the complexity of front end performance goes beyond simplifying your stack to bare web primitives. You can find out more about Vercel, which recently raised a $40 million round, on Guillermo\\u2019s blog, where he details what the company has planned for the future. You can find more info on Next.JS here. It\\u2019s a very active tag on Stack Overflow with dozens of new questions a day. Our lifeboat badge for this episode goes to paxdiablo for answering the question: What does .split() return if the string has no match? TRANSCRIPT The post Episode 304: Our stack is HTML and CSS appeared first on Stack Overflow Blog.\",\"3282\":\"In this week's episode, Matt Mullenweg of WordPress joins us to tell us how he built the organization that powers 27% of the internet and more importantly, what it was like going to the same high school as Beyonc\\u00e9. The gang also tells us why the site nav changed colors. We also learn what programming languages are used on the weekends most and what programming languages college students use the most. Finally, Joel tries to Stump Alex Miller while the TSA watches.\",\"216\":\"I don't feel assured.\",\"935\":\"Why is Python pulling in so many new programmers? Maybe some of that growth is from Python being a full-spectrum language. This week on the show we have Michael Kennedy, the host of the podcast \\u201cTalk Python to Me\\u201d. Michael reflects on five years of podcasting about Python, and many of the changes he has seen in the Python landscape. We discuss several stories about the different ways Python is being used, and how that is drawing in many new programmers. Michael covers some potential Python stumbling blocks of Async, the Python Global Interpreter Lock (GIL), building desktop apps, and type checking. We also talk about how podcasts can act as a form of language immersion. Course Spotlight: Editing Excel Spreadsheets in Python With openpyxl In this course, you\\u2019ll learn how to handle spreadsheets in Python using the openpyxl package. You\\u2019ll learn how to manipulate Excel spreadsheets, extract information from spreadsheets, create simple or more complex spreadsheets, including adding styles, charts, and so on. Topics: 00:00:00 \\u2013 Introduction 00:01:34 \\u2013 Changes in the Python landscape over the last 5 years 00:08:09 \\u2013 Changing the perspective from scripts to applications 00:10:48 \\u2013 Python as a full-spectrum language 00:17:13 \\u2013 What are the areas of growth for Python 00:22:09 \\u2013 Stories highlights from Talk Python 00:27:48 \\u2013 Stack Overflow Developer Surveys 00:33:22 \\u2013 Enterprise use and contributions to Python 00:38:04 \\u2013 Video Course Spotlight 00:39:20 \\u2013 A monk learns Python and OpenCV 00:48:18 \\u2013 Things that have been hard to do in Python 00:52:07 \\u2013 How is the GIL part of the problem? 00:56:37 \\u2013 Leave a review, it will help the show, Thanks! 00:57:04 \\u2013 More on Async in Python 01:03:38 \\u2013 Recent courses developed 01:10:05 \\u2013 Who listens to a Python podcast? 01:13:06 \\u2013 What are you excited about in the world of Python? 01:17:46 \\u2013 What do you want to learn next? 01:23:17 \\u2013 What is something you thought you knew about Python, but were wrong about it? 01:26:58 \\u2013 Thanks and goodbye Show Links: Talk Python To Me Brit uni\\u2019s AI algorithm clocks 50 exoplanets hidden in Kepler space \\u2018scope archives Fifty new planets confirmed in machine learning first Apple MainStage: Nine Inch Nails \\u2013 YouTube Stack Overflow Trends: See how technologies have trended over time Stack Overflow: Most Loved, Dreaded, and Wanted Languages Enterprise Software with Python: Mahmoud Hashemi - Talk Python Ep54 Python in digital humanities research: Cornelis van Lit - Talk Python Ep230 PEP 554 \\u2013 Multiple Interpreters in the Stdlib Machine Learning at the Large Hadron Collider: Talk Python Ep144 Python at the Large Hadron Collider and CERN: Talk Python Ep29 12 of the Biggest Spreadsheet Fails in History: Oracle Blog FastAPI: Modern, fast (high-performance), web framework for building APIs with Python Starlette: Lightweight ASGI framework\\/toolkit Unsync: Unsynchronize asyncio by using an ambient event loop in a separate thread Python Type Checking: Real Python Video Course pydanctic: Data validation and settings management using python type annotations Support the podcast & join our community of Pythonistas\",\"1249\":\"Long time no video! https:\\/\\/nnfs.io Channel membership: https:\\/\\/www.youtube.com\\/channel\\/UCfzlCWGWYyIQ0aLC5w48gBQ\\/join Discord: https:\\/\\/discord.gg\\/sentdex Support the content: https:\\/\\/pythonprogramming.net\\/support-donate\\/ Twitter: https:\\/\\/twitter.com\\/sentdex Instagram: https:\\/\\/instagram.com\\/sentdex Facebook: https:\\/\\/www.facebook.com\\/pythonprogramming.net\\/ Twitch: https:\\/\\/www.twitch.tv\\/sentdex\",\"3464\":\"Stack Exchange Podcast - Episode #14 w\\/ Miguel De Icaza by The Stack Overflow Podcast\",\"532\":\"Underpinning the Internet are countless network routers - how do they work out the route to send your data along? Dr Richard G Clegg, Queen Mary University of London explains the Bellman Ford distance vector algorithm. https:\\/\\/www.facebook.com\\/computerphile https:\\/\\/twitter.com\\/computer_phile This video was filmed and edited by Sean Riley. Computer Science at the University of Nottingham: https:\\/\\/bit.ly\\/nottscomputer Computerphile is a sister project to Brady Haran's Numberphile. More at http:\\/\\/www.bradyharan.com\",\"3360\":\"There is a lot to think about when designing trading algorithms, especially in the world of cryptocurrency, where prices can be extremely volatile and limited liquidity means a single trader moving big volume can have a hefty influence on price. Bitcoin is at a record breaking price these days, but investing in it is not for the faint of heart. To learn more, we chat with Li, who is a software engineer at Coinbase. You can find her on Twitter here. If you're interested in learning more about Bitcoin, we would have to recommend Bitcoin Developer. After all, they were kind enough to recommend our Bitcoin Stack Exchange as a key resource.\",\"1251\":\"Neural Networks from Scratch book: https:\\/\\/nnfs.io NNFSiX Github: https:\\/\\/github.com\\/Sentdex\\/NNfSiX Playlist for this series: https:\\/\\/www.youtube.com\\/playlist?list=PLQVvvaa0QuDcjD5BAw2DxE6OF2tius3V3 Neural Networks IN Scratch (the programming language): https:\\/\\/youtu.be\\/eJ1HdTZAcn4 Python 3 basics: https:\\/\\/pythonprogramming.net\\/introduction-learn-python-3-tutorials\\/ Intermediate Python (w\\/ OOP): https:\\/\\/pythonprogramming.net\\/introduction-intermediate-python-tutorial\\/ Mug link for fellow mug aficionados: https:\\/\\/amzn.to\\/3cKEokU Channel membership: https:\\/\\/www.youtube.com\\/channel\\/UCfzlCWGWYyIQ0aLC5w48gBQ\\/join Discord: https:\\/\\/discord.gg\\/sentdex Support the content: https:\\/\\/pythonprogramming.net\\/support-donate\\/ Twitter: https:\\/\\/twitter.com\\/sentdex Instagram: https:\\/\\/instagram.com\\/sentdex Facebook: https:\\/\\/www.facebook.com\\/pythonprogramming.net\\/ Twitch: https:\\/\\/www.twitch.tv\\/sentdex #nnfs #python #neuralnetworks\",\"3298\":\"Stack Overflow Podcast - Episode #23 by The Stack Overflow Podcast\",\"3427\":\"We break down some thoughts on this issue, which came to light after a tweet from Tim Nolet. Later in the episode we talk about the debate raging right now around elections and technology. What role should software play and where is regulation appropriate? Last but not least, we consider what the next US administration might do with regards to regulating big tech. Will they lean towards a European model or continue to be more hands off? Shout out to our lifeboat badge winner of the week, Kin3Tix, for helping to identify good tutorials for SDL 2.0 for C (Not C++) programming.\",\"1243\":\"Code samples: https:\\/\\/github.com\\/Sentdex\\/NEAT-samples Neat-Python: https:\\/\\/neat-python.readthedocs.io\\/en\\/latest\\/ Channel membership: https:\\/\\/www.youtube.com\\/channel\\/UCfzlCWGWYyIQ0aLC5w48gBQ\\/join Discord: https:\\/\\/discord.gg\\/sentdex Support the content: https:\\/\\/pythonprogramming.net\\/support-donate\\/ Twitter: https:\\/\\/twitter.com\\/sentdex Instagram: https:\\/\\/instagram.com\\/sentdex Facebook: https:\\/\\/www.facebook.com\\/pythonprogramming.net\\/ Twitch: https:\\/\\/www.twitch.tv\\/sentdex\",\"1818\":\"Citrix visited our campus for a software role. Online test was conducted on hackerrank platform and there were 2 coding questions and 40 MCQs based\\u2026 Read More The post Citrix Interview Experience (On-Campus) appeared first on GeeksforGeeks.\",\"3558\":\"The gang tries to give tech support to Grandma Maebeline. It doesn't go well.\",\"3519\":\"Stack Overflow Podcast - Episode #58 by The Stack Overflow Podcast\",\"3559\":\"Today we welcome Jonathan Lipps, Dir. of Open Source at Sauce Labs, to chat (and sing) about some of the philosophies behind the tech that we all use every day. Also Stack Overflow PM Joe Friend is here to continue the conversation about improving the user experience on SO.\",\"3339\":\"Stack Overflow Podcast - Episode #60 by The Stack Overflow Podcast\",\"955\":\"Have you started to use generators in Python? Are you unsure why you would even use one over a regular function? How do you use the special \\u201csend\\u201d method and the \\u201cyield from\\u201d syntax? This week on the show, we have Reuven Lerner to talk about his PyCon Africa 2020 talk titled \\u201cGenerators, coroutines, and nanoservices.\\u201d Reuven helps developers around the world become more fluent in Python. We talk about some of his teaching techniques and also how he continues to learn. Reuven is a believer in the continued practice of Python through exercises. We discuss his book \\u201cPython Workout\\u201d and his Weekly Python Exercise courses. Course Spotlight: Python Generators 101 In this step-by-step course, you\\u2019ll learn about generators and yielding in Python. You\\u2019ll create generator functions and generator expressions using multiple Python yield statements. You\\u2019ll also learn how to build data pipelines that take advantage of these Pythonic tools. Topics: 00:00:00 \\u2013 Introduction 00:01:38 \\u2013 Reuven\\u2019s web site: Teaching Python and Data Science around the world 00:03:39 \\u2013 Training remotely and screen-time overload 00:07:03 \\u2013 Info-tainment and sparking engagement 00:11:05 \\u2013 PyCon Africa 2020 - Generators, Coroutines, and Nanoservices 00:13:34 \\u2013 Using dis() - disassembler for Python bytecode 00:15:09 \\u2013 Exceptions as signals, not exclusively for errors 00:17:39 \\u2013 What makes generator functions different? 00:22:05 \\u2013 Using .send() and creating a coroutine 00:23:39 \\u2013 Sponsor: Scout APM 00:24:40 \\u2013 Stopping the generator with .throw() 00:26:28 \\u2013 Additional uses for generators 00:30:03 \\u2013 Python Workout: 50 ten-minute exercises 00:34:22 \\u2013 A combination of techniques and sources for continued learning 00:40:15 \\u2013 Weekly Python Exercise 00:42:02 \\u2013 Video Course Spotlight 00:43:08 \\u2013 Bachelor degree in CS, but a Doctorate in learning sciences 00:48:26 \\u2013 What are additional techniques you use to keep learning? 00:50:18 \\u2013 Teaching is a great way to keep learning 00:51:28 \\u2013 What areas of data science are you focusing on? 00:53:22 \\u2013 The Business of Freelancing: podcast 00:56:26 \\u2013 What is something you thought you knew about Python, but were wrong about? 00:59:24 \\u2013 What is something you are excited about in the world of Python? 01:02:18 \\u2013 Conferences and user groups 01:05:03 \\u2013 Thanks and goodbye Show Links: Teaching Python and Data Science around the world: Reuven\\u2019s Training Site Reuven\\u2019s newsletter Generators, Coroutines, and Nanoservices: Pycon Africa 2020 PEP 255 \\u2013 Simple Generators: Python docs How to Use Generators and yield in Python: Real Python article dis \\u2014 Disassembler for Python bytecode: Python docs Exception Handling: Python docs Python Workout : 50 ten-minute exercises - Manning Weekly Python Exercise Course Luis Serrano: machine learning & math made easy - YouTube channel The Business of Freelancing: Podcast RPP Episode 29: Resolving Package Dependencies With the New Version of Pip Sign-up for pip UX Studies! Support the podcast & join our community of Pythonistas\",\"3473\":\"To start things off, we talk about the launch of Articles, a new content type for Stack Overflow Teams that lets you write longer, subjective pieces. Sometimes it's best to share knowledge through Q&A, but other times you've got complicated, narrative, DevOps recipes or a policy paper and FAQ. Now your knowledge artifacts can all live in one place. \\\"The FAQ is the great folk form of the internet\\\" - quotable moments featuring Paul Ford. If you're interested in another cut at this old saw, Mailchimp.com\\/developer is Postlight's take on what developer docs should look like. Sara is convinced it's all about the left nav. Speaking of convictions, a conflict is tearing Sara's home apart. Ben and Paul step in to save her marriage. The question at hand: should managers of developers EVER make technical decisions? Finally, Paul talks about his experience using Google Cloud Run to build a fun little tool called Ephemeralist. It pulls in random images from public domain collections hosted by museums and archives. Use it to take a break from the negativity of social media or the news. Also, revel in the joy of Paul's neologism, the Browseulator. It recently brought me this little gem.\",\"3438\":\"Stack Exchange Podcast - Episode #66 - Thank You For Saying Words To Us by The Stack Overflow Podcast\",\"3417\":\"Stack Exchange Podcast - Episode #39 - The One with Wil Wheaton by The Stack Overflow Podcast\",\"3296\":\"Tik Tok has been accused of spying on users and siphoning up their data, although it's important to point out the same criticism has been leveled at many American tech giant's apps and web services. In working to address security flaws, it seemed that Tik Tok programming was just as often sloppy as malicious. All that hasn't stopped reports from surfacing that Microsoft might be wiling to pay as much as $30 billion to acquire Tik Tok, at which point it intends to \\\"transfer all of TikTok\\u2019s code from China to the U.S. within one year.\\\" This code just needs a supportive home. Speaking of moving to new digs, according to a recent survey, two out of three techies in the San Francisco Bay area say they are considering moving if their employers allow it. Will we see the rise of a complex system of salaries that fluctuate not just by rank and performance, but by proximity to the home office? Will Silicon Valley's once unshakable grip on the cutting edge of startup culture and product acumen start to wane if developers flee for remote working locales in more affordable areas? Can you turn back the clock once they can acquire bigger homes or enjoy more of the great outdoors during a pandemic that doesn't yet have a firm end date.\",\"3442\":\"Stack Exchange Podcast - Episode #65 - The Word Has Two Meanings, You See by The Stack Overflow Podcast\",\"945\":\"Do you want to get started with web scraping using Python? Are you concerned about the potential legal implications? What are the tools required and what are some of the best practices? This week on the show we have Kimberly Fessel to discuss her excellent tutorial created for PyCon 2020 online titled \\u201cIt\\u2019s Officially Legal so Let\\u2019s Scrape the Web.\\u201d We discuss getting started with web scraping, and cover tools and techniques. Kimberly gives advice on finding elements inside of the html, and techniques for cleaning your data. She also notes a recent change to the legal landscape regarding scraping the web. Kimberly is a Senior Data Scientist at Metis Data Science Bootcamp in New York City. She holds a Ph.D. in applied mathematics. We talk about her switch from academia to data science, and discuss her passion for data storytelling and visualizations. Course Spotlight: Defining Main Functions in Python This course will get you up to speed with defining a starting point for the execution of a program, and helps you to understand what goes into the main() function. Prepare for a deep dive as you go through the sections. It\\u2019s a worthy investment of your time to understand this vital entry point for your Python scripts and applications! Topics: 00:00:00 \\u2013 Introduction 00:01:31 \\u2013 Kimberly\\u2019s background and Metis Data Science Bootcamp 00:02:19 \\u2013 NLP and work in advertising 00:03:27 \\u2013 Changes in the legality of web scraping 00:06:12 \\u2013 What are good projects for web scraping? 00:06:56 \\u2013 Tools to start web scraping 00:07:51 \\u2013 How to find the elements you want? 00:09:00 \\u2013 How much HTML should you know? 00:10:49 \\u2013 Inspecting elements in the browser 00:14:30 \\u2013 What are good sites to practice on? 00:16:20 \\u2013 Pausing between requests 00:19:02 \\u2013 Saving as you go 00:20:54 \\u2013 Real Python Video Course Spotlight 00:21:55 \\u2013 Navigating the DOM 00:23:10 \\u2013 Data cleaning and formatting 00:28:26 \\u2013 Dynamic sites and Selenium 00:32:16 \\u2013 Scrapy 00:33:55 \\u2013 PyOhio 2020 00:35:40 \\u2013 Transition out of academia 00:38:40 \\u2013 What are you excited about in the world of Python? 00:41:05 \\u2013 What do you want to learn next in Python? 00:48:00 \\u2013 What is a less known Python tip or trick? 00:49:17 \\u2013 Thanks and Goodbye Show Links: Kimberly Fessel, PHD - Blog Metis: Data Science Training It\\u2019s Officially Legal so Let\\u2019s Scrape the Web: PyCon 2020 online - Tutorial Victory! Ruling in hiQ v. Linkedin Protects Scraping of Public Data: EFF.org Computer Fraud and Abuse Act - Wikipedia Article Box Office Mojo Sports Reference | Sports Stats, fast, easy, and up-to-date Springfield! Springfield! - TV & Movie Scripts - Archive.org Jupyter Notebook: An Introduction - Real Python Article The Python pickle Module: How to Persist Objects in Python - Real Python Article Beautiful Soup: Build a Web Scraper With Python - Real Python Article Making HTTP Requests With Python - Real Python Video Course Natural Language Processing With spaCy in Python - Real Python Article Delorean: Time Travel Made Easy Maya: Datetimes for Humans Regular Expressions: Regexes in Python (Part 1) - Real Python Article Selenium: Automates browsers. That\\u2019s it! Scrapy: Framework for extracting the data you need from websites PyOhio 2020 ODSC: Open Data Science Conference Slides from Kimberly\\u2019s talk - Level Up: Fancy NLP with Straightforward Tools Tonks: A general purpose deep learning library Tonks: Building One (Multi-Task) Model to Rule Them All! - Medium Article Plotly | Dash geoplotlib: Python toolbox for visualizing geographical data and making map GeoPandas: Make working with geospatial data in Python easier Altair: Declarative Visualization in Python Understanding the Transform Function in Pandas: Practical Business Python Javascript charting detour: Down and Up: A Puzzle Illustrated with D3.js - Kimberly\\u2019s blog d3js - Data-Driven Documents Crossfilter: Fast Multidimensional Filtering for Coordinated Views dc.js - Dimensional Charting Javascript Library Support the podcast & join our community of Pythonistas\",\"1836\":\"Game programming is a great way to learn how to program. You use many tools that you\\u2019ll see in the real world, plus you get to play a game to test your results! An ideal game to start your Python game programming journey is rock paper scissors. In this tutorial, you\\u2019ll learn how to: Code your own rock paper scissors game Take in user input with input() Play several games in a row using a while loop Clean up your code with Enum and functions Define more complex rules with a dictionary Free Bonus: 5 Thoughts On Python Mastery, a free course for Python developers that shows you the roadmap and the mindset you\\u2019ll need to take your Python skills to the next level. What Is Rock Paper Scissors? You may have played rock paper scissors before. Maybe you\\u2019ve used it to decide who pays for dinner or who gets first choice of players for a team. If you\\u2019re unfamiliar, rock paper scissors is a hand game for two or more players. Participants say \\u201crock, paper, scissors\\u201d and then simultaneously form their hands into the shape of a rock (a fist), a piece of paper (palm facing downward), or a pair of scissors (two fingers extended). The rules are straightforward: Rock smashes scissors. Paper covers rock. Scissors cut paper. Now that you have the rules down, you can start thinking about how they might translate to Python code. Play a Single Game of Rock Paper Scissors in Python Using the description and rules above, you can make a game of rock paper scissors. Before you dive in, you\\u2019re going to need to import the module you\\u2019ll use to simulate the computer\\u2019s choices: import random Awesome! Now you\\u2019re able to use the different tools inside random to randomize the computer\\u2019s actions in the game. Now what? Since your users will also need to be able to choose their actions, the first logical thing you need is a way to take in user input. Take User Input Taking input from a user is pretty straightforward in Python. The goal here is to ask the user what they would like to choose as an action and then assign that choice to a variable: user_action = input(\\\"Enter a choice (rock, paper, scissors): \\\") This will prompt the user to enter a selection and save it to a variable for later use. Now that the user has selected an action, the computer needs to decide what to do. Make the Computer Choose A competitive game of rock paper scissors involves strategy. Rather than trying to develop a model for that, though, you can save yourself some time by having the computer select a random action. Random selections are a great way to have the computer choose a pseudorandom value. You can use random.choice() to have the computer randomly select between the actions: possible_actions = [\\\"rock\\\", \\\"paper\\\", \\\"scissors\\\"] computer_action = random.choice(possible_actions) This allows a random element to be selected from the list. You can also print the choices that the user and the computer made: print(f\\\"\\\\nYou chose {user_action}, computer chose {computer_action}.\\\\n\\\") Printing the user and computer actions can be helpful to the user, and it can also help you debug later on in case something isn\\u2019t quite right with the outcome. Determine a Winner Read the full article at https:\\/\\/realpython.com\\/python-rock-paper-scissors\\/ \\u00bb [ Improve Your Python With \\ud83d\\udc0d Python Tricks \\ud83d\\udc8c \\u2013 Get a short & sweet Python Trick delivered to your inbox every couple of days.\",\"3453\":\"Sophie founded Rest of World in 2019 after a decade of living and working across Asia, Africa & the Middle East, and with companies like Uber and Xiaomi. She graduated from Stanford Graduate School of Business, Harvard Kennedy School and Princeton University. Sophie is based in New York. Read why she started this publication in her founder\\u2019s note. You can subscribe to Rest of World's newsletter here. In this week's episode we talk about Okash, a peer-to-peer lending app that show what happens when you gamify public social shaming. We explore honjok, a South Korean sub-culture that emphasizes a movement away from ambitious professionalism and towards a more stoic loner lifestyle. In some ways, the apps, services, and online communities that formed around this tribe perfectly predicted what many people are experiencing in 2020. \\\"The accidental pioneers of a lifestyle that has been forced on all of us,\\\" as Sophie explains. And finally, we explore what it takes to break into the world of digital finance in Indonesia, where a board of clerics must certify that your code halal - consistent with Islamic religion and law - before you can break into a market of more than 220 million potential customers.\",\"1829\":\"What are webhooks? Webhooks allow different web applications and services to communicate with each other. In this course for beginners, you will learn everything you need to know about webhooks. You will learn to implement webhooks with and without code. \\ud83d\\udcbb Teacher notes and code: https:\\/\\/github.com\\/twiliodeved\\/webhooks-course \\u270f\\ufe0f Course developed by Craig Dennis, who is a Developer Educator at Twilio. \\u2b50\\ufe0f Course Contents \\u2b50\\ufe0f Unit 1 - Integration \\u2328\\ufe0f Video 1 - Welcome (00:00:00) \\u2328\\ufe0f Video 2 - Defining Events, Handlers, and Hooks (00:04:51) \\u2328\\ufe0f Video 3 - Lightbulb moment (00:09:12) \\u2328\\ufe0f Video 4 - Finding Inspiration (00:17:11) Unit 2 - Capturing Data from a Webhook \\u2328\\ufe0f Video 1 - Diving into Webhooks (00:23:33) \\u2328\\ufe0f Video 2 - Explore the Request (00:28:28) \\u2328\\ufe0f Video 3 - Using the Data (00:37:34) \\u2328\\ufe0f Video 4 - Developing Locally (00:46:32) \\u2328\\ufe0f Video 5 - Opening a Tunnel (00:57:34) \\u2328\\ufe0f Video 6 - Serverless (01:17:17) Unit 3 - Hooking it altogether \\u2328\\ufe0f Video 1 - Introducing the projects (01:34:52) \\u2328\\ufe0f Video 2 - Text Affirmation (01:38:33) \\u2328\\ufe0f Video 3 - Setting up the flow (01:44:45) \\u2328\\ufe0f Video 4 - Handle things locally (01:56:34) \\u2328\\ufe0f Video 5 - Deploying your serverless function (02:11:46) \\u2328\\ufe0f Video 6 - That\\u2019s a Wrap (02:22:53) -- Learn to code for free and get a developer job: https:\\/\\/www.freecodecamp.org Read hundreds of articles on programming: https:\\/\\/freecodecamp.org\\/news And subscribe for new videos on technology every day: https:\\/\\/youtube.com\\/subscription_center?add_user=freecodecamp\",\"524\":\"Millions of lines of code - how do you keep them bug free? Facebook's Professor Peter O'Hearn talks us through \\\"Infer\\\" their code checker which dallies with the idea of undecidability. EXTRA BITS: https:\\/\\/youtu.be\\/7rYr6EQS7Co Turing & The Halting Problem: https:\\/\\/www.youtube.com\\/watch?v=macM_MtS_w4 How Turing Machines Work: https:\\/\\/www.youtube.com\\/watch?v=dNRDvLACg5Q https:\\/\\/www.facebook.com\\/computerphile https:\\/\\/twitter.com\\/computer_phile This video was filmed and edited by Sean Riley. Computer Science at the University of Nottingham: https:\\/\\/bit.ly\\/nottscomputer Computerphile is a sister project to Brady Haran's Numberphile. More at http:\\/\\/www.bradyharan.com\",\"3443\":\"Stack Overflow Podcast - Episode #30 by The Stack Overflow Podcast\",\"1816\":\"Given three arrays A[], B[] and C[] of size N and three positive integers X, Y, and Z, the task is to find the maximum\\u2026 Read More The post Maximize sum by selecting X different-indexed elements from three given arrays appeared first on GeeksforGeeks.\",\"522\":\"Used by millions every day we're dissecting mice today. Dr Steve Bagley takes us through the workings, starting with a ball-powered rodent. https:\\/\\/www.facebook.com\\/computerphile https:\\/\\/twitter.com\\/computer_phile This video was filmed and edited by Sean Riley. Computer Science at the University of Nottingham: https:\\/\\/bit.ly\\/nottscomputer Computerphile is a sister project to Brady Haran's Numberphile. More at http:\\/\\/www.bradyharan.com\",\"4972\":\"On today\\u2019s episode we chat about exercise bikes as cybersecurity risks, using your bitcoin mining rig to heat your home, and submerging servers for fun and profit. Episode Notes Joe Biden just wants to ride his Peleton, but equipment connected to WiFi with a camera and microphone can pose a real security risk. If you\\u2019ve got a chicken coop or greenhouse that needs a little warmth this winter, maybe team it up with your gaming PC or bitcoin mining rig, which tend to give off a lot of heat. Speaking of heat, we dive into datacenters that were sunk under the ocean in an effort to create more economically efficient and environmentally friendly computing. Our favorite meme of the week, a Heroku app that puts a chilly Bernie Sanders anywhere in the world. Our lifeboat badge winner is Lukas Kalbertodt, who answered the question: What\\u2019s the most efficient way to insert an element into a sorted vector? TRANSCRIPT The post Episode 306: Gaming PCs to heat your home, oceans to cool your data centers appeared first on Stack Overflow Blog.\",\"891\":null,\"914\":\"So you built a web application in Python. Now how are you going to authorize users? Security goes beyond authentication. Who gets to do what, where, and when? This week on the show, we have Sam Scott, chief technology officer from Oso. Oso is an open-source policy engine for authorization that you embed in your application. Sam talks about the typical security and authorization challenges developers face. He discusses building an engine on top of your existing Flask or Django app. We cover the concept of policies, business logic, and some common paradigms. Course Spotlight: Exploring HTTPS and Cryptography in Python In this course, you\\u2019ll gain a working knowledge of the various factors that combine to keep communications over the Internet safe. You\\u2019ll see concrete examples of how to keep information secure and use cryptography to build your own Python HTTPS application. Topics: 00:00:00 \\u2013 Introduction 00:01:32 \\u2013 Sam\\u2019s math background 00:03:11 \\u2013 What is Sage? 00:04:24 \\u2013 What is post-quantum cryptography? 00:05:19 \\u2013 Getting Oso started, authentication vs authorization. 00:10:01 \\u2013 What is a policy engine? 00:12:57 \\u2013 Confusing business logic with authorization 00:17:09 \\u2013 Sponsor: Techmeme Ride Home Podcast 00:17:38 \\u2013 Pip installing Oso, adding to Flask or Django 00:21:15 \\u2013 What are common security concerns for developers? 00:25:41 \\u2013 What are security concerns users have? 00:27:14 \\u2013 What are the worst security issues you\\u2019ve found in a Python app? 00:30:12 \\u2013 Video Course Spotlight 00:31:32 \\u2013 What are other common authorization \\u201cgotchas\\u201d? 00:37:16 \\u2013 Additional Oso resources 00:39:36 \\u2013 What does writing in Polar look like? 00:42:00 \\u2013 Are there authorization paradigms? 00:46:02 \\u2013 What are you excited about in the world of Python? 00:50:05 \\u2013 What do you want to learn next? 00:50:49 \\u2013 Thanks and goodbye Show Links: oso on twitter Sam on twitter oso: an open source policy engine for authorization oso Django Docs oso Flask Docs oso Python Library Docs oso Source Code oso Debugger Docs Adding authorization to your Flask app with oso: oso blog Building a Django app with data access controls in 30 min: oso blog Generating Django Queryset filters from oso policies: oso blog Polar Adventure: a text-based adventure game written in Polar Lighting talk on access controls: oso blog SageMath: A free open-source mathematics software system Post-quantum cryptography: Wikipedia article 327: Exploits of a Mom : XKCD Comic Little Bobby Tables: Explain XKCD Snyk: Developer-first Cloud Native Application Security Geekle\\u2019s python Universe WEB Edition: 19 November 2020 WebAssembly(WASM) Support the podcast & join our community of Pythonistas\",\"1814\":\"Given a positive integer N, the task is to find the permutation of first N natural numbers such that the product of Bitwise AND(&) of\\u2026 Read More The post Permutation of first N natural numbers having product of Bitwise AND of adjacent pairs exceeding 0 appeared first on GeeksforGeeks.\",\"3511\":\"Sara reveals that she won a $500 gift card at a MongoDB hackathon, building an app that removed mustaches from people's pictures. This was many years ago, and no we were not paid in JetBlue gift cards to have Eliot on the show, although MongoDB is a client of Stack Overflow in other areas. Mongo comes from humongous, cause, ya know, scale. That, plus HumongousDB.com was already taken and is a real mouthful to say. Eliot talks about the frustrations he and his co-founder, Dwight Merriman, experienced while working together at DoubleClick and ShopWiki. DoubleClick began as a New York City ad tech company and evolved into the heart of Google\\u2019s real-time ad business after being acquired. Frustrations with the database systems available at both these companies led the pair to decide it was time for a better mousetrap. Today, MongoDB is a public company worth north of $7 billion and a staff of more than 1900 people We chat about why relational databases are still the core of computer science education in high school and college across the United States, and whether or not this will ever change. During the show we skimmed some of the latest questions on Stack Overflow related to Mongo. Eliot took it back to his team and Tom Hollander, the PM for Mongo's chart product, delivered a great answer! Can you believe this website is free?\",\"3264\":\"Thanks to misof for writing the editorial. BuyOneGetOneFree Suppose we order all the items according to their cost. Let X be the most expensive item of all. Clearly, we cannot get X for free: if we pair it with any other item, the cost of the pair will still be the cost of X. Now that we know that we have to pay for X, we can do it immediately. Which item should we pair with X? It should be quite obvious that we want the second most expensive item, Y. (For a formal proof, consider any other solution and think what happens if you alter it by swapping Y and the item that was paired with X in that solution.) Thus, now we know that we want to buy the two most expensive items together. Once we do that, we can repeat the thought process and determine that we want to buy the next two most expensive items together. And so on. Sample implementation: public int buy(int[] prices) { Arrays.sort(prices); int answer = 0; for (int i=prices.length-1; i\\/preh4\\/h4pre class=\\\"brush: plain; light: false; title: ; toolbar: true; notranslate\\\"\\/preh4\\/h4h4\\/h4= k\",\"605\":\"Book a mock interview or coaching session with a Microsoft engineer as early as tomorrow on interviewing.io! Sign up here: https:\\/\\/interviewing.io\\/signup?utm_source=youtube.com&utm_medium=referral&utm_campaign=video_link Check out the feedback by the Microsoft interviewer and the full transcript on https:\\/\\/interviewing.io\\/recordings\\/JavaScript-Microsoft-12\\/ Disclaimer: All interviews are shared with explicit permission from the interviewer and the interviewee, and all interviews are anonymous. interviewing.io has the sole right to distribute this content.\",\"919\":\"One of the best ways to learn something well is to teach it. This week on the show, we have Kelly Schuster-Paredes and Sean Tibor from the Teaching Python podcast. Sean and Kelly teach middle school students Python and share their art and science of teaching Python on their podcast. They wanted to come on the show to talk about the Real Python articles, quizzes, and other resources they use when teaching their students. We also talk about teaching students how to research topics and use things like advanced search with Google. We discuss using cloud-based tools like collaborative notebooks and some of the core Python concepts students need for a solid foundation. Kelly and Sean also talk about how the changes to teaching over the past year have had some unexpected benefits. They also talk about a few recent guests and topics covered on their podcast. Course Spotlight: Basic Data Types in Python In this course, you\\u2019ll learn the basic data types that are built into Python, like numbers, strings, and Booleans. You\\u2019ll also get an overview of Python\\u2019s built-in functions. Topics: 00:00:00 \\u2013 Introduction 00:02:17 \\u2013 Why did you pick Python for the curriculum? 00:05:48 \\u2013 Is there a particular IDE or editor you use when teaching? 00:07:35 \\u2013 Is it helpful using cloud based tools with students? 00:10:02 \\u2013 What Real Python resources are you using in the classroom? 00:11:48 \\u2013 Using Google to find good resources 00:18:31 \\u2013 Sponsor: Linode 00:19:16 \\u2013 Other Real Python materials 00:27:58 \\u2013 What video content works with students? 00:30:33 \\u2013 Video Course Spotlight 00:31:30 \\u2013 Recent topics and guests on Teaching Python 00:34:39 \\u2013 Are code samples helpful when teaching? 00:37:06 \\u2013 Using long form tutorials to demonstrate their learning 00:40:00 \\u2013 What are you excited about in the world of Python (Sean)? 00:41:02 \\u2013 What do you want to learn next (Sean)? 00:41:57 \\u2013 What are you excited about in the world of Python (Kelly)? 00:45:28 \\u2013 What do you want to learn next (Kelly)? 00:46:59 \\u2013 Other considerations in selecting Python over Javascript or Swift 00:48:50 \\u2013 Thanks and goodbye Show Links: Teaching Python Podcast Communicating With Video For Effective Learning: E44 Teaching Python Code with Mu: a simple Python editor for beginner programmers Welcome To Colaboratory: Google Colaboratory PyCharm: The Python IDE for Professional Developers Microsoft Visual Studio Code: Open Source IDE Writing Comments in Python (Guide): Real Python article Google Advanced Search Google Advanced Image Search The Beginner\\u2019s Guide to Python Turtle: Real Python article Basic Data Types in Python: Real Python article Python Quizzes: Real Python sentdex: YouTube channel Lists and Tuples in Python: Real Python video course Teaching the Full Stack with Ali Spittel (@alispittel): E52 Teaching Python Making Projects Happen with Eric Matthes (@ehmatthes): E54 Teaching Python Traditional Face Detection With Python: Real Python article SimPy: Simulating Real-World Processes With Python: Real Python article Understanding the Python Mock Object Library: Real Python article Django Girls Beyond the Basic Stuff with Python - Al Sweigart Going Beyond the Basic Stuff With Python and Al Sweigart: E33 Real Python Podcast Developing for Mobile, the Web, and Desktop with Russell Keith-Magee (@freakboy3742): E53 Teaching Python Create Cross-Platform Python GUI Apps With BeeWare: E22 Real Python Podcast BeeWare: Write once. Deploy everywhere. Support the podcast & join our community of Pythonistas\",\"947\":\"Would you like to run your Python code in the cloud without having to become an infrastructure engineer? Do you want to have Python functions that run when triggered by specific events? This week on the show we have Anthony Chu to discuss serverless computing and running python functions in the cloud. Anthony Chu is program manager for Microsoft\\u2019s Azure Functions. We discuss the advantages of serverless computing over virtual machines, containers, and other infrastructure options for running your Python code in the cloud. Anthony also talks about the types of projects suited for this type of platform, including data science, machine learning, and creating APIs. Course Spotlight: A Beginner\\u2019s Guide to Pip This course is a great introduction to pip for those who are getting started Python, and for those who want to understand more about what is happening when you install new packages into your environment. It\\u2019s a worthy investment of your time to understand the fundamentals of pip. Topics: 00:00:00 \\u2013 Introduction 00:01:22 \\u2013 Microsoft Build 2020 00:02:16 \\u2013 What is serverless computing? 00:06:59 \\u2013 Using VSCode for serverless development 00:08:54 \\u2013 What is blob storage? 00:12:08 \\u2013 Adding Python to Azure Functions 00:16:25 \\u2013 What are common serverless projects? 00:20:32 \\u2013 Serverless containers 00:24:00 \\u2013 Video Course Spotlight 00:25:28 \\u2013 Accessing from a CLI 00:29:31 \\u2013 Versions of Python available 00:32:50 \\u2013 Running from your own Kubernetes cluster 00:36:03 \\u2013 Advantages and disadvantages to using serverless 00:38:31 \\u2013 Other services 00:39:25 \\u2013 Durable functions for Python 00:51:04 \\u2013 What are you excited about in the world of Python? 00:52:42 \\u2013 What do you want to learn next in Python? 00:53:56 \\u2013 Thanks and goodbye Show Links: Azure Functions Quickstart: Create a function in Azure using Visual Studio Code Easy Data Processing With Azure Fun - Tania Allard PyCon 2020 Online Machine learning with Python using serverless Azure Functions - Microsoft Ignite Azure Functions YouTube Channel Azure Functions Blog Stateful Programming Models in Serverless Functions - Durable Functions - YouTube Visual Studio Code Flask-SocketIO An Intro to Threading in Python - Real Python Article Support the podcast & join our community of Pythonistas\",\"5774\":\"How many times have you been asked to share 'anonymous' location data? Andrea shows just how simple it can be to work out who's who. Andrea Gadotti is a researcher in the Computational Privacy Group at Imperial College London (https:\\/\\/cpg.doc.ic.ac.uk\\/) NYT Article: https:\\/\\/www.nytimes.com\\/interactive\\/2019\\/12\\/19\\/opinion\\/location-tracking-cell-phone.html Papers referenced by Andrea: Unique in the Crowd: The privacy bounds of human mobility (https:\\/\\/www.nature.com\\/articles\\/srep01376) Where You Are Is Who You Are: User Identification by Matching Statistics (https:\\/\\/arxiv.org\\/abs\\/1512.02896v1) https:\\/\\/www.facebook.com\\/computerphile https:\\/\\/twitter.com\\/computer_phile This video was filmed and edited by Sean Riley. Computer Science at the University of Nottingham: https:\\/\\/bit.ly\\/nottscomputer Computerphile is a sister project to Brady Haran's Numberphile. More at http:\\/\\/www.bradyharan.com\",\"1813\":\"The eQ Technologic visited our college for campus hiring. Online Test: This round consists of 14 logical questions that are to be solved in 14\\u2026 Read More The post eQ Technologic Interview Experience | On-Campus 2020(Virtual) appeared first on GeeksforGeeks.\",\"1246\":\"Get it here: https:\\/\\/www.nvidia.com\\/en-us\\/autonomous-machines\\/embedded-systems\\/jetson-nano\\/education-projects\\/ Channel membership: https:\\/\\/www.youtube.com\\/channel\\/UCfzlCWGWYyIQ0aLC5w48gBQ\\/join Discord: https:\\/\\/discord.gg\\/sentdex Support the content: https:\\/\\/pythonprogramming.net\\/support-donate\\/ Twitter: https:\\/\\/twitter.com\\/sentdex Instagram: https:\\/\\/instagram.com\\/sentdex Facebook: https:\\/\\/www.facebook.com\\/pythonprogramming.net\\/ Twitch: https:\\/\\/www.twitch.tv\\/sentdex\",\"3465\":\"Stack Overflow Podcast - Episode #02 by The Stack Overflow Podcast\",\"595\":\"Book a mock interview or coaching session with a LinkedIn engineer as early as tomorrow on interviewing.io! Sign up here: https:\\/\\/interviewing.io\\/signup?utm_source=youtube.com&utm_medium=referral&utm_campaign=video_link Check out the feedback by the LinkedIn interviewer and the full transcript on https:\\/\\/interviewing.io\\/recordings\\/JavaScript-LinkedIn-6\\/ Disclaimer: All interviews are shared with explicit permission from the interviewer and the interviewee, and all interviews are anonymous. interviewing.io has the sole right to distribute this content.\",\"3843\":\"Given an integer D, the task is to find the count of all possible positive integers N such that reverse(N) = N + D. Examples:\\u2026 Read More The post Count of integers having difference with its reverse equal to D appeared first on GeeksforGeeks.\",\"3319\":\"Echeruo's new venture is called Love and Magic, a startup studio that helps companies of all sizes maximize their ability to innovate. For anyone that has an idea they have been hoping to turn into a startup, Echeruo and his collaborators just introduced the Startup School of Alchemy. It's being taught at WeWork and Princeton University. It offers a six-week curriculum designed to help aspiring entrepreneurs find product-market fit.Apply with the code \\\"stackoverflow\\\" and you get $1000 off the course, a 40% discount. Echeruo says his time working in finance and with Microsoft Excel was what gave him the ability to think of how data from maps could be optimized by an algorithm and built into a useful mobile app. For those who don't know, our co-founder and Chairmam, Joel Spolsky, was part of the team at Microsoft that built Excel. Here is legendary 2015 talk, You Suck at Excel, where he organizes a spreadsheet to keep track of what he pays his Pokemon, ahem,I mean, uh, employees. You can take a deeper dive into the backstory of how Chinedu built HopStop below, related in his own words. I've always had difficulty with directions. When I grew up in Nigeria, I remember getting lost in my own house. It wasn\\u2019t like it was a mansion, it was a four-bedroom house. So you can imagine how I felt when I got to NYC and had to get around with the subway and bus system! I remember walking up once to one of those blown up maps in the subway station. My nose was a feet away from the dust laden map. The subway lines looked like tangled noodles. Complexity galore! New Yorkers used to walk around with these pocket guides\\u2014Hagstrom maps. I was going on a date in the Lower East Side. It doesn\\u2019t have the grid like the rest of the city. I got lost and was very late getting to the bar.I can't remember how, the date went but I remember what I did first thing next morning. I walked over to the subway station, grabbed a subway MAP and laid it on the floor and tried to figure it out. There\\u2019s driving directions. But there weren\\u2019t subway directions. So I was solving my own problems. I was looking for the complete directions\\u2014leave your house, turn left, go into this particular entrance, get on this train, get off at this station, use this exit. Because I was, in a lot of ways, the ultimate user, we ended up building a product that solved the complete problem\\u2014get me from where I am now to where I need to be. I was non-technical, I worked for a hedge fund. I may have been thinking algorithmically, I knew that this was computationally possible. But I didn\\u2019t know how to make it a reality. In conceiving the problem, I threw all the data into spreadsheets. I interned at this company when I was in college, where I learned about spreadsheets. I found the work very tedious, but I learned how to think about data, to think in tables. It allowed me to conceptualize complexity. To conceptualize the first subway data as a spreadsheet, I started by staring at the subway map laid on the wood floor of my apartment. The most obvious features were colors, lines, and stops. So those are the tables I typed into Excel first. Then I realized the lines also represented two train directions so I redid the spreadsheet. Then I realized the stops served multiple subway lines, so I redid the spreadsheet. Then I realized some of the stops would only be active during certain periods, so I redid the spreadsheet. We kept on learning and adjusting. It took us a long time before we had a data model that robustly described NYC's subway system. We even figured out how to automatically account for the frequent weekend NYC subway diversions. To build the first version of the app, I went to eLance, described to these computer scientists the data set in Excel, routes, stops, exits, entrances, and I sent it in. This developer in Siberia, Russia, emailed me, came up with a solution. But he turned out to be a complete genius, he built the core of the first version of Hopstop. Here I was, a Nigerian, sitting in my apartment using messenger, email, on a laptop. And I never met Alex for four years. We built Hopstop over four years without ever meeting each other. We ran very lean. Alex did all the coding. I did the subway data and user experience. I'd have to ride to different subway stations to note each subway entrance and exit, etc. When we added the bus system, Rajeev and his data team in India helped input the bus stops and schedules. And four years later, we were purchased by Apple, so quite the ride.\",\"1831\":\"Learn how to build interactive and data-driven web apps in Python using the Streamlit library. \\u270f\\ufe0f Course developed by Chanin Nantasenamat (aka Data Professor). Check out his YouTube channel for more data science tutorials: http:\\/\\/youtube.com\\/dataprofessor \\ud83d\\udd17 And Medium blog posts for more data science tutorials: https:\\/\\/medium.com\\/@chanin.nantasenamat \\u2b50\\ufe0f Course Contents \\u2b50\\ufe0f \\u2328\\ufe0f (0:00) Introduction \\u2328\\ufe0f (2:54) 1. Simple Stock Price \\u2328\\ufe0f (13:24) 2. Simple Bioinformatics DNA Count \\u2328\\ufe0f (29:44) 3. EDA Basketball \\u2328\\ufe0f (50:39) 4. EDA Football \\u2328\\ufe0f (1:00:48) 5. EDA SP500 Stock Price \\u2328\\ufe0f (1:24:03) 6. EDA Cryptocurrency \\u2328\\ufe0f (1:50:47) 7. Classification Iris \\u2328\\ufe0f (1:58:58) 8. Classification Penguins \\u2328\\ufe0f (2:16:08) 9. Regression Boston Housing \\u2328\\ufe0f (2:27:53) 10. Regression Bioinformatics Solubility \\u2328\\ufe0f (2:54:27) 11. Deploy to Heroku \\u2328\\ufe0f (3:04:37) 12. Deploy to Streamlit Sharing \\u2b50\\ufe0f Code \\u2b50\\ufe0f \\ud83d\\udcbb 1. Simple Stock Pric https:\\/\\/github.com\\/dataprofessor\\/streamlit_freecodecamp\\/tree\\/main\\/app_1_simple_stock_price \\ud83d\\udcbb 2. Simple Bioinformatics DNA Coun https:\\/\\/github.com\\/dataprofessor\\/streamlit_freecodecamp\\/tree\\/main\\/app_2_simple_bioinformatics_dna \\ud83d\\udcbb 3. EDA Basketbal https:\\/\\/github.com\\/dataprofessor\\/streamlit_freecodecamp\\/tree\\/main\\/app_3_eda_basketball \\ud83d\\udcbb 4. EDA Footbal https:\\/\\/github.com\\/dataprofessor\\/streamlit_freecodecamp\\/tree\\/main\\/app_4_eda_football \\ud83d\\udcbb 5. EDA SP500 Stock Pric https:\\/\\/github.com\\/dataprofessor\\/streamlit_freecodecamp\\/tree\\/main\\/app_5_eda_sp500_stock \\ud83d\\udcbb 6. EDA Cryptocurrenc https:\\/\\/github.com\\/dataprofessor\\/streamlit_freecodecamp\\/tree\\/main\\/app_6_eda_cryptocurrency \\ud83d\\udcbb 7. Classification Iri https:\\/\\/github.com\\/dataprofessor\\/streamlit_freecodecamp\\/tree\\/main\\/app_7_classificatio_iris \\ud83d\\udcbb 8. Classification Penguin https:\\/\\/github.com\\/dataprofessor\\/streamlit_freecodecamp\\/tree\\/main\\/app_8_classification_penguins \\ud83d\\udcbb 9. Regression Boston Housin https:\\/\\/github.com\\/dataprofessor\\/streamlit_freecodecamp\\/tree\\/main\\/app_9_regression_boston_housing \\ud83d\\udcbb 10. Regression Bioinformatics Solubilit https:\\/\\/github.com\\/dataprofessor\\/streamlit_freecodecamp\\/tree\\/main\\/app_10_regression_bioinformatics_solubility \\ud83d\\udcbb 11. Deploy to Heroku https:\\/\\/github.com\\/dataprofessor\\/penguins-heroku \\u2b50\\ufe0f More ways to connect with Chanin Nantasenamat \\u2b50\\ufe0f \\u2705 Website: http:\\/\\/dataprofessor.org\\/ \\u2705 Newsletter: http:\\/\\/newsletter.dataprofessor.org \\u2705 Twitter: https:\\/\\/twitter.com\\/thedataprof\\/ \\u2705 FaceBook: http:\\/\\/facebook.com\\/dataprofessor\\/ \\u2705 Instagram: https:\\/\\/www.instagram.com\\/data.professor\\/ \\u2705 LinkedIn: https:\\/\\/www.linkedin.com\\/in\\/chanin-nantasenamat\\/ \\u2705 GitHub: https:\\/\\/github.com\\/dataprofessor\\/ -- Learn to code for free and get a developer job: https:\\/\\/www.freecodecamp.org Read hundreds of articles on programming: https:\\/\\/freecodecamp.org\\/news And subscribe for new videos on technology every day: https:\\/\\/youtube.com\\/subscription_center?add_user=freecodecamp\",\"3315\":\"Calling our guest today 'special' would be an understatement. He's the co-founder of Stack Overflow (and this podcast), founder of Discourse, prolific writer and blogger at codinghorror.com, and most importantly, the subject of many internal Stack Overflow memes. It's @codinghorror himself, Mr Jeff Atwood! Jeff and Joel chat about where we came from and where we are going, including clips from past podcasts. If you care at all about SO history, then this episode is a must-listen.\",\"4462\":\"Round 1: Aptitude round with 30 question. Split up 5 of C aptitude,20 of Java and 5 quant. For sample questions http:\\/\\/varsha6896.blogspot.com\\/2020\\/12\\/zoho-1st-round-questions.html Most of the\\u2026 Read More The post Zoho Interview Experience | Off-Campus 2021 appeared first on GeeksforGeeks.\",\"950\":\"Have you wondered, how should I package my Python code? You\\u2019ve written the application, but now you need to distribute it to the machines it\\u2019s intended to run on. It depends on what the code is, the libraries it depends on, and with whom do you want to share it. This week on the show we have Itamar Turner-Trauring, creator of the website pythonspeed.com. We discuss his article \\u201cOptions for Packaging Your Python Code: Wheels, Conda, Docker, and More,\\u201d covering the how of sharing your code. Itamar also briefly discusses his Python memory profiler named Fil. We talk about his recent PyCon 2020 presentation, \\u201cSmall Big Data: What to do When Your Data Doesn\\u2019t Fit in Memory.\\u201d We also cover several of the resources available on his website for data scientists that want to get deeper into Docker. Course Spotlight: Python Coding Interviews: Tips & Best Practices In this step-by-step course, you\\u2019ll learn how to take your Python coding interview skills to the next level and use Python\\u2019s built-in functions and modules to solve problems faster and more easily. Topics: 00:00:00 \\u2013 Introduction 00:01:36 \\u2013 About the naming of pythonspeed.com 00:03:47 \\u2013 Fil - Python Memory Profiler 00:06:44 \\u2013 Small Big Data: What to do when your data doesn\\u2019t fit in memory - PyCon 2020 00:12:17 \\u2013 Options for packaging your Python code: Wheels, Conda, Docker, and more 00:15:13 \\u2013 Python Wheels 00:19:22 \\u2013 pipx: Install and Run Python Applications in Isolated Environments 00:20:52 \\u2013 PEX, and friends 00:24:51 \\u2013 System Package, RPM or DEB 00:29:42 \\u2013 Conda Packaging and conda-forge 00:36:09 \\u2013 Video Course Spotlight 00:37:23 \\u2013 Self-contained executable: PyInstaller, PyOxidizer, Briefcase 00:43:45 \\u2013 Container image (Docker, Singularity) 00:54:55 \\u2013 Why alpine may not be the best choice 01:05:28 \\u2013 Singularity 01:07:50 \\u2013 What are you excited about in the world of Python? 01:10:40 \\u2013 What do you want to learn next? 01:13:54 \\u2013 Thanks and Goodbye Show Links: Python =\\/alia href=\\\"https:\\/\\/codewithoutrules.com\\/\\\"\\/alia href=\\\"https:\\/\\/talkpython.fm\\/episodes\\/show\\/274\\/profiling-data-science-code-with-fil\\\"\\/alia href=\\\"https:\\/\\/pythonspeed.com\\/articles\\/memory-profiler-data-scientists\\/\\\"\\/alia href=\\\"https:\\/\\/www.youtube.com\\/watch?v=8pFnrr0NnwY\\\"\\/alia href=\\\"https:\\/\\/realpython.com\\/podcasts\\/rpp\\/16\\/\\\"\\/alia href=\\\"https:\\/\\/pythonspeed.com\\/articles\\/distributing-software\\/\\\"\\/alia href=\\\"https:\\/\\/realpython.com\\/python-wheels\\/\\\"\\/alia href=\\\"https:\\/\\/pypi.org\\/project\\/pipx\\/\\\"\\/alia href=\\\"https:\\/\\/github.com\\/pantsbuild\\/pex\\\"\\/alia href=\\\"https:\\/\\/www.youtube.com\\/watch?v=NmpnGhRwsu0\\\"\\/alia href=\\\"https:\\/\\/en.wikipedia.org\\/wiki\\/RPM_Package_Manager\\\"\\/alia href=\\\"https:\\/\\/en.wikipedia.org\\/wiki\\/Deb_(file_format)\\\"\\/alia href=\\\"https:\\/\\/docs.conda.io\\/en\\/latest\\/\\\"\\/alia href=\\\"https:\\/\\/anaconda.org\\/conda-forge\\/conda\\\"\\/alia href=\\\"http:\\/\\/www.pyinstaller.org\\/\\\"\\/alia href=\\\"https:\\/\\/github.com\\/indygreg\\/PyOxidizer\\\"\\/alia href=\\\"https:\\/\\/beeware.org\\/project\\/projects\\/tools\\/briefcase\\/\\\"\\/alia href=\\\"https:\\/\\/www.docker.com\\/get-started\\\"\\/alia href=\\\"https:\\/\\/pythonspeed.com\\/products\\/justenoughdockerpackaging\\/\\\"\\/alia href=\\\"https:\\/\\/realpython.com\\/podcasts\\/rpp\\/8\\/\\\"\\/alia href=\\\"https:\\/\\/pythonspeed.com\\/articles\\/alpine-docker-python\\/\\\"\\/alia href=\\\"https:\\/\\/sylabs.io\\/guides\\/3.5\\/user-guide\\/introduction.html\\\"\\/alia href=\\\"https:\\/\\/pythonspeed.com\\/articles\\/containers-filesystem-data-processing\\/\\\"\\/alia href=\\\"https:\\/\\/ep2020.europython.eu\\/talks\\/CeKGczx-best-practices-for-production-ready-docker-packaging\\/\\\"\\/alia href=\\\"https:\\/\\/www.youtube.com\\/watch?v=G3pqxUIWjiw&list=PL8uoeex94UhG33fVP7GZEo06gOHlhb0hk&index=3\\\"\\/alia href=\\\"https:\\/\\/xcelab.net\\/rm\\/statistical-rethinking\\/\\\"\\/alia href=\\\"https:\\/\\/www.youtube.com\\/watch?v=HZGCoVF3YvM\\\"\\/a\\/ula rel=\\\"payment\\\" href=\\\"https:\\/\\/realpython.com\\/join\\\"\\/a\",\"1841\":\"Concurrency is the act of having your computer do multiple things at the same time. If you\\u2019ve heard lots of talk about asyncio being added to Python but are curious how it compares to other concurrency methods or are wondering what concurrency is and how it might speed up your program, you\\u2019ve come to the right place. In this course, you\\u2019ll learn the following: How I\\/O bound programs are effected by latency Which concurrent programming patterns to use What the differences are between the Python concurrency libraries How to write code that uses the threading, asyncio, and multiprocessing libraries Sample code was tested using Python 3.8.5. Much of the asyncio library has been in flux since Python 3.4, it is recommended to use at least Python 3.7 for the asyncio portions of the course. [ Improve Your Python With \\ud83d\\udc0d Python Tricks \\ud83d\\udc8c \\u2013 Get a short & sweet Python Trick delivered to your inbox every couple of days.\",\"3285\":\"In this week's episode: We chat with Linux Academy CEO and Founder Anthony James, we play a \\\"Florida Man\\\" edition of Fake News, and Matt Sherman wonders how computers work.\",\"571\":\"What is Git fundamentally? To end users, it's a version control system. But to it's designers, it is a content addressable system. Let's break those words down. Content stands for data to be stored in git. All data in git is represented as objects. Addressable means the content can be accessed using a key or an address. You store some data, and Git returns you an ID. With this unique ID, you can ask Git to retrieve the data as and when required. System We need a method in the madness. A system defines how the IDs will be generated, how the data will be stored, and how the interface will interact with the user. The metadata of files are stored in trees. These are like unix directories, containing the names of each file it stores and the ID of the file. If a file is renamed or moved, the contents of the file do not change. This means only tree objects need to be changed, which makes file renaming and moves efficient in Git. Make a minor change to an image file. This creates a new file in Git after committing. This results in small changes taking very long to transfer across the network, and eventually eating a lot of disk space as well. Pack files contain compressed git objects, with some having parent objects. Git garbage collection runs when transferring over the network. That's called pulling or pushing in Git. It also runs periodically to save disk space. Rebasing is a way in which we take a series of commits and change their base commit. This is very useful if you'd like the history to be clean. The important thing to note is that rebase is a way of changing history to a more coherent graph. As you can expect, there are dangers with changing history. Git is a database for content which requires continuous versioning and peer development. We can see how important hashing, compression and commit graphs are to its architecture. Now, you can design your own version control system if you'd like to. #StayHome #Learn #WithMe CheatSheet: https:\\/\\/github.com\\/coding-parrot\\/projects\\/blob\\/master\\/git_commands.txt System Design Playlist: https:\\/\\/www.youtube.com\\/playlist?list=PLMCXHnjXnTnvo6alSjVkgxV-VH6EPyvoX Become a channel member! https:\\/\\/www.youtube.com\\/channel\\/UCRPMAqdtSgd0Ipeef7iFsKw\\/join You can follow me on: Facebook: https:\\/\\/facebook.com\\/gkcs0\\/ Quora: https:\\/\\/www.quora.com\\/profile\\/Gaurav-Sen-6 LinkedIn: https:\\/\\/www.linkedin.com\\/in\\/gaurav-sen-56b6a941\\/ Twitter: https:\\/\\/twitter.com\\/gkcs_\",\"930\":\"You probably have heard of the bestselling Python book, \\u201cAutomate the Boring Stuff with Python.\\u201d What are the next steps after starting to dabble in the Python basics? Maybe you\\u2019ve completed some tutorials, created a few scripts, and automated repetitive tasks in your life. This week on the show, we have author Al Sweigart to talk about his new book, \\u201cBeyond the Basic Stuff with Python: Best Practices for Writing Clean Code.\\u201d We discuss several topics covered in his new book, including using the command line, setting environment variables, formatting code, naming, and starting with version control. We talk about learning Python by creating games and highlight a couple of Python myths. I also ask Al about his earlier books, and about his idea of creating a curriculum around conference talks. Course Spotlight: Unicode in Python: Working With Character Encodings In this course, you\\u2019ll get a Python-centric introduction to character encodings and Unicode. Handling character encodings and numbering systems can at times seem painful and complicated, but this guide is here to help with easy-to-follow Python examples. Topics: 00:00:00 \\u2013 Introduction 00:01:35 \\u2013 Early access release of the new book 00:03:20 \\u2013 Other books Al has written 00:09:54 \\u2013 Automate the Boring Stuff as an advice book 00:15:29 \\u2013 Books about writing Python with games 00:17:36 \\u2013 Making a book less intimidating 00:19:10 \\u2013 Helping readers through random things a programmer needs to learn 00:23:09 \\u2013 Environment variables and the command line 00:28:05 \\u2013 Naming 00:34:59 \\u2013 Code formatting 00:36:45 \\u2013 Why do you enjoy teaching Python concepts with games? 00:42:54 \\u2013 Video Course Spotlight 00:44:15 \\u2013 Minimal amount you should know about Git 00:47:08 \\u2013 Jargon and being clear about terminology 00:50:13 \\u2013 Al\\u2019s first book diving into Object-Oriented Programming 00:59:57 \\u2013 Python myths covered in the book 01:09:08 \\u2013 What is something you thought you knew about Python, but were wrong about it? 01:13:12 \\u2013 What is something you are excited about in the world of Python? 01:18:55 \\u2013 What do you want to learn next? 01:22:08 \\u2013 Creating an curriculum from conference talks 01:26:42 \\u2013 Thanks and goodbye Show Links: Al Sweigart - Website Beyond the Basic Stuff with Python Automate the Boring Stuff with Python Invent with Python Xkcd comic \\u201cReal Programmers\\u201d Resources to learn git Fluent Python by Luciano Ramalho Ozymandias: Wikipedia article Ned Batchelder - Facts and Myths: PyCon 2015 Al Sweigart -The Amazing Mutable, Immutable Tuple: PyCascades 2019 BeeWare - Write once. Deploy everywhere. What Professional Games Use Pygame? Codename Mallow -Written in PyGame Unity of Command - Written in PyGame A Curriculum for Python Packaging: Al Sweigart\\u2019s Blog Support the podcast & join our community of Pythonistas\",\"1817\":\"Hi, I had my SAP interview in 2020, and they were providing us the WILP (MTech.) option for 4 years. 1st Round (Online Test): The\\u2026 Read More The post SAP Labs Interview Experience | On-Campus 2020 appeared first on GeeksforGeeks.\",\"3458\":\"Stack Exchange Podcast - Episode #59 - He's One Of Those Science-ists by The Stack Overflow Podcast\",\"912\":\"Have you wanted to learn Regular Expressions in Python, but don\\u2019t know where to start? Have you stumbled into the dreaded pink SettingWithCopyWarning in Pandas? This week on the show, we have David Amos from the Real Python team to discuss a recent two-part series on Regex in Python. We also talk about another recent article on the site about views vs copies in Pandas. David also brings a few other articles and projects from the wider Python community for us to discuss. David searches for the latest Python news, links, and articles to produce PyCoder\\u2019s Weekly with Dan Bader. PyCoder\\u2019s Weekly is a free email newsletter for those interested in Python development. Along with the previously mentioned Real Python articles, we also discuss articles from the community about: getting machine learning to production, combining Flask and Vue, space science with Python, and the fastest way to flatten a list in Python. Course Spotlight: Reading and Writing Files in Python This course will get you up to speed with reading and writing files in Python. You\\u2019ll cover everything from what a file is made up of, to which libraries can help you along that way. You\\u2019ll also take a look at some basic scenarios of file usage as well as some advanced techniques. Topics: 00:00:00 \\u2013 Introduction 00:01:40 \\u2013 SettingWithCopyWarning in Pandas 00:06:17 \\u2013 Fastest Way to Flaten a List in Python 00:12:12 \\u2013 Combining Flask and Vue 00:15:33 \\u2013 Regular Expressions in Python 00:23:08 \\u2013 Video Course Spotlight 00:24:00 \\u2013 Space Science With Python 00:30:13 \\u2013 Getting Machine Learning to Production 00:37:15 \\u2013 genetic-drawing 00:39:42 \\u2013 MicroscoPy 00:43:55 \\u2013 Thanks and Goodbye Show Links: SettingWithCopyWarning in Pandas: Views vs Copies \\u2013 In this tutorial, you\\u2019ll learn about views and copies in NumPy and Pandas. You\\u2019ll see why the SettingWithCopyWarning occurs in Pandas and how to properly write code that avoids it. Fastest Way to Flatten a List in Python \\u2013 Explore six different was to flatten a list of lists in Python and how their performance compares. The fastest of the six methods mentioned might surprise you! Combining Flask and Vue \\u2013 Learn about three ways to combine Flask and Vue, the pros and cons of each, and some guidelines for when to use each method. Regular Expressions: Regexes in Python (Part 2) \\u2013 In the previous tutorial in this series, you learned how to perform sophisticated pattern matching using regular expressions, or regexes, in Python. This tutorial explores more regex tools and techniques that are available in Python. Space Science With Python \\u2013 Explore and analyze the wonders and mysteries of space\\u2026 with Python! Getting Machine Learning to Production \\u2013 Millions of web apps get deployed to production every day. But machine learning models aren\\u2019t web apps. And very few people are talking about deployment. Learn how tools like Streamlit can help take the edge off deploying your machine learning models. Projects: genetic-drawing: A Genetic Algorithm Toy Project for Drawing Anastasia Opara - Procedural Artist MicroscoPy: An Open-Source, Motorized, and Modular Microscope Built Using LEGO Bricks, Arduino, Raspberry Pi and 3D Printing Additional Links: SPICE: An Observation Geometry System for Space Science Missions SpiceyPy documentation: Read the docs SPICE lessons provided by the NAIF translated to use Python code Support the podcast & join our community of Pythonistas\",\"3580\":\"On today\\u2019s episode we chat about the rise of retro-computing, the appeal of e-ink readers, and what we would pay for \\/dev\\/null as a service. Episode Notes How could you not love a team with a bio like this: \\u201cWe\\u2019re a young and dynamic team of messy data-scientists who have failed at being employed on the real market. Our experience in losing data and throwing files away is more than amazing! Over the years, we have managed to get rid of so much important data at home and even at work.\\u201d Find out how you pay other people to throw your data away here. The New York Times reports on the rising prices of old computers and their parts. Retro-computing is fun, especially when you\\u2019re stuck at home for\\u2026feels like a while now. Stack Overflow memes have made it to Tik Tok, and it is joyous. To round things out we chat about our love of e-ink, the desire to buy a reMarkable 2, and this amazing piece of digital wall art. This week\\u2019s lifeboat badge winner is Gordon Larrigan, who answered the question: How can you sort an array of arrays in JavaScript? TRANSCRIPT The post Podcast 303: What would you pay for \\/dev\\/null as a service? appeared first on Stack Overflow Blog.\",\"1858\":\"Managing Python Dependencies is your \\u201cone-stop shop\\u201d for picking up modern Python dependency management practices and workflows with minimal time investment. The course consists of 32 bite-sized video lessons, each focusing on a single concept. Progressing through the course, you\\u2019ll quickly build up a comprehensive knowledge of dependency management best practices in Python at your own, comfortable pace. Along the way, you\\u2019ll see hands on examples and step-by-step workflows that reinforce the skills you\\u2019re learning. By the end, you\\u2019ll know how to apply Python\\u2019s recommended dependency management tools, like pip, virtualenvs, and requirements files effectively in the most common day-to-day development scenarios on Linux, macOS, and Windows. With Managing Python Dependencies you will: Code at a higher level and become more efficient: Leveraging Python\\u2019s rich third-party library ecosystem let\\u2019s you write better programs in a shorter amount of time. With a large body of freely available modules you can avoid reinventing the wheel and deliver higher quality Python software, faster. This is a great way for you to demonstrate senior level skills that will benefit your development career. Get up to speed with Python dependency management quickly: Your time is your most important asset. If you can use it efficiently you will save your sanity\\u2014and a nice stack of money. This course is concise but thorough and will help you attain solid Python dependency management knowledge fast. Go from \\u201cwriting scripts\\u201d to \\u201cbuilding applications\\u201d with Python: By taking advantage of Python\\u2019s rich packaging ecosystem you\\u2019ll be able to build substantial and full-featured applications in Python. You\\u2019ll know the best practices for finding and documenting application dependencies that put you right on track for deploying and shipping production-grade apps. Find great libraries for a specific task at hand: This course teaches you a unique 7-step workflow for finding and identifying quality Python packages. Find out which libraries and tools are available on PyPI to help you. By quickly and easily identifying the correct libraries you\\u2019ll speed up your development efficiency by a large margin. Meet your deadlines and write better code at the same time by not having to \\u201creinvent the wheel.\\u201d Master \\u201cthe tools of the trade\\u201d for dependency management: With this course you\\u2019ll master the tools and workflows recommended by the official Python Packaging Authority. By getting those skills under your belt you\\u2019ll be ready to work with the Python development and production environments used by professional development teams across the world. Knowing these \\u201ctools of the trade\\u201d by heart puts you at an advantage in any job interview situation. \\u201cProductionize\\u201d your projects and share them with the world: You\\u2019ll see how to apply the best practices for defining and installing package dependencies in Python. You\\u2019ll know how to get your programs ready to be deployed on production and automated testing environments and how to make it easy for other developers to contribute code with minimal setup effort. Become more valuable as an employee and team member: With my detailed 7-step workflow for researching quality Python packages you\\u2019ll know how to document and justify added program dependencies to your team and your manager. By taking on more responsibilities and picking up these senior-level \\u201carchitectural\\u201d skills you\\u2019ll rise head and shoulders above other devs stuck at the \\u201ccode monkey\\u201d level. Who Is This Course For? This course is for Python developers wanting to break through to the next phase of developing code by becoming more efficient, productive, and skilled using Python\\u2019s rich library ecosystem. If you\\u2019ve ever caught yourself thinking \\u201cThere\\u2019s got to be a Python package out there that does exactly what I want\\u2026But how do I find it?\\u201d this course will fill in the missing pieces for you. Discover the industry best practices around choosing and managing third-party dependencies for your Python 2 or Python 3 projects on Windows, macOS, and Linux. If you already know how to use alternative package managers like Conda you\\u2019ll discover how to use the standards-compliant tools and workflows supported by any Python distribution and used in most production application deployments. Course Goals By the end of the course you\\u2019ll know how to: Install, use, and manage third-party Python packages with the \\u201cpip\\u201d package manager on Windows, macOS, and Linux. Isolate project dependencies with so-called virtual environments to avoid version conflicts in your Python projects. Apply a complete 7-step workflow for finding and identifying quality third-party packages to use in your own Python projects (and justifying your decisions to your team or manager.) Set up repeatable development environments and application deployments using the \\u201cpip\\u201d package manager and requirements files. [ Improve Your Python With \\ud83d\\udc0d Python Tricks \\ud83d\\udc8c \\u2013 Get a short & sweet Python Trick delivered to your inbox every couple of days.\",\"3365\":\"Monday's big story on Bloomberg was that the US unemployment system was being slowed by problems with an \\\"ancient\\\" programming language. Well, yah heard it here first. Also, ancient seems a bit extreme for something that is 60-years-old, but perhaps in the world of software, that does qualify as nearly pre-historic. After that, we switch to the biggest news in tech, or perhaps in the world, over the last week. Apple and Google have released a spec for a contact tracing system. As countries around the world work to slowly reopen their economies, contact tracing is a powerful tool for preventing new surges in coronavirus outbreaks. The system the duo of tech giants devised includes specs for bluetooth, cryptography, and APIs. You can read Paul's deep dive take on it at the link above. Last but not least, if you're interested in donating to help those affected by COVID-19, Sara is working with the .NET foundation on a project called Dev Around The Sun. They are providing assistance and mentorship to folks impacted by this pandemic, and you can learn more about how to donate time or funding at the link above. Be safe, be well, and we'll talk to you again on Tuesday.\",\"3499\":\"Stack Overflow Podcast - Episode #36 by The Stack Overflow Podcast\",\"3419\":\"Stack Overflow Podcast - Episode #48 by The Stack Overflow Podcast\",\"3553\":\"You can find Textmoji here. A few taps and you're the hippest typographer in your company's work chat. Seek, the app from iNaturalist, is available on Android and iOS. You can find it here. Ben has over 30 plants, a dozen insects, and five amphibians, so if you're feeling competitive, it's gonna be a long hike to catch up. It can be hard selling software or design in a period where vendors and potential clients can rarely meet in person. Paul has been enjoying Whimsical, which advertises itself as allowing users to \\\"communicate visually at the speed of thought.\\\" We also spend some time discussing Supabase, an open source Firebase alternative. As discussed in the intro to this episode, we wanted to share some resources connected to the ongoing protests and memorials happening in the US. Black and Brown, a group of employees within Stack Overflow, put together some recommendations of social media accounts to follow. Antiracism Center: Twitter Audre Lorde Project: Twitter | Instagram | Facebook Black Women\\u2019s Blueprint: Twitter | Instagram | Facebook Equal Justice Initiative (EJI): Twitter | Instagram | Facebook\",\"3557\":\"Stack Overflow Podcast - Episode #13 by The Stack Overflow Podcast\",\"3422\":\"Along with her work writing and editing, Stephanie works as a product manager at Microsoft and runs Developer Content Digest, a biweekly newsletter with content tips. She has worked for companies like Digital Ocean, Github, and General Assembly. Twitter: @radiomorillo eBooks: developersguidetocontent.com Newsletter and blog: stephaniemorillo.co\\/links\",\"1855\":\"Are you ready to move beyond flat files for your data in Python? Maybe you're not sure where to start with databases and SQL. This week on the show, David Amos returns with another batch of PyCoder\\u2019s Weekly articles and projects. We cover a Real Python article about managing data with SQLite and SQLAlchemy. [ Improve Your Python With \\ud83d\\udc0d Python Tricks \\ud83d\\udc8c \\u2013 Get a short & sweet Python Trick delivered to your inbox every couple of days.\",\"3450\":\"In this week's episode, our hosts talk about a few recent blog posts concerning the declining quality of Stack Overflow including what they got right, what they got very wrong, and what we can learn. Also listen to hear \\\"Grandpa Joel\\\" tell stories about the Xerox Alto.\",\"3589\":\"Welcome to ISSUE #49 of the Overflow! Seven sevens, quite a lucky set of numbers in many cultures. This newsletter is by developers, for developers, written and curated by the Stack Overflow team and Cassidy Williams at Netlify. This week: in space, no one can hear you seg fault, setting a clock made of atoms, and the surprising benefits of Comic Sans. From the blog The Loop: Adding review guidance to the help center stackoverflow.blog While working on the review queues project, the Public Platform team saw an opportunity to improve the help center and create a space for more canonical articles about reviewing. By adding new, specific review queue help pages, the help center becomes a more accessible and useful resource to all of our users. The macro problem with microservices stackoverflow.blog In just 20 years, software engineering has shifted from architecting monoliths with a single database and centralized state to microservices where everything is distributed across multiple containers, servers, data centers, and even continents. Distributing things solves scaling concerns, but introduces a whole new world of problems, many of which were previously solved by monoliths. Podcast 287: How do you make software reliable enough for space travel? stackoverflow.blog We discuss ten tips for preventing runaway code when a spaceship is on the line. GitLab or Jenkins: Learn about the difference in this eBook promotion GitLab CI offers a complete DevOps workflow without the headache of managing a complicated plugin ecosystem. Download this free eBook to learn the benefits of GitLab built-in CI compared to Jenkins traditional plugin solution. Interesting questions How do we decide when a small sample is statistically significant or not? stats.stackexchange.com Statistics that use &#8216;per million\\u2019 look a little silly when the total population is in the thousands. How was the first atomic clock calibrated? physics.stackexchange.com Atomic clocks aren\\u2019t calibrated to time. Time is calibrated to atomic clocks. Does the sun\\u2019s rising\\/setting angle change every few months? astronomy.stackexchange.com Your TV has not moved its angle to the sun, but the planet it is sitting on has. What is the impact of an exposed secret key for a JWT token implementation? security.stackexchange.com Repeat after me: JWT heavily relies on the private key to stay absolutely private. Links from around the web Replay replay.js.org If you\\u2019re a web developer interested in getting into the gaming space, here\\u2019s a game engine inspired by React. Translate those skills! Firefox 83 introduces HTTPS-only mode blog.mozilla.org Security on the web gets another win with Firefox\\u2019s new HTTPS-only mode. This mode asks for your permission before it loads any and all non-HTTP resources. It\\u2019s a good tool if you are auditing your own applications, as well. What\\u2019s wrong with Comic Sans? www.thecut.com You love to hate it, but Comic Sans is here to stay. What many folks don\\u2019t realize is just how readable it is! Container orchestration tools explained dev.to What are containers? Why do we need them? How do we orchestrate them? Get the basics and more with this solid overview. Want to see who\\u2019s still hiring? Check out our job board! The post The Overflow #49: Container orchestration explained appeared first on Stack Overflow Blog.\",\"210\":\"#NNFS book was received today. I have never purchased a heavy book like this before. It is going to be fun \\ud83e\\udd20 @Sentdex @daniel_kukiela\",\"1248\":\"Building neural networks from scratch in Python introduction. Neural Networks from Scratch book: https:\\/\\/nnfs.io Playlist for this series: https:\\/\\/www.youtube.com\\/playlist?list=PLQVvvaa0QuDcjD5BAw2DxE6OF2tius3V3 Python 3 basics: https:\\/\\/pythonprogramming.net\\/introduction-learn-python-3-tutorials\\/ Intermediate Python (w\\/ OOP): https:\\/\\/pythonprogramming.net\\/introduction-intermediate-python-tutorial\\/ Mug link for fellow mug aficionados: https:\\/\\/amzn.to\\/2xcyfPC Channel membership: https:\\/\\/www.youtube.com\\/channel\\/UCfzlCWGWYyIQ0aLC5w48gBQ\\/join Discord: https:\\/\\/discord.gg\\/sentdex Support the content: https:\\/\\/pythonprogramming.net\\/support-donate\\/ Twitter: https:\\/\\/twitter.com\\/sentdex Instagram: https:\\/\\/instagram.com\\/sentdex Facebook: https:\\/\\/www.facebook.com\\/pythonprogramming.net\\/ Twitch: https:\\/\\/www.twitch.tv\\/sentdex #nnfs #python #neuralnetworks\",\"3524\":\"Happy Holidays from The Stack Overflow Podcast! On today's episode: Winter Bash 2017 details are revealed, Abby Reads Nice Tweets, and we ponder the questionable morality behind Santa's favorite narc, The Elf on the Shelf.\",\"3532\":\"Has there ever been a gaming company that brought more joy to the world than Nintendo? They were making playing cards back in 1889 and continue to find ways to be different but fun with inventions like the Switch and Labo. Sara gives us some the scoop on Rimworld. Check out the trailer here and feel free to lend your skill to a new mod if you have ideas for how to improve it. A Excel sheet meltdown led to critical health data about the pandemic being lost in the UK. Rows can go to millions, but they used columns. For those of us who need our reading glasses to see the tiny emoji people post in Slack, Paul has come to your rescue. He asked for the ability to zoom In on Twitter, the CEO of Slack co-signed, and boom, we got a new feature. We discuss what other new Slack features might take off: stories, push-to-talk, and sneakers.\",\"1840\":\"In this step-by-step course, you\\u2019ll learn the basics of Python programming with the help of a simple and interactive Python library called turtle. If you\\u2019re a beginner to Python, then this course will definitely help you on your journey as you take your first steps into the world of programming. The Python turtle library comes with a similar interactive feature that gives new programmers a taste of what it\\u2019s like to work with Python. In this course, you will: Understand what the Python turtle library is Learn how to set turtle up on your computer Program with the Python turtle library Grasp some important Python concepts and turtle commands Develop a short but entertaining game using what you\\u2019ve learned [ Improve Your Python With \\ud83d\\udc0d Python Tricks \\ud83d\\udc8c \\u2013 Get a short & sweet Python Trick delivered to your inbox every couple of days.\",\"3390\":\"Stack Overflow Podcast - Episode #62 by The Stack Overflow Podcast\",\"5093\":\"Joe Biden just wants to ride his Peleton, but equipment connected to WiFi with a camera and microphone can pose a real security risk. If you've got a chicken coop or greenhouse that needs a little warmth this winter, maybe team it up with your gaming PC or bitcoin mining rig, which tend to give off a lot of heat. Speaking of heat, we dive into datacenters that were sunk under the ocean in an effort to create more economically efficient and environmentally friendly computing. Our favorite meme of the week, a Heroku app that puts a chilly Bernie Sanders anywhere in the world. Our lifeboat badge winner is Lukas Kalbertodt, who answered the question: What's the most efficient way to insert an element into a sorted vector?\",\"607\":\"Book a mock interview or coaching session with a Google engineer as early as tomorrow on interviewing.io! Sign up here: https:\\/\\/interviewing.io\\/signup?utm_source=youtube.com&utm_medium=referral&utm_campaign=video_link Check out the feedback by the Google interviewer and the full transcript on https:\\/\\/interviewing.io\\/recordings\\/C++-Google-21\\/ Disclaimer: All interviews are shared with explicit permission from the interviewer and the interviewee, and all interviews are anonymous. interviewing.io has the sole right to distribute this content.\",\"520\":\"How do you verify that someone is who they say they are? Dr Mike Pound on digital signatures. https:\\/\\/www.facebook.com\\/computerphile https:\\/\\/twitter.com\\/computer_phile This video was filmed and edited by Sean Riley. Computer Science at the University of Nottingham: https:\\/\\/bit.ly\\/nottscomputer Computerphile is a sister project to Brady Haran's Numberphile. More at http:\\/\\/www.bradyharan.com\",\"918\":\"Are you using the Python library Pandas the right way? Do you wonder about getting better performance, or how to optimize your data for analysis? What does normalization mean? This week on the show we have Hannah Stepanek to discuss her new book \\u201cThinking in Pandas\\u201d. The inspiration behind Hannah\\u2019s book came out of her talk at PyCon US 2019 titled \\u201cThinking Like a Panda: Everything You Need to Know to Use Pandas the Right Way.\\u201d We discuss several core concepts covered in the book. She shares techniques for getting more performance when working with your data in Pandas. We also talk about her recent PyCon US 2020 online presentation about databases and migration. Course Spotlight: Finding the Perfect Python Code Editor Find your perfect Python development setup with this review of Python IDEs and code editors. With this course you\\u2019ll get an overview of the most common Python coding environments to help you make an informed decision. Topics: 00:00:00 \\u2013 Introduction 00:01:36 \\u2013 Working for New Relic 00:03:14 \\u2013 Thinking in Pandas book release 00:03:27 \\u2013 Who is the intended reader? 00:05:27 \\u2013 What is the underlying tech for Pandas? 00:09:04 \\u2013 Why you shouldn\\u2019t use apply? 00:13:00 \\u2013 When you have to use apply 00:16:06 \\u2013 Normalizing your data 00:17:05 \\u2013 Do you have a preferred format for a dataframe? 00:18:17 \\u2013 More on multi-index dataframes 00:24:50 \\u2013 Creating NumPy types 00:28:30 \\u2013 Loading in your data 00:30:33 \\u2013 Video Course Spotlight 00:31:41 \\u2013 Pivoting data 00:34:34 \\u2013 Considering outside libraries and performance 00:35:41 \\u2013 What topic were you eager to share in the book? 00:37:52 \\u2013 What resources did you use to learn pandas? 00:40:53 \\u2013 PyCon 2020 talk about databases and migration 00:45:34 \\u2013 Delving into migration and Alembic 00:53:15 \\u2013 Speaking opportunities 00:56:13 \\u2013 What are you excited about in the world of Python? 00:57:32 \\u2013 What do you want to learn next? 00:58:49 \\u2013 Do you read source code to learn? 01:00:16 \\u2013 Is there a particularly well-written library? 01:01:28 \\u2013 Final Thanks Links: Thinking in Pandas: How to Use the Python Data Analysis Library the Right Way - Apress Thinking like a Panda: Everything you need to know to use pandas the right way - PyCon 2019 - Hannah Stepanek pandas CPython Internals: Your Guide to the Python 3 Interpreter MultiIndex \\/ advanced indexing: pandas documentation NumPy Data type objects (dtype) pandas.DataFrame.pivot: pandas documentation Let\\u2019s talk Databases in Python: SQLAlchemy and Alembic - PyCon 2020 - Hannah Stepanek SQLAlchemy: The Python SQL Toolkit and Object Relational Mapper Alembic: A database migration tool for SQLAlchemy import asyncio: Learn Python\\u2019s AsyncIO #1 - The Async Ecosystem Support the podcast & join our community of Pythonistas\",\"3414\":\"Stack Exchange Podcast - Episode #50 - Listen to this Podcast by The Stack Overflow Podcast\",\"3377\":\"Stack Overflow Podcast - Episode #67 by The Stack Overflow Podcast\",\"3585\":\"The conversation in this week\\u2019s episode was inspired by a blog and video from Chris Ferdinandi. He talked about converting jQuery plugins and Vue components into vanilla JS, and recording himself in the process. He also tried this conversion with a React demo app. While discussing all the new things one can do with the web, we ended up discussing a fundamental question: What is the difference between a language and a framework? You can find Ferdinandi\\u2019s post and video here. 12 years ago, back when Stack Overflow was a brand new site with just a few thousand users, someone asked: What is the difference between a framework and a library? FreeCodeCamp has its own take on this question with a pretty interesting answer. \\u201cWhen you use a library, you are in charge of the flow of the application. You are choosing when and where to call the library. When you use a framework, the framework is in charge of the flow. It provides some places for you to plug in your code, but it calls the code you plugged in as needed.\\u201d There was no Lifeboat badge to call out this week, so we honored a Lifejacket winner instead. Shout out to Andreas for answering the queston: Are byte arrays initialised to zero in Java? TRANSCRIPT The post Podcast 289: React, jQuery, Vue: what\\u2019s your favorite flavor of vanilla JS? appeared first on Stack Overflow Blog.\",\"3423\":\"Stack Overflow Podcast - Episode #85 by The Stack Overflow Podcast\",\"3309\":\"Tilde Club: It\\u2019s your chance to LARP as a 70s sys admin! What you do on your computer is your business. Don\\u2019t be tricked by scammers. Paul makes the mistake of sharing his Anxiety Box on This American Life Sara\\u2019s favorite Kanye tweet is available, beautifully framed, for only $75. cKeys is an amazing Seattle non-profit that teaches folks how to make their own keyboards! When we recorded this episode Cassidy worked at CodePen, but not she works at React Training, so check them out.\",\"924\":\"Do you have gaps in your Python learning path? If you\\u2019re like me, you may have followed a completely random route to learn Python. This week on the show, David Amos is here to talk about the release of the Real Python book, \\u201cPython Basics: A Practical Introduction to Python 3\\u201d. The book is designed not only to get beginners up to speed but also to help fill in the gaps many intermediate learners may still have. David has been working on the book for the last two years, and we dive into all the resources that come with it. These include code challenges, quizzes, and multiple projects that are designed to help you cement your learning. We also discuss the people and processes involved in creating, reviewing, and updating the book. Spotlight: Python Basics: A Practical Introduction to Python 3 Go from beginner to intermediate in Python with this complete curriculum, up-to-date for Python 3.9. Python Basics includes exercises, interactive quizzes, and sample projects, so you\\u2019ll always know what to focus on next in order to build a strong Python foundation. Topics: 00:00:00 \\u2013 Introduction 00:01:36 \\u2013 Python Basics: A Practical Introduction to Python 3 00:02:39 \\u2013 How has feedback helped the process? 00:04:17 \\u2013 Who is the intended audience? 00:06:02 \\u2013 Covering how to get Python installed on different platforms? 00:11:05 \\u2013 What topics does the book cover? 00:14:12 \\u2013 What can be previewed on Real Python? 00:15:03 \\u2013 What format can you get the book in? 00:18:30 \\u2013 Code challenges included! 00:21:33 \\u2013 What other resources are provided to help with cementing your learning? 00:22:41 \\u2013 What versions of Python are covered? 00:23:08 \\u2013 How does the book fit into the Real Python learning eco-system? 00:29:35 \\u2013 Spotlight: How to get a preview of the book! 00:30:38 \\u2013 What has the writing process been like? 00:33:21 \\u2013 What does didactic mean, in terms of reviewing materials? 00:39:23 \\u2013 What were areas you were excited about updating? 00:41:29 \\u2013 Were there important things you felt needed to be added? 00:45:55 \\u2013 Who worked on the book? 00:47:13 \\u2013 What are you excited about in the world of Python? 00:48:13 \\u2013 What do you want to learn next? 00:49:40 \\u2013 Thanks and goodbye Show Links: Python Basics: A Practical Introduction to Python 3 Python 3 Installation & Setup Guide Create and Modify PDF Files in Python Python GUI Programming With Tkinter Object-Oriented Programming (OOP) in Python 3 A Practical Introduction to Web Scraping in Python Support the podcast & join our community of Pythonistas\",\"211\":\"Keep it up! nitter.net\\/DuckDuckGo\\/status\\/1336683776039145475#m\",\"1833\":\"Learn how to code a Discord bot using Python and host it for free in the cloud using Repl.it. Along the way, you will learn to use Repl.it's built-in database and create a Discord bot that uses webhooks to connect with GitHub. This course was developed by Beau Carnes. \\ud83d\\udd17 Online code editor: https:\\/\\/repl.it \\ud83d\\udd17 Discord Home Page: https:\\/\\/discord.com\\/ \\ud83d\\udd17 Discord Developer Portal: https:\\/\\/discord.com\\/developers\\/applications \\ud83d\\udcbb Python server code for bot: https:\\/\\/gist.github.com\\/beaucarnes\\/51ec37412ab181a2e3fd320ee474b671 \\ud83d\\udcbb Full code on repl.it: https:\\/\\/repl.it\\/@BeauCarnes\\/Encourage-Bot \\u2b50\\ufe0f Course Contents \\u2b50\\ufe0f \\u2328\\ufe0f (00:00) Introduction \\u2328\\ufe0f (01:18) Creating a Discord Server \\u2328\\ufe0f (01:52) Creating a Bot User \\u2328\\ufe0f (06:05) Starting a Project in Repl.it \\u2328\\ufe0f (09:33) Coding a Basic Discord Bot \\u2328\\ufe0f (20:14) Improving the Bot \\u2328\\ufe0f (33:35) Using the Repl.it Database to Store Bot Settings \\u2328\\ufe0f (56:09) Testing the Bot \\u2328\\ufe0f (58:42) Creating a Web Server for the Bot \\u2328\\ufe0f (1:03:36) Connecting Uptime Robot So Bot Runs Continuously \\u2328\\ufe0f (1:05:21) Creating a GitHub Discord Bot Using Webhooks Special thanks to Repl.it for providing a grant that made this course possible. -- Learn to code for free and get a developer job: https:\\/\\/www.freecodecamp.org Read hundreds of articles on programming: https:\\/\\/freecodecamp.org\\/news And subscribe for new videos on technology every day: https:\\/\\/youtube.com\\/subscription_center?add_user=freecodecamp\",\"221\":\"Happy to make it right :D Enjoy!! nitter.net\\/terjeholden\\/status\\/1337163421305847808#m\",\"3363\":\"Stack Exchange Podcast - Episode #35 - Scott Hanselman by The Stack Overflow Podcast\",\"3601\":\"In just 20 years, software engineering has shifted from architecting monoliths with a single database and centralized state to microservices where everything is distributed across multiple containers, servers, data centers, and even continents. Distributed architectures have enabled developers to scale and meet the needs of an increasingly connected world. Distributing things also introduces a whole new world of problems, many of which were previously solved by monoliths. In this article, I\\u2019ll discuss how we reached this point with a brief stroll through the history of networked applications. After that, we\\u2019ll talk about Temporal\\u2019s stateful execution model and how it attempts to solve the problems introduced by service-oriented architectures (SOA). In full disclosure, I\\u2019m the Head of Product for Temporal, so I might be biased, but I think this approach is the future. A short history lesson Twenty years ago, developers almost always built monolithic applications. The model is simple, consistent, and similar to the experience you get programming in a local environment. Monoliths by nature rely on a single database, which means all state is centralized. A monolith can mutate any of its state within a single transaction, which means it yields a binary outcome\\u2014it worked or it didn\\u2019t. There is zero room for inconsistency. Therefore, monoliths provided a great experience for developers as they meant there was no chance of failed transactions resulting in an inconsistent state. In turn, this meant developers didn\\u2019t have to constantly write code to guess at the state of things. For a long time, monoliths just made good sense. There weren\\u2019t a ton of connected users, which meant the scale requirements for software was minimal. Even the biggest of software giants were operating at a scale that seems minuscule today. There were a handful of companies like Amazon and Google that were running at \\u201cscale,\\u201d but they were the rare exception, not the rule. People like software Over the last 20 years, demand for software wouldn\\u2019t stop growing. Today, applications are expected to serve a global market from day one. Companies like Twitter and Facebook have made 24\\/7 always-online table stakes. Software isn\\u2019t just powering things behind the scenes anymore, it\\u2019s become the end-user experience itself. Every company is now expected to have software products. Reliability and availability are no longer features, they are requirements. Unfortunately, monoliths start to fall apart when scale and availability become requirements. Developers and businesses needed to find ways to keep up with rapid global growth and demanding user expectations. They began looking for alternative architectures that would alleviate the scalability issues they were experiencing. The answer they found was microservices (well, service-oriented architectures). Microservices seemed great initially because they enabled applications to be broken down into relatively self-contained units that could be scaled independently. And because each microservice maintained its own state it meant your application was no longer limited to what fit on a single machine! Developers could finally build applications that met the scale demands of an increasingly connected world. Microservices also brought flexibility to teams and companies as they provided clear lines of responsibility and separation for organizational architectures. No such thing as a free lunch While microservices solved the scalability and availability issues that had been fundamentally blocking software growth, not all was well. Developers began to realize that microservices came with some serious drawbacks. With monoliths, there was generally one database instance and one application server. And since a monolith cannot be broken down, there are only two practical options for scaling. The first option is vertical scaling which means upgrading hardware to increase throughput\\/capacity. Vertical scaling can be efficient but it\\u2019s costly and definitely not a permanent solution if your application needs keep growing. If you vertically scale enough, you eventually run out of hardware to upgrade. The second option is horizontal scaling, which in the case of a monolith means just creating copies of itself so that each serves a specific set of users\\/requests etc. Horizontally scaling monoliths results in resource underutilization and at high enough scales just plain won\\u2019t work. This is not the case with microservices, whose value comes from the ability to have multiple \\u201ctypes\\u201d of databases, queues, and other servers which are scaled and operated independently. But the first issue people noticed when they switched to microservices was that they had suddenly become responsible for a lot of different types of servers and databases. For a long time, this aspect of microservices wasn\\u2019t addressed and developers and operators were left to solve it themselves. Solving the infrastructure management issues that come with microservices is tough, which left applications unreliable at best. Demand is the ultimate vehicle of change. As microservices adoption increased rapidly, developers became increasingly motivated to solve their underlying infrastructure problems. Slowly but surely, solutions started to appear, and technologies like Docker, Kubernetes, and AWS Lambda stepped in to fill the void. Each of these technologies greatly reduced the burden of operating a microservice infrastructure. Instead of having to write custom code that handles orchestrating containers and resources, developers could rely on tools to do the work for them. Now In 2020, we\\u2019ve finally reached a point where the availability of our infrastructure isn\\u2019t sabotaging the reliability of our applications. Great work! Of course, we haven\\u2019t entered a utopia of perfectly stable software. Infrastructure is no longer the source of application unreliability; the application code is. The other problem with microservices With monoliths, developers write code that makes stateful changes in a binary way. Things happened or they didn\\u2019t. With microservices, the state of the world became distributed across different servers. Changing application state now required simultaneously updating different databases. This introduced a possibility that one DB would be successfully updated but the others could be down, leaving you stuck in an inconsistent middle state. But since services were the only answer to horizontal scalability, developers had no other path forward. The fundamental problem with distributing state across services is that every call to an external service is an availability dice-roll. Developers can of course choose to ignore the problem in their code and assume every external dependency they call will always succeed. But if it\\u2019s ignored, it means one of those down-stream dependencies could take the application down without warning. As a result, developers were forced to adapt their existing monolith-era code to add checks that guessed to see if an operation failed in the middle of a transaction. In the below code, the developer has to constantly retrieve the last-recorded state from the ad-hoc myDB store to avoid potential race conditions. Unfortunately, even with this implementation there are still race conditions. If account state changes without also updating myDB, there is room for inconsistency. public void transferWithoutTemporal( String fromId, String toId, String referenceId, double amount, ) { boolean withdrawDonePreviously = myDB.getWithdrawState(referenceId); if (!withdrawDonePreviously) { account.withdraw(fromAccountId, referenceId, amount); myDB.setWithdrawn(referenceId); } boolean depositDonePreviously = myDB.getDepositState(referenceId); if (!depositDonePreviously) { account.deposit(toAccountId, referenceId, amount); myDB.setDeposited(referenceId); } } Unfortunately, it\\u2019s impossible to write bug-free code, and generally, the more complex the code, the higher likelihood for bugs. As you might expect, code that deals with the \\u201cmiddle\\u2019 is not only complex but also convoluted. Some reliability is better than none, so developers are forced to write this inherently buggy code to maintain the end-user experience. This costs developers time and energy and costs their employers lots of money. While microservices were great for scaling, they came at the price of enjoyability and productivity for developers and reliability for applications. Millions of developers are wasting time every day reinventing one of the most reinvented wheels, reliability boilerplate code. Current approaches for working with microservices simply do not reflect the reliability and scalability requirements of modern applications. Temporal So, now comes the part where we pitch you our solution. To be clear, this isn\\u2019t endorsed by Stack Overflow. And we are not saying it\\u2019s perfect yet. We want to share our ideas and hear your thoughts. What better place to get feedback on improving code than Stack? Until today, there was no solution that enabled developers to use microservices without running into these issues I laid out above. You could test and simulate failure states, writing code to anticipate breakdowns, but these issues would still happen. We believe Temporal solves this problem. Temporal is an open-source (MIT, no shenanigans), stateful, microservice orchestration runtime. Temporal has two major components: a stateful backend layer which is powered by the database of your choice and a client-side framework in one of the supported languages. Applications are built using a client-side framework and plain old code which automatically persists state changes to the backend while your code runs. You are free to use the same dependencies, libraries, and build chains that you would rely on when building any other application. To be clear, the backend itself is highly distributed so this isn\\u2019t a J2EE 2.0 situation. In fact, the distributed nature of the backend is exactly what enables nearly infinite horizontal scaling. Temporal aims to provide consistency, simplicity, and reliability for the application layer just like Docker, Kubernetes and serverless did for infrastructure. Temporal provides a number of highly-reliable mechanisms for orchestrating microservices but the most important is state preservation. State preservation is a Temporal feature that uses event sourcing to automatically persist any stateful change in a running application. That\\u2019s to say if the computer running your Temporal workflow function crashes, the code will be resumed automatically on a different computer like the crash never happened. This even includes local variables, threads, and other application-specific state. The best way to understand how this feature works, is by an analogy. As a developer today, you\\u2019re most likely relying on version control SVN (it\\u2019s the OG Git) to track the changes you make to your code. The thing about SVN, is that it\\u2019s not snapshotting the comprehensive state of your application after each change you make. SVN works by only storing new files and then references existing files avoiding the need to duplicate them. Temporal is sort of (again rough analogy) like SVN for the stateful history of running applications. Whenever your code modifies the application state, Temporal automatically stores that change (not the result) in a fault-tolerant way. This means that Temporal cannot only restore crashed applications, but also roll them back, fork them and much more. The result is that developers no longer need to build applications with the assumption the underlying server can fail. As a developer, this feature is like going from manually saving (ctrl-s) documents after every letter you type to autosave in the cloud with Google Docs. It\\u2019s not just that you\\u2019re not manually saving anymore, there\\u2019s no longer a single machine associated with that document. State preservation means developers write far less of the tedious, boilerplate code that was initially introduced by microservices. It also means that the ad-hoc infrastructure \\u2014 like standalone queues, caches, and databases \\u2014 is no longer needed. This reduces ops burden and the overhead of adding new features. It also makes onboarding new hires much easier because they no longer need to ramp up on the messy and domain-specific state management code. State preservation also comes in another form: \\u201cdurable timers.\\u201d Durable timers are a fault-tolerant mechanism that developers leverage through the Workflow.sleep command. In general Workflow.sleep functions exactly like the language native sleep command. But with Workflow.sleep you can safely sleep for any period of time, no matter how long. There are many Temporal users with workflows that sleep for weeks or even years. To achieve this, the Temporal service persists durable timers in the underlying datastore and tracks when the corresponding code needs to be resumed. Again, even if the underlying server crashes (or you just shut it down), the code will be resumed on an available machine when the timer is intended to fire. Sleeping workflows do not consume resources so you can have millions of sleeping workflows with negligible overhead. This might all seem very abstract so here is an example of working Temporal code: public class SubscriptionWorkflowImpl implements SubscriptionWorkflow { private final SubscriptionActivities activities = Workflow.newActivityStub(SubscriptionActivities.class); public void execute(String customerId) { activities.onboardToFreeTrial(customerId); try { Workflow.sleep(Duration.ofDays(180)); activities.upgradeFromTrialToPaid(customerId); while (true) { Workflow.sleep(Duration.ofDays(30)); activities.chargeMonthlyFee(customerId); } } catch (CancellationException e) { activities.processSubscriptionCancellation(customerId); } } } Outside of state preservation, Temporal offers a suite of mechanisms for building reliable applications. Activity functions are invoked from within workflows, but the code running inside an activity is not stateful. Although they aren\\u2019t stateful, Activities come with automatic retries, timeouts, and heartbeats. Activities are very useful for encapsulating code that has the potential to fail. For example, say that your application relies on a bank\\u2019s API that is often unavailable. With a traditional application, you would need to wrap any code that calls the bank API with numerous try\\/catch statements, retry logic, and timeouts. But if you call the bank API within an activity, all of these things are provided out of the box, which means if the call fails, the activity will be retried automatically. Retries are great, but sometimes the unreliable service is one you own and you prefer to avoid DDoSing it. For this reason, activity calls also support timeouts, which are backed by durable timers. This means you can have activities wait hours, days, or weeks between retry attempts. This is especially great for code that you need to succeed but aren\\u2019t concerned about how fast it happens. Caption: This video explains the Temporal programming model in 2 minutes Another powerful aspect of Temporal is the visibility it provides into running applications. The visibility API provides a SQL-like interface to query metadata from any workflow (running or otherwise). It\\u2019s also possible to define and update custom metadata values from directly within a workflow. The visibility API is great for Temporal operators and developers, especially when debugging during development. Visibility even supports applying batch actions to the result of a query. For example, you can send a kill signal to all workflows that match your query of creation time \\/codecode\\/codepre class=\\\"s-code-block wp-block-code\\\"code\\/code\\/preh2 id=\\\"h-conclusion\\\"\\/h2a href=\\\"https:\\/\\/martinfowler.com\\/bliki\\/MicroservicePremium.html\\\"\\/aa href=\\\"http:\\/\\/temporal.io\\\"\\/aa rel=\\\"nofollow\\\" href=\\\"https:\\/\\/stackoverflow.blog\\/2020\\/11\\/23\\/the-macro-problem-with-microservices\\/\\\"\\/aa rel=\\\"nofollow\\\" href=\\\"https:\\/\\/stackoverflow.blog\\\"\\/a\",\"3388\":\"In this week\\u2019s frightening episode, Joel gets a visit from his very own Annie Wilkes, er, number one fan: Genius.com CEO Tom Lehman. Meanwhile, it wouldn\\u2019t be a Halloween show without something dying: This year, it\\u2019s the Experts Exchange paywall. Finally, David forgets to turn off his phone and gets called mid-recording by a recruiter, and we decide to tape their increasingly odd conversation so we can share it with you, our listeners.\",\"3516\":\"Earlier this week, New Jersey Governer Phil Murphy announced that the state desperately needed the help of COBOL programmers. The 60-year-old programming language runs the state's unemployment system, and crashed under the historic influx of applications created by the COVID-19 crisis. So, if you're a COBOL programmer listening to this show or know a retired COBOL ace who wants to lend a hand, you can help get folks access to the funds they desperately need. In the second half of the episode, we talk about Ben's many trips to CES over the years a journalist. This annual pilgrimage got him added to lots of email lists from manufacturers and suppliers of electronic components. In the last few weeks, the emails have suddenly shifted: instead of offering widgets and wires, they are pitching the ability to make and deliver critical medical supplies. We dig into the ways in which technology, hardware, and manufacturing have changed over the last few decades and the ripple effects that massive global transformation is having today.\",\"3539\":\"Stack Overflow Podcast - Episode #27 by The Stack Overflow Podcast\",\"1844\":\"The Django framework comes with a powerful administrative tool called admin. You can use it out of the box to quickly add, delete, or edit any database model from a web interface. But with a little extra code, you can customize the Django admin to take your admin capabilities to the next level. In this course, you\\u2019ll learn how to: Add attribute columns in the model object list Link between model objects Add filters to the model object list Make model object lists searchable Modify the object edit forms Override Django admin templates [ Improve Your Python With \\ud83d\\udc0d Python Tricks \\ud83d\\udc8c \\u2013 Get a short & sweet Python Trick delivered to your inbox every couple of days.\",\"3346\":\"Stack Overflow Podcast - Episode #08 by The Stack Overflow Podcast\",\"3347\":\"Stack Overflow Podcast - Episode #42 by The Stack Overflow Podcast\",\"566\":\"This live session will talk about a strategy to solve low level design questions. This question was asked in a #Google software engineering interview. Watch part 1 for context here: https:\\/\\/youtu.be\\/FKA2KgkkcqY The test cases and concurrency considerations are discussed here. Code: https:\\/\\/github.com\\/coding-parrot\\/projects\\/blob\\/master\\/java-projects\\/src\\/main\\/java\\/logger\\/LogClient.java System Design Video Course: https:\\/\\/get.interviewready.io\\/courses\\/system-design-interview-prep System Design book - https:\\/\\/amzn.to\\/2yQIrxH System Design Playlist: https:\\/\\/www.youtube.com\\/playlist?list=PLMCXHnjXnTnvo6alSjVkgxV-VH6EPyvoX You can follow me on: Quora: https:\\/\\/www.quora.com\\/profile\\/Gaurav-Sen-6 LinkedIn: https:\\/\\/www.linkedin.com\\/in\\/gaurav-sen-56b6a941\\/ Twitter: https:\\/\\/twitter.com\\/gkcs_ #LowLevelDesign #SoftwareDevelopment\",\"3272\":\"You can read more about Sham's app, Covid Safe, here. You can find his university bio here. The app isn't live in the iOS or Android app store yet, but you can download an Android demo here and help the team work out the bugs. You can also use that link to find their GitHub community. You can read Paul's take on the contact tracing spec released by Apple and Google here. This is a two part episode, so tune in Friday for the second half.\",\"3951\":\"The purpose of this tutorial is to get an experienced Python programmer up to speed with the basics of the C language and how it\\u2019s used in the CPython source code. It assumes you already have an intermediate understanding of Python syntax. That said, C is a fairly limited language, and most of its usage in CPython falls under a small set of syntax rules. Getting to the point where you understand the code is a much smaller step than being able to write C effectively. This tutorial is aimed at the first goal but not the second. In this tutorial, you\\u2019ll learn: What the C preprocessor is and what role it plays in building C programs How you can use preprocessor directives to manipulate source files How C syntax compares to Python syntax How to create loops, functions, strings, and other features in C One of the first things that stands out as a big difference between Python and C is the C preprocessor. You\\u2019ll look at that first. Note: This tutorial is adapted from the appendix, \\u201cIntroduction to C for Python Programmers,\\u201d in CPython Internals: Your Guide to the Python Interpreter. Free Download: Get a sample chapter from CPython Internals: Your Guide to the Python 3 Interpreter showing you how to unlock the inner workings of the Python language, compile the Python interpreter from source code, and participate in the development of CPython. The C Preprocessor The preprocessor, as the name suggests, is run on your source files before the compiler runs. It has very limited abilities, but you can use them to great advantage in building C programs. The preprocessor produces a new file, which is what the compiler will actually process. All the commands to the preprocessor start at the beginning of a line, with a # symbol as the first non-whitespace character. The main purpose of the preprocessor is to do text substitution in the source file, but it will also do some basic conditional code with #if or similar statements. You\\u2019ll start with the most frequent preprocessor directive: #include. #include #include is used to pull the contents of one file into the current source file. There\\u2019s nothing sophisticated about #include. It reads a file from the file system, runs the preprocessor on that file, and puts the results into the output file. This is done recursively for each #include directive. For example, if you look at CPython\\u2019s Modules\\/_multiprocessing\\/semaphore.c file, then near the top you\\u2019ll see the following line: #include \\\"multiprocessing.h\\\" This tells the preprocessor to pull in the entire contents of multiprocessing.h and put them into the output file at this position. You\\u2019ll notice two different forms for the #include statement. One of them uses quotes (\\\"\\\") to specify the name of the include file, and the other uses angle brackets (). The difference comes from which paths are searched when looking for the file on the file system. If you use for the filename, then the preprocessor will look only at system include files. Using quotes around the filename instead will force the preprocessor to look in the local directory first and then fall back to the system directories. #define #define allows you to do simple text substitution and also plays into the #if directives you\\u2019ll see below. At its most basic, #define lets you define a new symbol that gets replaced with a text string in the preprocessor output. Continuing in semphore.c, you\\u2019ll find this line: #define SEM_FAILED NULL This tells the preprocessor to replace every instance of SEM_FAILED below this point with the literal string NULL before the code is sent to the compiler. Read the full article at https:\\/\\/realpython.com\\/c-for-python-programmers\\/ \\u00bb [ Improve Your Python With \\ud83d\\udc0d Python Tricks \\ud83d\\udc8c \\u2013 Get a short & sweet Python Trick delivered to your inbox every couple of days.\",\"934\":\"If you\\u2019re coming to Python from a different language, you may not know about a useful tool for working with loops, Python\\u2019s built-in enumerate function. This week on the show, David Amos is here, and he has brought another batch of PyCoder\\u2019s Weekly articles and projects. Along with the Real Python article covering the details of the enumerate function, we also talk about another article about constructing Python graphical user interface elements in PyQt. David shares a couple of resources for data scientists, including an article about skills not taught in data science boot camps, and a project for creating synthetic data. We also cover several other articles and projects from the Python community including, an update about youtubedl, hunting for malicious packages on PyPI, using Python\\u2019s bisect module, 73 examples to help you master f-strings, and game programming in Jupyter notebooks. Course Spotlight: Formatting Python Strings In this course, you\\u2019ll see two items to add to your Python string formatting toolkit. You\\u2019ll learn about Python\\u2019s string format method and the formatted string literal, or f-string. You\\u2019ll learn about these formatting techniques in detail and add them to your Python string formatting toolkit. Topics: 00:00:00 \\u2013 Introduction 00:01:53 \\u2013 The youtube-dl Repository Has Been Restored on GitHub With Help From the Electronic Frontier Foundation 00:04:12 \\u2013 Python enumerate(): Simplify Looping With Counters 00:07:24 \\u2013 Hunting for Malicious Packages on PyPI 00:14:31 \\u2013 Sponsor: Scout APM 00:15:31 \\u2013 Using Python\\u2019s bisect module 00:19:00 \\u2013 73 Examples to Help You Master Python\\u2019s f-Strings 00:21:35 \\u2013 10 Python Skills They Don\\u2019t Teach in Bootcamp 00:27:32 \\u2013 Video Course Spotlight 00:28:28 \\u2013 Python and PyQt: Creating Menus, Toolbars, and Status Bars 00:33:51 \\u2013 SDV: Synthetic Data Generation for Tabular, Relational, Time Series Data 00:38:19 \\u2013 jupylet: Game Programming in Jupyter Notebooks 00:42:59 \\u2013 Thanks and goodbye Show Links: The youtube-dl Repository Has Been Restored on GitHub With Help From the Electronic Frontier Foundation Python enumerate(): Simplify Looping With Counters \\u2013 Once you learn about for loops in Python, you know that using an index to access items in a sequence isn\\u2019t very Pythonic. So what do you do when you need that index value? In this tutorial, you\\u2019ll learn all about Python\\u2019s built-in enumerate(), where it\\u2019s used, and how you can emulate its behavior. Hunting for Malicious Packages on PyPI \\u2013 Jordan Wright installed every package on PyPI to look for malicious content. And he didn\\u2019t just inspect code, he actually ran the packages. Brave soul! Learn how he set-up this project and what he learned on his adventure. Using Python\\u2019s bisect module \\u2013 Python\\u2019s bisect module has tools for searching and inserting values into sorted lists. It\\u2019s one of his \\u201cbatteries-included\\u201d features that often gets overlooked, but can be a great tool for optimizing certain kinds of code. 73 Examples to Help You Master Python\\u2019s f-Strings \\u2013 f-Strings might be one of the most beloved features in Python 3.6+. Here are 73 examples of how to use f-strings to improve your Python code. 10 Python Skills They Don\\u2019t Teach in Bootcamp \\u2013 Here are ten practical and little-known pandas tips to help you take your skills to the next level. Python and PyQt: Creating Menus, Toolbars, and Status Bars \\u2013 In this step-by-step tutorial, you\\u2019ll learn how to create, customize, and use Python menus, toolbars, and status bars for creating GUI applications using PyQt. Projects: jupylet: Game Programming in Jupyter Notebooks SDV: Synthetic Data Generation for Tabular, Relational, Time Series Data Additional Links: Python and PyQt: Building a GUI Desktop Calculator - Real Python article PyQt Layouts: Create Professional-Looking GUI Applications - Real Python article Handling SQL Databases With PyQt: The Basics - Real Python article Synthetic Data Vault (SDV): A Python Library for Dataset Modeling RPP - Episode 7: AsyncIO + Music, Origins of Black, and Managing Python Releases Support the podcast & join our community of Pythonistas\",\"3359\":\"Stack Exchange Podcast - Episode #12 w\\/ Patrick McKenzie by The Stack Overflow Podcast\",\"3280\":\"Chris is the author of the New York Times bestselling books The Long Tail and Free as well as Makers: The New Industrial Revolution. He is lso the CEO of 3DR, founder of the Linux Foundation's Dronecode Project, and founder of the DIY Drones and DIY Robocars communities, including the ArduPilot autopilot project. Not surprisingly, he also created something called GeekDad. If you want to get involved, you can learn how to build your own Donkey Car racer here.\",\"3838\":\"Given a Binary Tree, the task is to find the count of diagonal paths to the leaf of a binary tree such that values of\\u2026 Read More The post Count diagonal paths from a node to a leaf consisting of same valued nodes appeared first on GeeksforGeeks.\",\"3452\":\"Stack Exchange Podcast - Episode #06 by The Stack Overflow Podcast\",\"922\":\"Would you like to clearly understand what\\u2019s happening when you use the Python import keyword? Do you want to use modules more effectively to structure your code? Or maybe you\\u2019re ready to move to the next level with your Django project by adding user management. This week on the show, David Amos is back with another batch of PyCoder\\u2019s Weekly articles and projects. We discuss a Real Python article about advanced techniques and tips for using the Python import keyword. David also talks about another recent article on the site about managing users in Django. We cover several other articles and projects from the Python community including: robot programming in Python, f-strings vs .format(), the rise of Python malware, a hardware Python keyboard, and more. Course Spotlight: Grow Your Python Portfolio With 13 Intermediate Project Ideas Get started on 13 Python project ideas that are just right for intermediate Python developers. They\\u2019ll challenge you enough to help you become a better Pythonista. Topics: 00:00:00 \\u2013 Introduction 00:01:31 \\u2013 The Non-Return of the Python print statement 00:05:46 \\u2013 Python Malware on the Rise 00:13:46 \\u2013 Get Started With Django Part 2: Django User Management 00:19:01 \\u2013 Why Do People Use .format() When f-Strings Exist? 00:27:41 \\u2013 Video Course Spotlight 00:28:45 \\u2013 A Beginner\\u2019s Guide to Robot Programming With Python 00:36:17 \\u2013 Python import: Advanced Techniques and Tips 00:40:56 \\u2013 toolz: A Functional Standard Library for Python 00:46:43 \\u2013 python-keyboard: A Hand-Wired USB & BLE Keyboard Powered by Python 00:51:09 \\u2013 Thanks and Goodbye Show Links: The (Non-)Return of the Python Print Statement \\u2013 Guido van Rossum recently proposed re-introducing the Python print statement. He was completely serious and even though the idea didn\\u2019t gain traction, it\\u2019s interesting to know why he made the proposal. Python Malware on the Rise \\u2013 Python\\u2019s low barrier to entry, enormous ecosystem, and rapid development process has made it one of he most desired programming languages for millions of developers around he globe\\u2014including malicious actors. Read the article at the link above and follow the discussion on Hacker News. Get Started With Django Part 2: Django User Management \\u2013 In this step-by-step tutorial, you\\u2019ll learn how to extend your Django application with a user management system, complete with email sending and third-party authentication. Why Do People Use .format() When f-Strings Exist? \\u2013 f-Strings aren\\u2019t exactly a drop-in replacement for .format(). A Beginner\\u2019s Guide to Robot Programming With Python \\u2013 Get a crash course in programming autonomous robots with Python. Don\\u2019t have a robot laying around? No problem! Use this open-source simulator to get started. Python import: Advanced Techniques and Tips \\u2013 The Python import system is as powerful as it is useful. In this in-depth tutorial, you\\u2019ll learn how to harness this power to improve the structure and maintainability of your code. Projects: toolz: A Functional Standard Library for Python python-keyboard: A Hand-Wired USB & BLE Keyboard Powered by Python Additional Links: Finding secrets by decompiling Python bytecode in public repositories Python String Formatting Best Practices: Real Python article Remapping Python Opcodes Big Trak Introduction to Decorators: Power Up Your Python Code - PyCon 2020 Tutorial M60 Mechanical Keyboard Support the podcast & join our community of Pythonistas\",\"3327\":\"Before we can move on to business as usual, the crew has to recount each and every way in which our first live podcast went spectacularly wrong. Laggy video, overwhelming audio, and too many silly hats. But hey, DevAroundTheSun did raise over $60,000 to help folks impacted by the COVID-19 crisis. We chat about Patio 11's law, and the incredible percentage of successful software startups that never gain any recognition in the mainstream tech press, but manage to build and grow successful, profitable operations. The debate rages on about how permanent this new world of completely remote work will be. Which companies will return to renting expensive officers and pampering employees with food and snacks and which companies will decide to start hiring across the globe and cutting back on IRL engagements. Lastly we chat about Typescript, why it's getting so popular, and how it reminds Jenn of her days as an academic teaching Java to aspiring computer science majors. To learn more about Jenn, check her out her website. And to see what her company has been working on, head over to Glitch and Glimmer.\",\"1244\":\"Learning to Simulate Dynamic Environments with GameGAN: https:\\/\\/nv-tlabs.github.io\\/gameGAN\\/ Link to paper: https:\\/\\/arxiv.org\\/pdf\\/2005.12126.pdf GameGAN short video: https:\\/\\/www.youtube.com\\/watch?v=4OzJUNsPx60&feature=youtu.be Channel membership: https:\\/\\/www.youtube.com\\/channel\\/UCfzlCWGWYyIQ0aLC5w48gBQ\\/join Discord: https:\\/\\/discord.gg\\/sentdex Support the content: https:\\/\\/pythonprogramming.net\\/support-donate\\/ Twitter: https:\\/\\/twitter.com\\/sentdex Instagram: https:\\/\\/instagram.com\\/sentdex Facebook: https:\\/\\/www.facebook.com\\/pythonprogramming.net\\/ Twitch: https:\\/\\/www.twitch.tv\\/sentdex\",\"3364\":\"You can read about GraphQL here and Apollo here. Cassidy Williams, who curates our newsletter, wrote about her experience as an early adopter of the technology last summer. You can find more on Meteor here. Schmidt also helped create Monument, which he describes as \\\"an affordable live\\/work art event space in downtown San Francisco. The upstairs is 24 private bedrooms and studio spaces and the downstairs is a 200+ capacity person event venue and makerspace. Our goal is to connect creative people across different fields, and in particular build bridges between art and technology.\\\"\",\"3485\":\"Stack Overflow Podcast - Episode #17 by The Stack Overflow Podcast\",\"3581\":\"The Stack Overflow podcast is celebrating a milestone: Episode 300! As we ring in the new year we\\u2019ve brought on the man who co-created this podcast and co-founded Stack Overflow, Joel Spolsky. We chat about the origins of Stack, ideas for a new kind of \\u201csocial media,\\u201d and what\\u2019s happening with Joel\\u2019s latest venture, Hash.ai. Episode Notes You can find the first episode of the SO podcast here. It was conducted over Asterix, open source telephony software that allowed for fancy operations like voice messaging and recording calls! What would social software look like if we designed them to remove commerce and popularity? Are services like Mightybell an interesting example of where we might be headed? If you want to build a model of something \\u2013 say traffic patterns in your town or a hypothetical zombie invasion \\u2013 you should check out a new project Joel is involved in, Hash.ai. Transcript The post Podcast 300: Welcome to 2021 with Joel Spolsky appeared first on Stack Overflow Blog.\",\"1856\":\"If you're coming to Python from a different language, you may not know about a useful tool for working with loops, Python's built-in enumerate function. This week on the show, David Amos is here, and he has brought another batch of PyCoder's Weekly articles and projects. Along with the Real Python article covering the details of the enumerate function, we also talk about another article about constructing Python graphical user interface elements in PyQt. [ Improve Your Python With \\ud83d\\udc0d Python Tricks \\ud83d\\udc8c \\u2013 Get a short & sweet Python Trick delivered to your inbox every couple of days.\",\"3415\":\"Joocelyn hosts the Git Cute podcast, which you can find here. She's working on a book about seniority in the software industry, which you can pre-order here. You can follow her on Twitter at javavvitch. Our lifeboat badge goes to LMc for explaining how one can: Count the Letter Frequency in a String with Python\",\"530\":\"Program Correctness is incredibly important in computing - particularly in hardware design. Professor Graham Hutton takes us through a simple example using arithmetic. EXTRA BITS: https:\\/\\/youtu.be\\/TByzerWLKg8 https:\\/\\/www.facebook.com\\/computerphile https:\\/\\/twitter.com\\/computer_phile This video was filmed and edited by Sean Riley. Computer Science at the University of Nottingham: https:\\/\\/bit.ly\\/nottscomputer Computerphile is a sister project to Brady Haran's Numberphile. More at http:\\/\\/www.bradyharan.com\",\"572\":\"Another addition to the Software Engineering 101 series. Why and how is dependency injection helpful for clean code? Code: https:\\/\\/github.com\\/coding-parrot\\/projects Designing Data Intensive Applications - https:\\/\\/amzn.to\\/2yQIrxH System Design Playlist: https:\\/\\/www.youtube.com\\/playlist?list=PLMCXHnjXnTnvo6alSjVkgxV-VH6EPyvoX Become a channel member! https:\\/\\/www.youtube.com\\/channel\\/UCRPMAqdtSgd0Ipeef7iFsKw\\/join You can follow me on: Quora: https:\\/\\/www.quora.com\\/profile\\/Gaurav-Sen-6 LinkedIn: https:\\/\\/www.linkedin.com\\/in\\/gaurav-sen-56b6a941\\/ Twitter: https:\\/\\/twitter.com\\/gkcs_ #DependencyInjection #SoftwareDevelopment #Onboarding\",\"3486\":\"Nicolas will be the first to tell you that the version of Stack Overflow he helped to create began as a clone. It developed into a very popular site on RuNet and through persistent emails, Nic was able to find a way to make it an official part of the Stack family. Nic talks a bit about the unique culture of SO's Russian community and how each regional version of SO, from English to Spanish to Japanese, has developed its own etiquette and approach to moderation and Q&A. Nic and Sara also share some updates on their love of Jupyter Notebooks and how they make it easy to combine blogging with data analysis and presentation. Shout out to our life boat badge of the week, Aliaksandr Kavalenka , for answering the question: How to use DatePickerDialog in Kotlin?\",\"3841\":\"Given two arrays A[] and B[] consisting of N integers and an integer K, the task is to find the maximum value of B[i] +\\u2026 Read More The post Maximize value of a pair from two given arrays based on given conditions appeared first on GeeksforGeeks.\",\"917\":\"Wouldn\\u2019t it be nice to a use a form of version control for data? Something that would allow you to track and version your datasets and models. Well, that\\u2019s what the tool called DVC is designed to do. This week on the show, David Amos is here and he\\u2019s brought another batch of PyCoder\\u2019s Weekly articles and projects. David starts with a Real Python article titled, \\u201cData Version Control With Python and DVC\\u201d. We also cover several other articles and projects from the Python community including: where to get exposure to well-written code, delegation \\u2013 composition and inheritance, good Python project ideas for high school students, never run Python in your downloads folder, and more. We also have a special guest this week. I talk to Sadie Parker, who recently joined the Real Python team to help create and edit transcripts for all the Real Python video courses. We talk about how to take advantage of all the features this new resource provides. Sadie also discusses how she uses Python to speed up and simplify the editing process. The transcripts and closed captions are now live on the website for all new courses, and we are working through the back catalog. Course Spotlight: Parallel Iteration With Python\\u2019s zip() Function In this course, you\\u2019ll learn how to use the Python zip() function to solve common programming problems. You\\u2019ll learn how to traverse multiple iterables in parallel and create dictionaries with just a few lines of code. Topics: 00:00:00 \\u2013 Introduction 00:02:01 \\u2013 Data Version Control With Python and DVC 00:08:57 \\u2013 Where Do You Go to Get Exposure to Well-Written Code? 00:13:13 \\u2013 Delegation: Composition and Inheritance in Object-Oriented Programming 00:21:46 \\u2013 What Are Some Good Python Project Ideas for High School Students? 00:26:53 \\u2013 Video Course Spotlight 00:27:48 \\u2013 Never Run Python in Your Downloads Folder 00:35:55 \\u2013 present: A Terminal-Based Presentation Tool With Colors and Effects 00:37:36 \\u2013 Mini Raspberry Pi Boston Dynamics\\u2013inspired Robot 00:41:48 \\u2013 Sadie Parker and Transcripts for Real Python Video Courses 00:59:26 \\u2013 Thanks and Goodbye Show Links: Data Version Control With Python and DVC \\u2013 In this tutorial, you\\u2019ll learn to use DVC, a powerful tool that solves many problems encountered in machine learning and data science. You\\u2019ll find out how data version control helps you to track your data, share development machines with your team, and create easily reproducible experiments! Where Do You Go to Get Exposure to Well-Written Code? \\u2013 Maybe someone needs to start a Python reading club\\u2026 Delegation: Composition and Inheritance in Object-Oriented Programming \\u2013 Delegation is often considered one of the three pillars of object-oriented programming. Learn how to use this powerful concept in Python. What Are Some Good Python Project Ideas for High School Students? \\u2013 Honestly, some of these ideas are good for any beginning Pythonista! Never Run Python in Your Downloads Folder \\u2013 Learn about security issues that exploit how Python interacts with PATH and why you should always think twice about your current working directory. present: A Terminal-Based Presentation Tool With Colors and Effects Mini Raspberry Pi Boston Dynamics\\u2013inspired Robot \\u2013 See how one Redditor taught themselves robotics by building a miniature version of a Boston Dynamic\\u2019s robot dog \\u201cSpot\\u201d using a Raspberry Pi, C++, and Python. Additional Links: Python 3 Module of the Week The Algorithms - Python Awesome Python Applications James Powell: So you want to be a Python expert? | PyData Seattle 2017 Boston Dynamics: Spot WebVTT (Web Video Text Tracks): Wikipedia article webvtt-py: Python module for reading\\/writing WebVTT files pysrt: SubRip (.srt) subtitle parser and writer Srt: A tiny library for parsing, modifying, and composing SRT files Support the podcast & join our community of Pythonistas\",\"3548\":\"Stack Exchange Podcast - Episode #08 w\\/ Marco Arment by The Stack Overflow Podcast\",\"3307\":\"Stack Overflow Podcast - Episode #64 by The Stack Overflow Podcast\",\"942\":\"If you use Python, then you probably have used pip to install additional packages from the Python package index. Part of the magic behind pip is the dependency resolver, and there is a new version of it in the latest version of pip. This week on the show, we have Sumana Harihareswara and Georgia Bullen, who have been working on the recent releases of pip. Sumana is the project manager for pip, and Georgia has been working on pip\\u2019s user experience (UX). The resolver is how pip determines what to install, and in what order, based on package requirements. We talk about how you can help, from updating to the latest release, testing out the new resolver with your projects, and answering surveys about your experiences. A ton of work has gone into making the updates this year. We also talk about the funding of projects like this in the open-source community. Course Spotlight: A Beginner\\u2019s Guide to Pip This course is a great introduction to pip for those who are getting started Python, and for those who want to understand more about what is happening when you install new packages into your environment. It\\u2019s a worthy investment of your time to understand the fundamentals of pip. Show Topics: 00:00:00 \\u2013 Introduction 00:01:41 \\u2013 Pip updates and changes to dependency resolver 00:08:49 \\u2013 Different types of wheels 00:11:12 \\u2013 Pinning package dependencies 00:13:19 \\u2013 Work on the user experience (UX) of pip 00:15:45 \\u2013 Documentation at Python packaging authority and thanks to Thea Flowers 00:16:21 \\u2013 Types of issues that need resolving 00:20:48 \\u2013 Need for reporting issues 00:23:41 \\u2013 Pip usability survey and dependency recipes to test 00:27:21 \\u2013 Call out to open source maintainers to test 00:29:32 \\u2013 Video Course Spotlight 00:30:43 \\u2013 How is this UX work different from Simply Secure 00:34:59 \\u2013 How do you present errors to users? 00:41:14 \\u2013 Pip release timeline for 2020 and into 2021 00:46:38 \\u2013 The dynamics of responsibility and power 00:49:43 \\u2013 What\\u2019s involved in getting more funding into open source? 00:54:10 \\u2013 Grant writing for the PSF 00:57:53 \\u2013 Call to action: How to help with pip? 01:00:54 \\u2013 What are you excited about in the world of Python? 01:04:52 \\u2013 What do you want to learn next? 01:08:22 \\u2013 Thanks and goodbyes Show Links: New pip resolver to roll out this year: Python Software Foundation Changes to the pip dependency resolver in 20.2 (2020): Python Packaging Authority Changes are coming to pip: YouTube Sign-up for pip UX Studies! Upgrade to pip 20.2, plus, changes coming in 20.3: Python Insider Pip team midyear report: July 13, 2020 An Overview of Packaging for Python: PyPA pip dependency resolver changes: Test & Code Podcast What Are Python Wheels and Why Should You Care?: Real Python article Python Wheels and Pass by Reference in Python: Real Python Podcast Ep23 Options for Packaging Your Python Application: Wheels, Docker, and More: Real Python Podcast Ep24 UX Research & Design: 2020 Work on Improving pip\\u2019s user experience Simple Secure: User Research Roadmap update for TUF (The Update Framework) support Exploring CircuitPython with Thea Flowers: Real Python Podcast Ep5 PyPA - Packaging Problems Issue Tracker: Github PEP 458 - Secure PyPI downloads with signed repository metadata Fixing conflicting dependencies: PyPA Finish dependency resolver for pip: Github Announcing the PSF Project Funding Working Group: PSF Sponsor PyPI and related projects Tidelift: Managed open source. Backed by maintainers. Apply for Grants To Fund Open Source Work: changeset Open collective: Make your community sustainable Sustain: Holding a space for conversations about sustaining Open Source Answer these surveys to improve pip\\u2019s usability: Python Software Foundation Breaking Release Bottlenecks \\u2013 What Changeset Can Do On The Art of Python 2019 Python Grab Bag: A Set of Short Plays \\u201cApply for Grants to Fund Open Source Work\\u201d - Sumana Harihareswara: PyOhio 2020 PyGotham TV: 2020 Get paid to write Free software: Cristina - PyGotham 2020 Support the podcast & join our community of Pythonistas\",\"3563\":\"\\\"Sorry I missed your comment of many months ago. I no longer build software; I now make furniture out of wood.\\\" Life is lived in stages. Most people are working remotely these days, but offices may return, and even if they don't, these skills could come in handy. Teamwork, persuasion, communication, and leadership, just a few of the things you can learn in this Technion course. Big thanks to TwilioQuest, which has gotten Ben, the worst coder in the world, practicing his Javascript skills again. What gives you that special feeling: a nice, sharp recursive function or a deep, winding ternary statement? Paul and Sara debate the finer points of feeling smugly satisfied with your own code.\",\"2823\":\"SQL injection is a common hacking technique used to retrieve or destroy data from a database without permission. It is considered one of the top web application security risks. In this course, you will learn how SQL injection works so you are able to defended against this hacker attack in your own web applications. \\u270f\\ufe0f This course was developed by Sagar Bansal. Check out his channel: https:\\/\\/www.youtube.com\\/channel\\/UCdsl8fYtJM2Mw-HueDy2G4Q \\u2b50\\ufe0f Course Contents \\u2b50\\ufe0f \\u2328\\ufe0f (0:00:00) Introduction \\u2328\\ufe0f (0:02:33) What is SQL Injection \\u2328\\ufe0f (0:06:56) Lab Setup \\u2328\\ufe0f (0:11:04) Basics of SQL \\u2328\\ufe0f (0:16:33) Classic Injection Bypass \\u2328\\ufe0f (0:26:01) Types of SQL Injection \\u2328\\ufe0f (0:30:21) Union Based SQL Injection \\u2328\\ufe0f (0:41:08) Error Based SQL Injection \\u2328\\ufe0f (0:53:27) Boolean Based SQL Injection \\u2328\\ufe0f (1:03:04) Time-Based SQL Injection \\u2328\\ufe0f (1:11:39) Semi-Automated SQL Injection \\u2328\\ufe0f (1:24:02) Fully Automated SQL Injection \\u2328\\ufe0f (1:37:11) Defending Against SQL Injections -- Learn to code for free and get a developer job: https:\\/\\/www.freecodecamp.org Read hundreds of articles on programming: https:\\/\\/freecodecamp.org\\/news And subscribe for new videos on technology every day: https:\\/\\/youtube.com\\/subscription_center?add_user=freecodecamp\",\"3596\":\"Would you work for free? It is a simple but loaded question that requires additional context. Is it working to help a friend do something? Is it work that you would enjoy? Does the act of working for free give you some level of satisfaction? Your gut reaction to the question may have been a hearty, \\u201cNo,\\u201d but many people volunteer for a variety of things all the time, so people will work for free when there is something in it they enjoy. Open source development could be looked at as a form of volunteering. Many developers have donated their time to either maintain or contribute to open source projects. These developers may not care about being compensated for their time\\u2014they are just happy for the experience, challenge or may just like helping others. Developers that do this for nothing more than a pat on the back are great, however, it can be difficult to rely upon for the open source ecosystem at large. Time commitments are likely the single largest issue at play here, as developers are often working on these projects in their spare time. Between work, sleep, and hanging out with friends and family, having a steady stream of volunteer commitment to a project can be difficult. This issue is magnified depending on the project itself and the skillsets required to do large, meaningful contributions. Funding open source projects is a way to try and address this. Rather than have developers do open source work in their spare time, they can be financially compensated for it as part of their regular workday instead. The problem with paying for a developer\\u2019s contributions to open source projects is how that funding is raised and who pays for it. Donations are commonly used as a basic means to raise funds\\u2014whether that be GitHub Sponsors, Open Collective, or Buy Me A Coffee, etc. While donations are very much appreciated by those who receive it, it relies on the goodwill of others and may only be a sustainable source of funding for extremely popular projects. This leaves the vast majority of projects without adequate funding, though they may not be any less worthy of it. If open source funding cannot rely on donations, it needs to charge some sort of fee somewhere in the process. But, you say, isn\\u2019t open source supposed to be free? Open source is not about free software, it is about freedom of software. As described by the Open Source Initiative (OSI): Open source enables a development method for software that harnesses the power of distributed peer review and transparency of process. The promise of open source is higher quality, better reliability, greater flexibility, lower cost, and an end to predatory vendor lock-in. So what is exactly stopping open source developers charging for their work? Potential licensing woes There might not be anything as divisive when talking about open source as discussing project licensing. There are licenses that restrict how a project is used or who uses it, and others with no restrictions at all. Depending who you talk to, the mention of a copyleft license like GPL is enough to make some developers run to alternative projects under a more permissive license like the MIT license. Some of these restrictions in these licenses may seem to be in opposition to openness and freedom that the OSI\\u2019s definition of open source proclaims. It may be better to think of these projects as \\u201copenly developed\\u201d rather than to a strict definition of open source. These types of projects are equally deserving of funding whether or not they are strictly open source. It is with their licensing, however, that these projects may be even more greatly impacted in seeking funding. Having funding for an open source project requires people to know about and use the project. Developers that want to use the project need to agree to the license and, unless they moonlight as legal experts, understanding the legal ramifications of licenses can be difficult. This is what makes newer and more restrictive licenses less likely to be accepted\\u2014not every license that a developer encounters can be run by a lawyer to ensure compliance. It is, however, in these more complex licenses configurations where open source developers often attempt to charge for their work. For example, having a dual license of MIT for non-commercial and a custom license for commercial purposes. Developers may have a good grasp of the permissive MIT license however may need to avoid the same project at their place of work due to the commercial licensing stipulation. This is an important distinction when considering who would be funding open source development. The sources of funding When looking to find funding, consider the different groups who may be consuming your open source project. You have other developers also doing open source work, non-commercial closed source work like what might be a hobby or side project, and commercial projects which may be open source or not. Each of these groups have different priorities and expectations. Other developers with their own open source projects might seem like a good candidate\\u2014they understand and appreciate open source work and the time and effort involved. The problem here is that these developers would likely be using far more projects than they can reasonably fund. There is also the concern of this effectively being a closed ecosystem where developers are paying other developers who themselves are paying other developers. This creates a cycle where not only is there no additional money exchanging hands but the money being shared is slowly decreased through things like processing fees. This is not a viable solution to the funding problem. Like developers who may use the project in their own open source work, those that have closed source hobby or side projects that depend on you are likely from the same pool of developers as the ones who also work on open source. This is again the cycle of developers paying developers with no real capital investment being added into the open source ecosystem. It might be better than nothing but is not a viable strategy long term. Commercial use, on the other hand, is a good potential source of new capital for the ecosystem. Companies that use open source are likely gaining some advantage by using your project compared to another solution, potentially making them more efficient or being able to provide specific services to their own customers. Companies already pay for various pieces of software so one extra cost may not seem like a big deal. Unfortunately, but predictably, companies would like to keep their money so unless the case is compelling, they may opt for free solutions. The value proposition for companies To put it simply, why would a company want to fund your project? Companies in general don\\u2019t gravitate towards the idea of \\u201cdoing the right thing\\u201d for the sake of it. Companies, however, may fund something if they can get something desirable in return. Ideally then, a company needs to be encouraged to use what you\\u2019ve built but still want a little more out of the deal. Perhaps it is security, not in the technical sense but the peace of mind that the open source project won\\u2019t disappear next week. Sure, the source code might still be available but unless they have the technical prowess to build and maintain it themselves, the added security that funding the project could provide may be enough. In other cases, it may be to ensure that bugs in the project are resolved with a higher priority or speciality features are made that help the company. Due to the long term nature of these reasons to fund a project, the type of funding most appropriate here is a recurring payment to help maintain the project. You wouldn\\u2019t want to have a one time payment and be on the hook for maintenance for the next 10+ years, you would want something to sustain the project over however long the life of the project is. For companies to take these approaches though, they need to establish that the costs with funding the project are worth the risks of not funding it. The risks, however, heavily depend on how the open source project is being used, and for how long it may be used. In the short term, it may be companies with new projects integrating your project as a critical component. In the long term, it may be companies with fragile legacy projects which need support for older versions of your project. If your project broke or didn\\u2019t work in a manner they needed, it could cost them a large amount of money if their entire system fails. It is these cases where funding your project can reduce their risks, in turn helping their business continuity. While that may seem straightforward or logical, it is not that simple. Even critically important projects that deal with security and cryptography can receive minimal funding. There is a great post by Aaron Stannard about the sustainability of open source projects with a case study about OpenSSL. Prior to the \\u201cHeartbleed\\u201d vulnerability, OpenSSL received about US$2000 a year in donations\\u2014not very much for something that is used so widely. After the vulnerability, they received about US$9000 in donations. While it is difficult to put a total cost to the vulnerability, it has been estimated to be as high as $500 million\\u2014imagine the project even getting a fraction of that in funding prior to the vulnerability being announced. Instead of funding the project directly, some companies may have their own developers contribute code back to the project. On the surface, this is great as having additional contributors can take a lot of work off of the maintainer. Even this has issues, as their goals and yours may not align. They might contribute new features you would need to support or bug fixes that break other workflows, changing how you spend your time on the project. Instead of writing any code yourself, you may be only running tests, reviewing pull requests, and validating issues. That may still put you ahead timewise; however; it may not be what you want to be spending your time on. While I wouldn\\u2019t want to discourage companies from contributing relevant, high quality pull requests, it is being mindful of what is best for the project, not taking over it. If the value proposition is not there for the company, or the support they are providing is hindering more than it is helping, you may have to take your efforts a step beyond being an open source maintainer. You may need to create a company around your project. Turning projects to products Open source projects often have a very narrow scope. Maybe you have built a web crawler, an API client, a date format converter, a calendar widget, etc. By themselves, these are hard to market and sell as a company, and you could be stuck in the same funding situation you were when you started. Instead, you may want to try and repackage up the project in a larger product that would be marketable. If you built a web crawler, maybe you are building a web service to automatically crawl sites with a simple API. If you built a date format converter, maybe a service that does language and formatting detection in strings and web pages. Different projects have different potential products and business models that could be shaped around them, and while not every project could easily do this, those that can find customers for this new product have found a way to help fund their open source development. Projects from GitLab to re:dash have worked this way, taking a project and putting a product-spin on it. Both of these examples used a subscription model to bring income in for their project, allowing them to focus on their work and grow their teams. This in turn allowed more features to be added fast and for bugs to be fixed more quickly. Starting a company to keep sustaining open source projects is a big undertaking. It can be an extremely time intensive process getting the company off the ground, requiring you to familiarize yourself with business accounting and other legal work, before even getting back to maintaining the code itself. All of this is easier said than done and skips over the true nature of wanting funding for these projects. Different developers have poured their heart into their projects, dedicating large amounts of time and effort into making solutions, and sharing them with the world. While the code may live online somewhere forever, an open source project only truly survives if someone maintains it. The human side of open source To get the most well rounded understanding of open source funding problems, it is important to see multiple perspectives from other people in the community. There are two people I\\u2019ve followed for a while that have put a lot of time and effort into various open source projects. James South, creator of ImageSharp (a .NET image processing library), has been trying to have his projects funded. Even with using Open Collective, GitHub sponsorships, and having commercial support licenses available, the project struggles for funding. I asked him for his thoughts and perspective about open source funding: The funding side of open source is something I\\u2019ve struggled with for a long time now, experimenting previously with less permissive license models (with disastrous effect) and now attempting to fund my work with commercial support licenses. Maybe people look at the number of stars\\/downloads a project has and see that as a measure of financial success that they don\\u2019t think they need to contribute to, or maybe they don\\u2019t appreciate the effort involved\\u2026 I don\\u2019t know. What I do know is that something must change. The current situation is untenable and extremely harmful to maintainers. I also asked Dave Glick, creator of Statiq (a .NET static content generator) and Discover.NET (a site for .NET community resources), to share his thoughts on open source funding: To the extent a maintainer wants funding (and considering funding isn\\u2019t appropriate for, or wanted by, everyone for every project), I think the best thing we as a community can do is accept that the status quo isn\\u2019t working. If we use that as a starting point, then the next question becomes \\u201cwhat can I do that\\u2019s different?\\u201d There are alternate licenses to consider. There are platforms like Tidelift, Sdkbin, and others trying new sales models. The more maintainers that start looking outside the historically accepted project funding mechanisms and start considering and supporting alternatives, the sooner we can normalize those alternatives and hopefully lift up the entire ecosystem of open developed software. Making open source sustainable Open source is fundamentally good with the transparency and flexibility it brings; however, as our reliance on it goes up, the overall investment back into the ecosystem has not. It can be easy to take for granted the time and effort many developers put into open source projects. Yet it is with their time and effort that we often save our own. These developers are not greedy or selfish for wanting funding for their projects. To the contrary, they want funding to keep the project alive. A person has to eat, after all. Funding the project is a means of changing the maintainer\\u2019s timeshare\\u2014allowing themselves to put time into the project that otherwise would be used for other employment. There is only so much time in a day that a person can otherwise give. Funding should not be a struggle for open source projects. We embrace open source into our codebases frequently but have yet to fully embrace the idea that funding it actually helps us too. The bug fixes and feature requests need to be implemented, tested, and reviewed by someone who themselves can only put so much time into the project. While there has been some progress recently with an announcement from GitHub, changing how companies can invest in open source projects, it may take a while to see its impact in the open source ecosystem as a whole. Unfortunately there is no perfect solution that will solve all funding problems for open source. This post, more than anything else, is to draw attention to the issue that various projects that we rely on heavily may need help. Perhaps start checking whether the maintainer of your favorite project is seeking funding and see how you can help them raise it. Maybe talk to your boss how the sustainability of the open source projects the company depends on is a useful investment for the company. It is with these small actions, and others, that maybe funding open source projects will be less of a problem in the future. The post Open source has a funding problem appeared first on Stack Overflow Blog.\",\"3595\":\"Welcome to ISSUE #55 of the Overflow! This newsletter is by developers, for developers, written and curated by the Stack Overflow team and Cassidy Williams at Netlify. It\\u2019s a whole new year, and we\\u2019re kicking it off with fresh and tasty links: a teardown of the techniques behind the SolarWinds hack, preparing for school-mandated spyware, and how the early web went from bright idea to surfable sites. From the blog Podcast 300: Welcome to 2021 with Joel Spolsky stackoverflow.blog We are stepping into a new year with a very special guest, Stack Overflow\\u2019s co-founder and chairman, Joel Spolsky. We chat programming, social networks, and what comes next. Podcast Episode 299: It\\u2019s hard to get hacked worse than this stackoverflow.blog We break down some of the code that went into the SolarWinds hack and share programming projects we\\u2019re working on over the holidays. Webinar: Back to Basics with MongoDB promotion Does NoSQL feel like a bunch of NoSense to you? Sign up for this webinar to learn the fundamentals of the world\\u2019s most popular NoSQL database, MongoDB, and find out how you can leverage the MongoDB Cloud platform to build modern applications. Interesting questions What is the best way to remove 100% of a software that is not yet installed? superuser.com A perfectly reasonable concern when you\\u2019re forced to install spyware for school. Twist in floppy disk cable \\u2013 hack or intended design? retrocomputing.stackexchange.com &#8216;Hack\\u2019 and &#8216;intended design\\u2019 might not be mutually exclusive. Is there a way to average resistors together to get a tighter overall resistance tolerance? electronics.stackexchange.com In the real world, factory-produced resistors have unpredictable error values. How does light, which is an electromagnetic wave, carry information? physics.stackexchange.com Is light carrying data, or is your brain creating information from its signal? Links from around the web Out of the Matrix: Early days of the web (1991) blog.yax.com Have we forgotten the initial vision of the web? Here\\u2019s a great post about how the web emerged, from someone who was there at the beginning. Great impractical ideas in computer science: PowerPoint programming www.youtube.com If you\\u2019ve ever thought, \\u201cYes, I know PowerPoint,\\u201d this talk will&#8230; make you question that. Watch Tom Wildenhain build full programs and data structures using only built-in PowerPoint features! How we built the GitHub globe github.blog GitHub released a new homepage with a WebGL, data-filled globe front and center. Here\\u2019s the start of a series of how they built it! Open source browser tools for everyday use omatsuri.app Here\\u2019s a lovely list of open source tools for building your projects, from gradient generators to SVG compressors! Spend less time in Slack. Try Stack Overflow for Teams. The post The Overflow #55: Great impractical ideas in computer science appeared first on Stack Overflow Blog.\",\"3331\":\"You can read the hilarious tale of how Paul was alerted to \\\"Frenchpoop Butt\\\" here. Enjoy an all time classic tale of a security expert being outwitted by his daughter. Her approach was not in his threat model. Want to try your hand at a little hacking? Here's a fun online game called Telehack. We asked some teens what would motivate them to participate more on Stack. The answer was obvious: loot boxes. What kind of digital swag would you want receive for helping spread knowledge across our network?\",\"3372\":\"When Robinhood went down at the beginning of March, many speculated it might have been caused by the extra day, February 29th. This is a leap year after all. Robinhood blamed the outage on an unprecedented spike in usage. Either way, it go us thinking about time. For example, Postgres has a great understanding of time as a database. Like, it really knows all the different things that happened going back to literally year 4,000 BC including years that were skipped when they re-crafted the calendar and just like bananas stuff that happens with calendars over time. An excellent source of truth if it fits with your project. Next, a user shared the story of a wild interaction between Docker and the driver used by Razor peripherals. You can't have your fancy gaming mouse fired up and also be working on some container orchestration. Apparently they request the same GUID and get a bit confused if one already exists. If you're still feeling a little uncertain about exactly how Docker\\/Kubernetes works, Paul suggests this lovely illustrated guide for children or this comic, which is for grown ups. We chat about MySpace and whether it was ever cutting edge during its rise to prominence? Last, we dive into the pronunciation of \\\"char\\\", by the end of which, half of us have turned into full blown pirate impersonators.\",\"5094\":\"Neural Networks from Scratch part 7 is now available, covering, loss with categorical cross-entropy invidious.snopyta.org\\/watch?v=dEXPMQXo\\u2026 #machinelearning #deeplearning #python #nnfs\",\"3574\":\"In this week's episode, Joel complains about Excel on Mac, the hosts play Start Up or Shut Up, and surprise! The One Minute Tech Review is NOT about light switches. And Stack Overflow's own Dr. Julia Silge comes by to tell her Developer Story.\",\"534\":\"In November 1988 the first worm caused huge problems on the Internet. Dr Julian Onions remembers the story. https:\\/\\/www.facebook.com\\/computerphile https:\\/\\/twitter.com\\/computer_phile This video was filmed and edited by Sean Riley. Computer Science at the University of Nottingham: https:\\/\\/bit.ly\\/nottscomputer Computerphile is a sister project to Brady Haran's Numberphile. More at http:\\/\\/www.bradyharan.com\",\"3500\":\"You can check out more about Aaron at his website. He is a designer, developer, and musician who worked at Github and Adobe prior to joining Stack. You can also read Aaron's post on how he built dark mode here. For the next 48 hours, you also have the option to try out our April Fool's gag, Ultra Dark Mode.\",\"573\":\"Garbage collection is a way of automatic memory management provided by modern programming languages like Java, Go, Python and JavaScript. We talk about how garbage is identified, the tricolor algorithm, the generational hypothesis and it's effect on latency and throughput. Scenarios where the generational hypothesis doesn't work are also discussed. This includes caching and nepotism in queues (old generation objects promote young ones without due cause). 0:00 - Agenda 0:38 - Garbage Identification 0:50 - The Tricolor Algorithm 2:53 - Making the GC run faster 3:12 - Concurrent Collectors 3:49 - Generational Hypothesis 4:50 - Memory diagram 7:43 - Code injection JIT 9:09 - General hypothesis exceptions 9:43 - Nepotism Part II: https:\\/\\/youtu.be\\/trkYGEGT6_w References: Tricolor Algorithm: Knuth, The art of computer programming Generational Hypothesis: https:\\/\\/people.cs.umass.edu\\/~emery\\/classes\\/cmpsci691s-fall2004\\/papers\\/p157-ungar.pdf System Design Video Course: https:\\/\\/get.interviewready.io\\/ Software Engineering Fundamentals: https:\\/\\/www.youtube.com\\/playlist?list=PLMCXHnjXnTntYbKsUs6Pj8_BO_8ou4y07 You can follow me on: Instagram: https:\\/\\/www.instagram.com\\/applepie404\\/ LinkedIn: https:\\/\\/www.linkedin.com\\/in\\/gaurav-sen-56b6a941\\/ Quora: https:\\/\\/www.quora.com\\/profile\\/Gaurav-Sen-6 Twitter: https:\\/\\/twitter.com\\/gkcs_ #GarbageCollection #JavaGC #JavaGarbageCollection\",\"3336\":\"Stack Exchange Podcast - Episode #29 w\\/ Chris Poole by The Stack Overflow Podcast\",\"937\":\"It\\u2019s been quite the year! The Real Python team has written, edited, curated, illustrated, and produced a mountain of Python articles this year. We also upgraded the site and membership with office hours, transcripts, this podcast, and much more. We are joined by two members of the Real Python team, David Amos and Joanna Jablonski. We wanted to share a year-end wrap-up with a collection of articles that showcase a diversity of Python topics and the quality of what our team created this year. Joanna and David help to shepherd articles through the multi-stage editing process. They make sure articles not only impart crucial Python knowledge but also provide a thorough didactic experience. We hope you enjoy this review and as a programming note, there won\\u2019t be an episode next week, but we will be back the following week, and look forward to bringing you a year full of great guests, topics, articles, and projects. Course Spotlight: Python Turtle for Beginners In this step-by-step course, you\\u2019ll learn the basics of Python programming with the help of a simple and interactive Python library called turtle. If you\\u2019re a beginner to Python, then this tutorial will definitely help you on your journey as you take your first steps into the world of programming. Topics: 00:00:00 \\u2013 Introduction 00:01:41 \\u2013 Joanna visits the show 00:04:28 \\u2013 Pandas Project: Make a Gradebook With Python & Pandas 00:07:18 \\u2013 Build Physical Projects With Python on the Raspberry Pi 00:11:32 \\u2013 Python Practice Problems: Get Ready for Your Next Interview 00:15:05 \\u2013 Data Version Control With Python and DVC 00:19:02 \\u2013 What Are Python Wheels and Why Should You Care? 00:22:57 \\u2013 Video Course Spotlight 00:23:58 \\u2013 Python import: Advanced Techniques and Tips 00:26:33 \\u2013 Hands-On Linear Programming: Optimization With Python 00:29:47 \\u2013 Customize the Django Admin With Python 00:33:51 \\u2013 The Python return Statement: Usage and Best Practices 00:36:12 \\u2013 Python GUI Programming With Tkinter 00:46:47 \\u2013 Thanks and goodbyes Show links: Pandas Project: Make a Gradebook With Python & Pandas Build Physical Projects With Python on the Raspberry Pi Python Practice Problems: Get Ready for Your Next Interview Data Version Control With Python and DVC What Are Python Wheels and Why Should You Care? Python import: Advanced Techniques and Tips Hands-On Linear Programming: Optimization With Python Customize the Django Admin With Python The Python return Statement: Usage and Best Practices Python GUI Programming With Tkinter Learning Paths Referenced: Pandas for Data Science: Learning Path Introduction to Python: Learning Path Ace Your Python Coding Interview: Learning Path Django for Web Development: Learning Path GUI Programming With PyQt: Learning Path Python Basics Book: Learning Path Data Collection & Storage: Learning Path Podcast Episodes Referenced: Episode 21: Exploring K-means Clustering and Building a Gradebook With Pandas Episode 13: PDFs in Python and Projects on the Raspberry Pi Episode 27: Preparing for an Interview With Python Practice Problems Episode 25: Data Version Control in Python and Real Python Video Transcripts Episode 23: Python Wheels and Pass by Reference in Python Episode 24: Options for Packaging Your Python Application: Wheels, Docker, and More Episode 19: Advanced Python Import Techniques and Managing Users in Django Episode 17: Linear Programming, PySimpleGUI, and More Episode 31: Python Return Statement Best Practices and Working With the map() Function Episode 32: Our New \\u201cPython Basics\\u201d Book & Filling the Gaps in Your Learning Path Additional Links: About Joanna Jablonski: Real Python Team Real Python\\u2019s Office Hours: Learn With Python Experts in Real Time Office Hours Archive - September 9, 2020 : Guest Jim Anderson Support the podcast & join our community of Pythonistas\",\"529\":\"How do you share a 1960's computer across a bunch of islands? Wireless networking of course - although, like Norman Abramson & his team, you'd have to invent it first. Dr Steve Bagley on Hawaii's Aloha Net. https:\\/\\/www.facebook.com\\/computerphile https:\\/\\/twitter.com\\/computer_phile This video was filmed and edited by Sean Riley. Computer Science at the University of Nottingham: https:\\/\\/bit.ly\\/nottscomputer Computerphile is a sister project to Brady Haran's Numberphile. More at http:\\/\\/www.bradyharan.com\",\"220\":\"@Sentdex on time for Christmas!!\",\"3590\":\"Welcome to ISSUE #51 of the Overflow! This newsletter is by developers, for developers, written and curated by the Stack Overflow team and Cassidy Williams at Netlify. We have a bevy of beautiful links: getting to the finish line on hobby projects, the difference between modern motherboards, and the history of games on the internet. From the blog Tips to stay focused and finish your hobby project stackoverflow.blog We\\u2019ve collected some tips to help you ensure your part time programming doesn\\u2019t get abandoned before it\\u2019s complete. Measuring developer productivity stackoverflow.blog Defining and measuring programmer productivity is one of the most difficult parts of an engineering manager or CTO\\u2019s job description. When everything you do is intangible, how should you measure it? Can it be measured at all? Podcast 292: Goodbye to Flash, we\\u2019ll see you in Rust stackoverflow.blog We say a fond farewell to a titan of web tech and review what makes a great developer resume. Join TeamCity Cloud Beta for a free unlimited CI\\/CD service promotion JetBrains has launched the public beta of TeamCity Cloud, a fully managed CI\\/CD solution that automatically runs your builds and tests in the cloud, and lets your team deliver quality software faster, at scale. While the product is in beta, users of TeamCity Cloud can enjoy unlimited free access. Interesting questions \\u201cHello, World!\\u201d in zero lines of code codegolf.stackexchange.com How many lines of code does it take to convince sloc there are none? How do modern motherboards differ from each other? superuser.com If you\\u2019re planning to push the limits, you should know what temperature your board starts melting at. Can I use WhatsApp to securely send public key, symmetric key and private key? security.stackexchange.com Secure transfers are not the same as secure storage. Why is it called a \\u201ctrap\\u201d instruction? softwareengineering.stackexchange.com Not a trick question\\u2026 Links from around the web The perfect dark mode sreetamdas.com Here\\u2019s a wonderfully detailed post about avoiding the dreaded flicker of light mode and the pursuit of the perfect dark mode on your websites. Let\\u2019s look into Hug, the server running all the things. beta.snugg.ie If you\\u2019ve ever been interested in building your own home server, here\\u2019s a nice run through using Linux and DIY hardware to put one together. Using React Context for state management in Next.js url.netlify.com Next.js and React have plenty of options out there for state management, but sometimes the best way to do it is to not install anything and use the built-in tools. How I wrote my first full-stack Android app dev.to This is a great explainer on how to build an Android app from the ground up using Java, XML, and APIs. History of online games mirkgames.com Over the years there have been thousands upon thousands of games built for the browser, with technologies from applets to HTML Canvas. Let\\u2019s explore the history of how these games came to be. Finding remote collaboration tricky? Try Stack Overflow for Teams. The post The Overflow #51: Finish your hobby project appeared first on Stack Overflow Blog.\",\"3525\":\"The starting point for today's conversation was an argument made by Guillermo Rauch in this blog post. \\\"And each time, your frontend has an opportunity to impress, delight, perform, be accessible and memorable. What's more, frontend is an area of technological and artistic differentiation, while backend becomes increasingly commoditized, turnkey and undifferentiated.\\\" Sure, programming in PowerPoint isn't very practical. That doesn't mean it can't be lots of fun, and teach you a few things. Speaking of learning things, we chat a bit about Alan Kay, who has a wonderful talk on the ways we can use computers to illustrate complex concepts to children.\",\"523\":\"It's absolutely everywhere, but what is TLS and where did it come from? Dr Mike Pound explains the background behind this ubiquitous Internet security protocol. Heartbleed, Running the Code: https:\\/\\/www.youtube.com\\/watch?v=1dOCHwf8zVQ Secure Web Browsing: https:\\/\\/www.youtube.com\\/watch?v=E_wX40fQwEA Network Stacks & The Internet: https:\\/\\/www.youtube.com\\/watch?v=PG9oKZdFb7w&t=2s https:\\/\\/www.facebook.com\\/computerphile https:\\/\\/twitter.com\\/computer_phile This video was filmed and edited by Sean Riley. Computer Science at the University of Nottingham: https:\\/\\/bit.ly\\/nottscomputer Computerphile is a sister project to Brady Haran's Numberphile. More at http:\\/\\/www.bradyharan.com\",\"3496\":\"What began as a question on our Software Engineering Stack Exchange graduated into a blog post for further discussion. Paul points out that modern tooling has internalized so much of agile methodology that developers tend to work this way without having to explicitly create a culture or process around Scrum. And as Sara points out, if it turns out you're being driven to optimize for finished work over quality work, the problem may not be Scrum, but the pressures of your particular manager or company. Our lifeboat of the week goes to an old school Excel question with over half a million views. Thanks to Michelle for earning a badge while answering this query: How do I append the same text to every cell in a column in Excel?\",\"3263\":\"Where are you from and what is the Covid situation in your country right now? I\\u2019m from Indonesia and the Covid situation is getting worse here. New cases keep increasing while many people are already bored with the situation and are not following the safety protocol. What were the major changes\\/challenges in your daily life during this crisis? (As pertaining to work, family, free time, etc.) I\\u2019ve been working remotely for ten years so it doesn\\u2019t affect my daily work too much. Difficulty meeting up with friends and family, overshadowed with fears, and so much sad news about people you know passing away due to Covid are the most heartbreaking situations. Is your work at home life affected by any family members living at home? Spouse, children, pets? Hahahaha definitely! I have two daughters, six and two y.o, when they get into a fight I wish I worked in a quiet and more peaceful place :)) Did you discover any new hobby\\/ passion during this period? Yeah, I started learning construction a bit, and definitely learned some design apps like prototype, webflow, blender; this keeps me challenged. Was there a place you planned to travel that you couldn\\u2019t make it to? TCO , to meet with all TC members and staff! TCO is always a special moment in my life. Did you use your experience as a remote worker to help others (friends, family) to cope with the new reality? Ah yes, I started a small design studio with some team members who just finished high school and can\\u2019t afford to go on to higher education. My goal is just to share my knowledge and at least give them a place to get monthly income to help their family in this situation. What did you learn during Covid that will improve your life after? Everybody is in a tough situation these days, but if we can teach them to keep motivated, never give up, and believe in something good, we can make the world a better place for everybody. If you have good will, and do your best to make it happen in a good way, it will end up good no matter how long it takes. How do you think the future will change after Covid ends at a global level? Covid ends? Hmm, I never thought about it and I think it will take years to end. Humans will try to survive in every way, new technologies arise to help make human life easier, many conventional businesses shifted into digital, and maybe there will be a technology to detect or scan viruses in the future. The post When This Covid-19 Pandemic is Over Checking in on Yoki from Indonesia appeared first on Topcoder.\",\"3513\":\"Stack Overflow Podcast - Episode #53 by The Stack Overflow Podcast\",\"3488\":\"Stack Exchange Podcast #69 - It's Too Rainy For A Parade by The Stack Overflow Podcast\",\"4846\":\"I applied through LinkedIn on 13th January, and got a call from HR that there is a technical interview scheduled on 15th January and sent\\u2026 Read More The post MuCrest Technologies Pvt Ltd Interview Experience for SDE Intern appeared first on GeeksforGeeks.\",\"3561\":\"Stack Overflow Podcast - Episode #22 by The Stack Overflow Podcast\",\"224\":\"Awesome! Hope you enjoy and learn lots :D nitter.net\\/kanybekasan\\/status\\/1335806562133106689#m\",\"793\":\"We discuss the following: 1) Should education be free, or subsidised? 2) Where do we draw the line on deceptive marketing? 3) What are the possible effects of it? 4) Who is responsible for a paid endorsement? 5) How can we level the playing field? System Design Video Course: https:\\/\\/get.interviewready.io\\/ System Design Playlist: https:\\/\\/www.youtube.com\\/playlist?list=PLMCXHnjXnTnvo6alSjVkgxV-VH6EPyvoX Software Engineering Fundamentals: https:\\/\\/www.youtube.com\\/playlist?list=PLMCXHnjXnTntYbKsUs6Pj8_BO_8ou4y07 You can follow me on: Instagram: https:\\/\\/www.instagram.com\\/applepie404\\/ LinkedIn: https:\\/\\/www.linkedin.com\\/in\\/gaurav-sen-56b6a941\\/ Quora: https:\\/\\/www.quora.com\\/profile\\/Gaurav-Sen-6 Twitter: https:\\/\\/twitter.com\\/gkcs_ #Education #PradeepPoonia #GauravSen\",\"3531\":\"Stack Overflow Podcast - Episode #70 by The Stack Overflow Podcast\",\"928\":\"A big decision a developer has to make is what tool to use to write code? Would you like an editor that understands Python, and is there to help with suggestions, definitions, and analysis of your code? For many developers, its the free tool, Visual Studio Code. This week on the show, we have Savannah Ostrowski, program manager for the Python Language Server and Python in Visual Studio. We discuss Pylance, a new language server with fast, feature-rich language support for Python in VS Code. Savannah explains what a language server is and the types of features it can provide. This includes type information, code completion, automatic-imports, dead code analysis, code navigation, and more. We also have a discussion about type checking in Python, which led to how Pylance leverages the static type checking tool Pyright, and what are type stubs (.pyi files). Course Spotlight: Python Type Checking In this course, you\\u2019ll look at Python type checking. Traditionally, types have been handled by the Python interpreter in a flexible but implicit way. Recent versions of Python allow you to specify explicit type hints that can be used by different tools to help you develop your code more efficiently. Topics: 00:00:00 \\u2013 Introduction 00:01:47 \\u2013 Current Role at Microsoft 00:03:01 \\u2013 Background with Python 00:04:21 \\u2013 Origins of Pylance 00:06:53 \\u2013 What is a language server? 00:09:56 \\u2013 Diving deeper into the features individually 00:14:42 \\u2013 Code navigation and diagnostics 00:15:43 \\u2013 Methods of defining types and stub files 00:17:28 \\u2013 What are examples of stub files? 00:21:16 \\u2013 Comparing Pyright to Mypy 00:23:56 \\u2013 Video Course Spotlight 00:25:02 \\u2013 Auto-imports are a contentious feature 00:28:36 \\u2013 Code actions and dead code analysis 00:31:46 \\u2013 Pylance working with Jupyter notebooks in VSCode 00:33:30 \\u2013 Multiple workspaces 00:36:16 \\u2013 Why do you like to work on developer tools? 00:39:35 \\u2013 How does a tool like Pylance help a beginner? 00:42:31 \\u2013 What are you excited about in the world of Python? 00:46:25 \\u2013 What do you want to learn next? 00:49:24 \\u2013 Thanks and goodbyes Show Links: Announcing Pylance: Fast, feature-rich language support for Python in Visual Studio Code Pylance introduces five new features that enable type magic for Python developers Python in Visual Studio Code \\u2013 September 2020 Release Pylance and Python in VS Code: Visual Studio Code v1.49 Release Party - YouTube Language Server Protocol Language Server Protocol: Github How the Language Server Protocol Affects the Future of IDEs typeshed: External type annotations for the Python standard library and Python builtins, as well as third party packages Pyright: Static type checker for Python PEP 561 \\u2013 Distributing and Packaging Type Information Visual Studio IntelliCode: Provides AI-assisted development features for Python Creating Stubs For Python Modules Python Type Checking: Real Python video course Feather Huzzah: Adafruit Circuit Playground Express: Adafruit Circuit Python: The easiest way to program microcontrollers Big Honking Button: Winterbloom Arduino With Python: How to Get Started - Real Python video course Support the podcast & join our community of Pythonistas\",\"3572\":\"For this episode we chatted with Georges Saab, Vice President of Software Development at the Java Platform Group and Manish Gupta, Vice President of Global Marketing for Java and GraalVM. In the beginning, the nascent Java language project, codenamed Project Green and later Oak, was designed to create interactive televisions. Think of the kind of overlays and interactivity that you see with most flat screen TVs today. Back in 1995, this was brand new territory. There was no hardware or operating system standard for a computing platform within a TV, so the team had to figure out how to create a programming language that could run on virtually anything. Code it once and run it everywhere through a virtual machine. Interactive TV was ahead of its time in the early 90s, but Java found a strong foothold for its cross-platform ideas in web applets and WebStart programs that downloaded and ran an application entirely from a web address. This evolved over time, and today it provides a lot of the processing muscle for server-side web apps and cloud-based SaaS applications. Here at Stack Overflow, the Java tag has remained one of the most popular over the years, with 1.7 million total questions on the site. When Sun announced Java in 1995, they did so with Marc Andreessen\\u2014then cofounder and \\u201crockstar\\u201d at Netscape\\u2014on stage with them. Andreessen had agreed to integrate Java into the Navigator browser, a major coup for a brand new language. At the time, Navigator was the clear leader in the browser market, taking over 75% of the share. Even before this announcement at the SunWorld conference, the volume of downloads of the language became so great that it overwhelmed the T1 line attached to the java.sun.com web server. Today's episode covers the past and present of Java. Tomorrow, we'll air episode two, which takes us from the present and looks towards the future. If you want to learn more, Oracle has put together a wealth of resources to celebrate Java's 25th anniversary.\",\"3266\":\"FriendFinder This problem is fairly straightforward, requiring the solution to find the location of self and friend in the string. Once those two locations are known, it\\u2019s just a matter of subtracting the two values to determine the distance. The problem constraints ensure that there is nothing too tricky. The only thing to be careful about is to avoid returning a negative number, in case yourself and your friend appear in the opposite order you expect. It\\u2019s possible to solve this in a single line, even: public int distance(String line) { return Math.abs(line.indexOf('S') - line.indexOf('F')); } PairedMultiples The biggest thing to observe in this problem\\u2013because we\\u2019re dealing only with positive values\\u2013is that if any two values can sum to something with the proper divisibility, they should always be included in the subset. Knowing this, our solution is in two steps: loop through each possible pair of initial values and test the divisibility of the sum, making off both members of the pair if the divisibility works out. Then, iterate through the full set, adding all the previously marked values that should be included in the subset. public int selectedTotal(int[] values, int multiple) { boolean[] marked = new boolean[values.length]; for (int i = 0; i\",\"3844\":\"Given an array arr[] of size N and an integer K, the task is to print all possible ways to split the given array into\\u2026 Read More The post Print all possible ways to split an array into K subsets appeared first on GeeksforGeeks.\",\"3521\":\"Stack Overflow Podcast - Episode #83 by The Stack Overflow Podcast\",\"3582\":\"Touch ID. Login with Facebook. ATM machines. Corporate directory services. What\\u2019s the commonality? Digital identity! We live in an increasingly connected world where we continuously consume information. From accessing email, checking the bank statement, to streaming music online, we\\u2019re constantly hitting APIs that securely retrieve our data from on-premises and the cloud. Digital identity is the online representation of a person, organization, or a machine, and it is what gives us access to the data we use daily. It\\u2019s a part of our lives, whether at work or at home. Here\\u2019s a brief overview of identity, why it\\u2019s vital to information security, and why you should know more about it. Identity back then Let\\u2019s go back to the year 2000, when the majority of people with internet access are still using dialup. Millions are getting online for the first time, and internet companies are having their first big moments on the stock market. Some innovative companies such as Amazon and eBay are able to establish themselves in the new online marketplace. Others, like WebVan and Pets.com, are perhaps ahead of their time. Figure 1: Each website has a separate digital identity of you During this era, you have separate digital identities for each website. This requires you to keep track of multiple usernames and passwords, which encourages password reuse. Reusing passwords jeopardizes the security of all your websites if just one of them is compromised. If you happen to work at a company or institution with a substantial network, you can expect to be logging in to your computer via a directory service solution such as Novell Directory Services, which gives your corporate identity access to file and print services across the local-area network (LAN). Network perimeters and passwords are your primary means to protect your local corporate data; firewalls keep the bad guys out while you access your apps and data within the confines of your trusted network. But your identity only exists in the space you are currently in\\u2014a single website or a corporate, hard-wired LAN. In 2001, the Enron accounting scandal makes headlines due to inflated earnings reports and fraud. The scandal reveals Enron\\u2019s weak internal controls which enabled its employees to act dishonestly. Because of this and other scandals, Congress passes the Sarbanes-Oxley Act, which, if you are a publicly-traded company, includes requirements that make executives liable for their employees\\u2019 access controls. This and other regulations encourage the adoption of identity and access management systems (IAM) to govern users and assign access to needed resources. Identity now The 90s era requirement of only needing access to your on-premises applications and data changes quickly. With the mid-2000s, comes an increasing usage of applications that are hosted outside of your network. Software as a service (SaaS) applications like Concur (now SAP Concur), which manages corporate travel and expenses, become popular. In 2006, Amazon Web Services begins offering cloud computing services, enabling you to run applications on servers and store data on a pay-as-you-go basis, with all your information based in offsite data centers. Today, companies ranging from startups to enterprises are migrating their workloads to run entirely in the cloud. On the consumer side, the iPhone comes on the scene in 2007, kickstarting the era of smartphones and tablets. Suddenly, you can have immediate access to information through your mobile browser or the many apps available on your device. These devices increasingly become the concern of corporate IT departments as employees connect to internal networks using devices that IT has no control over. Figure 2: Social login enables you to centralize your digital identity By 2009, social login becomes available, which allows you to login to your apps and websites through your social identity such as Twitter or Facebook. This is made possible by OAuth, which is a standard that allows you to authorize access to applications without sharing your password. Social login enables you to have your consumer identity hosted on the provider of your choice, improving security through less reliance on passwords. The advent of SaaS, cloud computing, and mobile means that your company now has to manage employees\\u2019 access for when the data resides outside the corporate network\\u2014and potentially the access of your company\\u2019s customers as well. And data cannot be assumed secure when inside the perimeter; the rising prevalence of phishing, social engineering, malware, and insider threats blur further the perimeter of trust. With the network perimeter no longer solely defining what is safe, and with increasing acceptance and adoption of strong authentication, corporations are now beginning to consider a Zero Trust model. Zero Trust states that the security of your data cannot merely rely on the safety of your network. Instead, data security is highly dependent on strong authentication controls and fine-grained authorization\\u2014in other words, we\\u2019re confident that they are who we think they are and have only the permissions they need for access. Passwords as a single factor of authentication are often not enough. It is increasingly easy for attackers to crack a weak password in seconds or obtain it through clever methods such as phishing scams. The importance of multi-factor authentication (MFA) has therefore increased even outside of highly-secured institutions such as banks and government agencies. MFA makes it much more difficult for someone to bypass your authentication controls. For example, if your password is your first factor and a virtual or physical security token is your second factor, an attacker will need both in order to compromise your identity. The recent widespread introduction of passwordless authentication through the use of biometric factors such as fingerprints makes it possible to avoid passwords altogether. Now strong authentication is even easier on supported devices such as smartphones, tablets, and laptops. MFA and passwordless authentication work in harmony with the Zero Trust model to further secure your confidential data regardless of where it is located. Combined with the rise of comprehensive identity and access management systems, you now have increasingly secure solutions for managing identities, their access rights, and the data you needed to protect. How does identity affect you These trends haven\\u2019t slowed down\\u2014the amount of applications and data available to us is exploding, making it harder to keep track of access to that data without dedicated identity and access management systems. And as entire companies such as Twitter, Facebook, and Slack are declaring remote workforces as the new normal due to the global pandemic, Zero Trust and identity are even more important. If you\\u2019re developing a multi-user consumer application, you\\u2019ll want to consider if offering them the ability to login with their social identity makes sense from a security and usability standpoint. The benefits are that it reduces friction during the signup process, which ensures you convert more curious customers to full time users. It also offloads some of the work of identity management and security to large, well resourced companies. You\\u2019ll also need to assess which customer identity and access management solutions (CIAM) are right for you to help you manage access for the potentially thousands or millions of users that will use your app. Amazon Cognito and Auth0 are some of the solutions in the CIAM space that help with this. If you have a job in identity management, such as managing your corporate directory, sooner or later you\\u2019ll have to grapple with how you\\u2019ll implement MFA. And you\\u2019ll need to consider how your employees will access the cloud, even if your identity store remains on-premises. And you\\u2019ll have to dive into identity federation, which means understanding how your directory service will integrate with your cloud provider and what minimum permissions are required to enable employees to do their job. Where do I go from here Since identity is a large and complex topic, a great place for you to start is with educational resources! You\\u2019ll want to familiarize yourself with the basics. It\\u2019s important to understand authentication and authorization as these terms are used all the time when learning about identity and IAM solutions. IDPro, which is a not-for-profit association of identity professionals, has educational resources that you can access online that address this. If you\\u2019re a developer, there\\u2019s also masterclass videos on OAuth which you\\u2019ll want to watch if enabling social login to your app through a supported OAuth provider such as Google, Facebook, or Github. If you\\u2019re an IAM admin or engineer, you\\u2019ll want to read up on MFA, single-sign on (SSO), and federation. I\\u2019ve also helped develop a course, \\u201cIntroduction to AWS Identity and Access Management,\\u201d which introduces you to these basic identity topics and what they look like in AWS cloud. They\\u2019re free on Coursera and edX. AWS Training and Certification also offers free relevant and comprehensive security training to help you innovate with confidence and advance your career. For more information, please visit here. Additional Resources Okta \\u2013 Identity 101 Index \\u2013 an index of identity terminology IDPro educational resources \\u2013 additional resources for identity practitioners IDPro Body of Knowledge \\u2013 identity practitioner concepts and terms Zero Trust Networks \\u2013 book by by Evan Gilman, Doug Barth Zero Trust architectures: An AWS perspective \\u2013 how Zero Trust looks in AWS Learn about AWS Security \\u2013 free and fee-based AWS security training AWS Certified Security, Specialty exam \\u2013 validates knowledge of securing the AWS platform AWS Identity services \\u2013 Identity-related services on AWS The post How digital identity protects your software appeared first on Stack Overflow Blog.\",\"3349\":\"Stack Overflow Podcast - Episode #06 by The Stack Overflow Podcast\",\"3275\":\"You can read more about the operating systems and business principles schools are adopting from their corporate sponsors here. You can read about the latest version of Tailwind and what it has to offer here.\",\"3279\":\"Stack Exchange Podcast - Episode #48 - Sponsored by Powdermilk Biscuits by The Stack Overflow Podcast\",\"3481\":\"Stack Exchange Podcast - Episode #58 - Pack 'Em In Like Bees by The Stack Overflow Podcast\",\"3378\":\"Today we chat with SO developer Nick Larsen about dev interview tips, the new Stack Overflow Trends Tool, and tourist photography etiquette. Follow @stackpodcast on twitter for news and updates!\",\"3403\":\"Stack Exchange Podcast - Episode #10 w\\/ Steve Karantza by The Stack Overflow Podcast\",\"3260\":\"Barry Matthews, Founder, Re-Source Future of Work, joins Uprisor to share what he\\u2019s learned over 20 years of helping organizations adopt new processes like automation, outsourcing, and on-demand talent. Barry is an expert in change spotting, focusing his energies on future workforce strategies and teaching enterprises how to plan and thrive in this new world. In this episode, Topcoder VP Clinton Bonner and Barry discuss the \\u201caha\\u201d moments in Barry\\u2019s career, outsourcing\\u2019s historically dismal track record, and why no industry or business model is safe from disruption. Enjoy the conversation and check out highlights below. Making connections Barry describes four key light bulb moments in his career that compelled him to act. The first combined two of his great passions\\u2014technology and endurance sports. As an avid competitor in marathons, ultramarathons, and ironman competitions, Barry noticed a lack of a platform linking the athletes interested in competing with the races themselves. So, he created a company called Endurancelife, which is still going strong now, almost 20 years later. YOU CAN\\u2019T PUT A JET ENGINE IN A WRIGHT BROTHERS PLANE Barry describes the next two big \\u2018aha\\u2019 moments in his career\\u2014that large organizations needed help setting up outsourcing and offshoring deals successfully, and then stumbling on RPA technology and helping enterprises incorporate those elements into their operations. Before Re-Source, Barry founded Source, which pioneered robotic process automation (RPA) and the application of automation and AI technologies for the IT consulting and outsourcing industry. He notes that when companies try to tack on something like outsourcing or RPA on their own, it can be like putting a jet engine into an old Wright Brothers airplane. It\\u2019s too big, too heavy, too complex\\u2013it just won\\u2019t work. You need to change the structure of the organization to accommodate the new strategies. Adding global expertise to your toolkit As Barry has seen the rise of crowdsourcing and the gig economy, he\\u2019s also seen a similar need for organizations to have guidance as they incorporate these new ways of working with talent. He wants to help companies unlock huge efficiencies and productivity gains for businesses, but to do that they need to be able to access global on-demand talent through the right platform. He envisions a new position that many companies will need going forward, a \\u201cblended workforce lead\\u201d that can guide organizations as they balance in-house and on-demand talent. \\u201cThe crowd is not there to replace your internal resources\\u2026it\\u2019s an augmentation discussion. We can make you brilliant by adding so much global expertise to your toolkit.\\u201d \\u2013 Barry Matthews Looking to the Future When asked about his predictions for the post-COVID world, Barry asserts that we\\u2019ll never go back to working the way we did before, with so many people commuting to a physical office. Companies that have been flexible and focused on resilience are handling the COVID disruption better than ones that have been reluctant to embrace change, and that flexibility will be part of the new normal. Both workers and employers are seeing the benefits of flexible, remote work. \\u201cI honestly think that where we work is going to be so unimportant. We\\u2019ll laugh, really, about the thought of going to the office every day.\\u201d \\u2013 Barry Matthews Uprisor podcast A unique future of work discussion crafted for enterprise leaders Listen to the Podcast The post Trend Spotting, IT Consulting, and Endurance Sports with Barry Matthews appeared first on Topcoder.\",\"3409\":\"Stack Exchange Podcast - Episode #52 - We Didn't Need Headphones by The Stack Overflow Podcast\",\"1242\":\"More info: https:\\/\\/nnfs.io Channel membership: https:\\/\\/www.youtube.com\\/channel\\/UCfzlCWGWYyIQ0aLC5w48gBQ\\/join Discord: https:\\/\\/discord.gg\\/sentdex Support the content: https:\\/\\/pythonprogramming.net\\/support-donate\\/ Twitter: https:\\/\\/twitter.com\\/sentdex Instagram: https:\\/\\/instagram.com\\/sentdex Facebook: https:\\/\\/www.facebook.com\\/pythonprogramming.net\\/ Twitch: https:\\/\\/www.twitch.tv\\/sentdex\"},\"Topic\":{\"3520\":\"Software Development\",\"3508\":\"Software Development\",\"1850\":\"Software Development\",\"931\":\"Software Development\",\"3410\":\"Software Development\",\"4853\":\"Software Development\",\"3512\":\"Software Development\",\"3536\":\"Software Development\",\"215\":\"Software Development\",\"3300\":\"Software Development\",\"3549\":\"Software Development\",\"3533\":\"Software Development\",\"3477\":\"Software Development\",\"3542\":\"Software Development\",\"890\":\"Software Development\",\"3460\":\"Software Development\",\"1828\":\"Software Development\",\"3301\":\"Software Development\",\"3354\":\"Software Development\",\"3383\":\"Software Development\",\"567\":\"Software Development\",\"953\":\"Software Development\",\"3568\":\"Software Development\",\"3493\":\"Software Development\",\"596\":\"Software Development\",\"3840\":\"Software Development\",\"3592\":\"Software Development\",\"608\":\"Software Development\",\"1810\":\"Software Development\",\"3421\":\"Software Development\",\"3340\":\"Software Development\",\"3478\":\"Software Development\",\"1835\":\"Software Development\",\"3293\":\"Software Development\",\"3294\":\"Software Development\",\"3487\":\"Software Development\",\"3284\":\"Software Development\",\"3599\":\"Software Development\",\"1821\":\"Software Development\",\"1825\":\"Software Development\",\"525\":\"Software Development\",\"3598\":\"Software Development\",\"5140\":\"Software Development\",\"926\":\"Software Development\",\"3273\":\"Software Development\",\"3894\":\"Software Development\",\"601\":\"Software Development\",\"3384\":\"Software Development\",\"1859\":\"Software Development\",\"3501\":\"Software Development\",\"1848\":\"Software Development\",\"3373\":\"Software Development\",\"933\":\"Software Development\",\"1849\":\"Software Development\",\"3556\":\"Software Development\",\"3461\":\"Software Development\",\"3552\":\"Software Development\",\"4847\":\"Software Development\",\"3494\":\"Software Development\",\"939\":\"Software Development\",\"528\":\"Software Development\",\"1819\":\"Software Development\",\"3495\":\"Software Development\",\"3476\":\"Software Development\",\"3505\":\"Software Development\",\"3334\":\"Software Development\",\"1822\":\"Software Development\",\"3394\":\"Software Development\",\"3472\":\"Software Development\",\"3612\":\"Software Development\",\"1834\":\"Software Development\",\"3588\":\"Software Development\",\"3295\":\"Software Development\",\"925\":\"Software Development\",\"3371\":\"Software Development\",\"943\":\"Software Development\",\"2788\":\"Software Development\",\"3402\":\"Software Development\",\"3575\":\"Software Development\",\"3431\":\"Software Development\",\"3407\":\"Software Development\",\"3537\":\"Software Development\",\"3289\":\"Software Development\",\"3555\":\"Software Development\",\"3433\":\"Software Development\",\"1845\":\"Software Development\",\"3480\":\"Software Development\",\"3566\":\"Software Development\",\"3527\":\"Software Development\",\"1827\":\"Software Development\",\"920\":\"Software Development\",\"3446\":\"Software Development\",\"3584\":\"Software Development\",\"3401\":\"Software Development\",\"3324\":\"Software Development\",\"3328\":\"Software Development\",\"3502\":\"Software Development\",\"3393\":\"Software Development\",\"3569\":\"Software Development\",\"1853\":\"Software Development\",\"226\":\"Software Development\",\"3326\":\"Software Development\",\"3265\":\"Software Development\",\"1865\":\"Software Development\",\"1812\":\"Software Development\",\"3286\":\"Software Development\",\"751\":\"Software Development\",\"3441\":\"Software Development\",\"946\":\"Software Development\",\"3381\":\"Software Development\",\"3261\":\"Software Development\",\"3306\":\"Software Development\",\"531\":\"Software Development\",\"3551\":\"Software Development\",\"597\":\"Software Development\",\"3571\":\"Software Development\",\"3345\":\"Software Development\",\"4973\":\"Software Development\",\"3375\":\"Software Development\",\"3262\":\"Software Development\",\"3597\":\"Software Development\",\"3607\":\"Software Development\",\"4856\":\"Software Development\",\"3514\":\"Software Development\",\"3395\":\"Software Development\",\"3591\":\"Software Development\",\"3281\":\"Software Development\",\"4848\":\"Software Development\",\"941\":\"Software Development\",\"3468\":\"Software Development\",\"223\":\"Software Development\",\"3310\":\"Software Development\",\"3400\":\"Software Development\",\"3837\":\"Software Development\",\"3432\":\"Software Development\",\"3578\":\"Software Development\",\"3412\":\"Software Development\",\"3288\":\"Software Development\",\"209\":\"Software Development\",\"3451\":\"Software Development\",\"570\":\"Software Development\",\"577\":\"Software Development\",\"3385\":\"Software Development\",\"3547\":\"Software Development\",\"3518\":\"Software Development\",\"1862\":\"Software Development\",\"3506\":\"Software Development\",\"3379\":\"Software Development\",\"3491\":\"Software Development\",\"3329\":\"Software Development\",\"3358\":\"Software Development\",\"3353\":\"Software Development\",\"533\":\"Software Development\",\"1823\":\"Software Development\",\"3482\":\"Software Development\",\"3406\":\"Software Development\",\"1820\":\"Software Development\",\"3498\":\"Software Development\",\"5095\":\"Software Development\",\"3503\":\"Software Development\",\"3357\":\"Software Development\",\"3497\":\"Software Development\",\"3545\":\"Software Development\",\"3510\":\"Software Development\",\"913\":\"Software Development\",\"600\":\"Software Development\",\"3343\":\"Software Development\",\"4843\":\"Software Development\",\"3456\":\"Software Development\",\"3528\":\"Software Development\",\"3269\":\"Software Development\",\"3404\":\"Software Development\",\"3435\":\"Software Development\",\"3466\":\"Software Development\",\"3469\":\"Software Development\",\"3439\":\"Software Development\",\"1854\":\"Software Development\",\"3587\":\"Software Development\",\"3436\":\"Software Development\",\"1826\":\"Software Development\",\"3602\":\"Software Development\",\"3320\":\"Software Development\",\"1851\":\"Software Development\",\"3455\":\"Software Development\",\"3428\":\"Software Development\",\"3457\":\"Software Development\",\"3448\":\"Software Development\",\"4461\":\"Software Development\",\"3550\":\"Software Development\",\"3259\":\"Software Development\",\"3839\":\"Software Development\",\"3538\":\"Software Development\",\"1839\":\"Software Development\",\"3459\":\"Software Development\",\"3283\":\"Software Development\",\"3430\":\"Software Development\",\"1857\":\"Software Development\",\"3369\":\"Software Development\",\"3267\":\"Software Development\",\"1863\":\"Software Development\",\"527\":\"Software Development\",\"3350\":\"Software Development\",\"3424\":\"Software Development\",\"1843\":\"Software Development\",\"2836\":\"Software Development\",\"3416\":\"Software Development\",\"3356\":\"Software Development\",\"3509\":\"Software Development\",\"219\":\"Software Development\",\"3845\":\"Software Development\",\"3522\":\"Software Development\",\"3391\":\"Software Development\",\"3614\":\"Software Development\",\"3490\":\"Software Development\",\"1846\":\"Software Development\",\"3398\":\"Software Development\",\"3397\":\"Software Development\",\"3534\":\"Software Development\",\"3604\":\"Software Development\",\"3368\":\"Software Development\",\"3504\":\"Software Development\",\"3337\":\"Software Development\",\"1247\":\"Software Development\",\"4974\":\"Software Development\",\"3489\":\"Software Development\",\"3613\":\"Software Development\",\"3348\":\"Software Development\",\"936\":\"Software Development\",\"599\":\"Software Development\",\"3540\":\"Software Development\",\"3426\":\"Software Development\",\"4851\":\"Software Development\",\"3576\":\"Software Development\",\"3583\":\"Software Development\",\"602\":\"Software Development\",\"3318\":\"Software Development\",\"569\":\"Software Development\",\"3389\":\"Software Development\",\"3382\":\"Software Development\",\"3366\":\"Software Development\",\"3351\":\"Software Development\",\"3462\":\"Software Development\",\"3257\":\"Software Development\",\"3474\":\"Software Development\",\"3440\":\"Software Development\",\"3475\":\"Software Development\",\"3376\":\"Software Development\",\"521\":\"Software Development\",\"3308\":\"Software Development\",\"952\":\"Software Development\",\"3484\":\"Software Development\",\"3271\":\"Software Development\",\"921\":\"Software Development\",\"3305\":\"Software Development\",\"3314\":\"Software Development\",\"3523\":\"Software Development\",\"3594\":\"Software Development\",\"1830\":\"Software Development\",\"3321\":\"Software Development\",\"1815\":\"Software Development\",\"3292\":\"Software Development\",\"3577\":\"Software Development\",\"3380\":\"Software Development\",\"3299\":\"Software Development\",\"1824\":\"Software Development\",\"3344\":\"Software Development\",\"3579\":\"Software Development\",\"915\":\"Software Development\",\"3332\":\"Software Development\",\"3554\":\"Software Development\",\"218\":\"Software Development\",\"3526\":\"Software Development\",\"526\":\"Software Development\",\"3297\":\"Software Development\",\"3535\":\"Software Development\",\"1239\":\"Software Development\",\"1811\":\"Software Development\",\"3411\":\"Software Development\",\"3564\":\"Software Development\",\"579\":\"Software Development\",\"4849\":\"Software Development\",\"3544\":\"Software Development\",\"3609\":\"Software Development\",\"3470\":\"Software Development\",\"3586\":\"Software Development\",\"3560\":\"Software Development\",\"1838\":\"Software Development\",\"3610\":\"Software Development\",\"3333\":\"Software Development\",\"214\":\"Software Development\",\"3479\":\"Software Development\",\"3311\":\"Software Development\",\"1837\":\"Software Development\",\"576\":\"Software Development\",\"951\":\"Software Development\",\"217\":\"Software Development\",\"3408\":\"Software Development\",\"3399\":\"Software Development\",\"944\":\"Software Development\",\"3425\":\"Software Development\",\"3492\":\"Software Development\",\"3268\":\"Software Development\",\"916\":\"Software Development\",\"3317\":\"Software Development\",\"1860\":\"Software Development\",\"3270\":\"Software Development\",\"3541\":\"Software Development\",\"3467\":\"Software Development\",\"3507\":\"Software Development\",\"1842\":\"Software Development\",\"3606\":\"Software Development\",\"3290\":\"Software Development\",\"3338\":\"Software Development\",\"604\":\"Software Development\",\"3600\":\"Software Development\",\"208\":\"Software Development\",\"1245\":\"Software Development\",\"3277\":\"Software Development\",\"5290\":\"Software Development\",\"1852\":\"Software Development\",\"3413\":\"Software Development\",\"3405\":\"Software Development\",\"3374\":\"Software Development\",\"3335\":\"Software Development\",\"929\":\"Software Development\",\"598\":\"Software Development\",\"1250\":\"Software Development\",\"3444\":\"Software Development\",\"574\":\"Software Development\",\"949\":\"Software Development\",\"3546\":\"Software Development\",\"3312\":\"Software Development\",\"213\":\"Software Development\",\"3276\":\"Software Development\",\"3454\":\"Software Development\",\"3562\":\"Software Development\",\"3529\":\"Software Development\",\"3302\":\"Software Development\",\"3323\":\"Software Development\",\"3593\":\"Software Development\",\"3274\":\"Software Development\",\"568\":\"Software Development\",\"1238\":\"Software Development\",\"3313\":\"Software Development\",\"3287\":\"Software Development\",\"3303\":\"Software Development\",\"3316\":\"Software Development\",\"3325\":\"Software Development\",\"923\":\"Software Development\",\"3367\":\"Software Development\",\"3420\":\"Software Development\",\"3603\":\"Software Development\",\"3570\":\"Software Development\",\"1832\":\"Software Development\",\"1241\":\"Software Development\",\"954\":\"Software Development\",\"3304\":\"Software Development\",\"1861\":\"Software Development\",\"3418\":\"Software Development\",\"3355\":\"Software Development\",\"932\":\"Software Development\",\"3392\":\"Software Development\",\"3515\":\"Software Development\",\"3342\":\"Software Development\",\"3605\":\"Software Development\",\"3341\":\"Software Development\",\"3396\":\"Software Development\",\"225\":\"Software Development\",\"3278\":\"Software Development\",\"3361\":\"Software Development\",\"3471\":\"Software Development\",\"1240\":\"Software Development\",\"1864\":\"Software Development\",\"3449\":\"Software Development\",\"609\":\"Software Development\",\"4850\":\"Software Development\",\"3429\":\"Software Development\",\"3573\":\"Software Development\",\"3370\":\"Software Development\",\"1237\":\"Software Development\",\"3362\":\"Software Development\",\"3258\":\"Software Development\",\"948\":\"Software Development\",\"212\":\"Software Development\",\"940\":\"Software Development\",\"3387\":\"Software Development\",\"603\":\"Software Development\",\"3543\":\"Software Development\",\"3565\":\"Software Development\",\"578\":\"Software Development\",\"606\":\"Software Development\",\"3836\":\"Software Development\",\"3567\":\"Software Development\",\"3434\":\"Software Development\",\"3386\":\"Software Development\",\"3842\":\"Software Development\",\"3437\":\"Software Development\",\"3517\":\"Software Development\",\"565\":\"Software Development\",\"3835\":\"Software Development\",\"4852\":\"Software Development\",\"3322\":\"Software Development\",\"222\":\"Software Development\",\"3445\":\"Software Development\",\"3611\":\"Software Development\",\"3530\":\"Software Development\",\"3447\":\"Software Development\",\"938\":\"Software Development\",\"4854\":\"Software Development\",\"1847\":\"Software Development\",\"3483\":\"Software Development\",\"3463\":\"Software Development\",\"3291\":\"Software Development\",\"4855\":\"Software Development\",\"3330\":\"Software Development\",\"927\":\"Software Development\",\"575\":\"Software Development\",\"3352\":\"Software Development\",\"3608\":\"Software Development\",\"3282\":\"Software Development\",\"216\":\"Software Development\",\"935\":\"Software Development\",\"1249\":\"Software Development\",\"3464\":\"Software Development\",\"532\":\"Software Development\",\"3360\":\"Software Development\",\"1251\":\"Software Development\",\"3298\":\"Software Development\",\"3427\":\"Software Development\",\"1243\":\"Software Development\",\"1818\":\"Software Development\",\"3558\":\"Software Development\",\"3519\":\"Software Development\",\"3559\":\"Software Development\",\"3339\":\"Software Development\",\"955\":\"Software Development\",\"3473\":\"Software Development\",\"3438\":\"Software Development\",\"3417\":\"Software Development\",\"3296\":\"Software Development\",\"3442\":\"Software Development\",\"945\":\"Software Development\",\"1836\":\"Software Development\",\"3453\":\"Software Development\",\"1829\":\"Software Development\",\"524\":\"Software Development\",\"3443\":\"Software Development\",\"1816\":\"Software Development\",\"522\":\"Software Development\",\"4972\":\"Software Development\",\"891\":\"Software Development\",\"914\":\"Software Development\",\"1814\":\"Software Development\",\"3511\":\"Software Development\",\"3264\":\"Software Development\",\"605\":\"Software Development\",\"919\":\"Software Development\",\"947\":\"Software Development\",\"5774\":\"Software Development\",\"1813\":\"Software Development\",\"1246\":\"Software Development\",\"3465\":\"Software Development\",\"595\":\"Software Development\",\"3843\":\"Software Development\",\"3319\":\"Software Development\",\"1831\":\"Software Development\",\"3315\":\"Software Development\",\"4462\":\"Software Development\",\"950\":\"Software Development\",\"1841\":\"Software Development\",\"3285\":\"Software Development\",\"571\":\"Software Development\",\"930\":\"Software Development\",\"1817\":\"Software Development\",\"3458\":\"Software Development\",\"912\":\"Software Development\",\"3580\":\"Software Development\",\"1858\":\"Software Development\",\"3365\":\"Software Development\",\"3499\":\"Software Development\",\"3419\":\"Software Development\",\"3553\":\"Software Development\",\"3557\":\"Software Development\",\"3422\":\"Software Development\",\"1855\":\"Software Development\",\"3450\":\"Software Development\",\"3589\":\"Software Development\",\"210\":\"Software Development\",\"1248\":\"Software Development\",\"3524\":\"Software Development\",\"3532\":\"Software Development\",\"1840\":\"Software Development\",\"3390\":\"Software Development\",\"5093\":\"Software Development\",\"607\":\"Software Development\",\"520\":\"Software Development\",\"918\":\"Software Development\",\"3414\":\"Software Development\",\"3377\":\"Software Development\",\"3585\":\"Software Development\",\"3423\":\"Software Development\",\"3309\":\"Software Development\",\"924\":\"Software Development\",\"211\":\"Software Development\",\"1833\":\"Software Development\",\"221\":\"Software Development\",\"3363\":\"Software Development\",\"3601\":\"Software Development\",\"3388\":\"Software Development\",\"3516\":\"Software Development\",\"3539\":\"Software Development\",\"1844\":\"Software Development\",\"3346\":\"Software Development\",\"3347\":\"Software Development\",\"566\":\"Software Development\",\"3272\":\"Software Development\",\"3951\":\"Software Development\",\"934\":\"Software Development\",\"3359\":\"Software Development\",\"3280\":\"Software Development\",\"3838\":\"Software Development\",\"3452\":\"Software Development\",\"922\":\"Software Development\",\"3327\":\"Software Development\",\"1244\":\"Software Development\",\"3364\":\"Software Development\",\"3485\":\"Software Development\",\"3581\":\"Software Development\",\"1856\":\"Software Development\",\"3415\":\"Software Development\",\"530\":\"Software Development\",\"572\":\"Software Development\",\"3486\":\"Software Development\",\"3841\":\"Software Development\",\"917\":\"Software Development\",\"3548\":\"Software Development\",\"3307\":\"Software Development\",\"942\":\"Software Development\",\"3563\":\"Software Development\",\"2823\":\"Software Development\",\"3596\":\"Software Development\",\"3595\":\"Software Development\",\"3331\":\"Software Development\",\"3372\":\"Software Development\",\"5094\":\"Software Development\",\"3574\":\"Software Development\",\"534\":\"Software Development\",\"3500\":\"Software Development\",\"573\":\"Software Development\",\"3336\":\"Software Development\",\"937\":\"Software Development\",\"529\":\"Software Development\",\"220\":\"Software Development\",\"3590\":\"Software Development\",\"3525\":\"Software Development\",\"523\":\"Software Development\",\"3496\":\"Software Development\",\"3263\":\"Software Development\",\"3513\":\"Software Development\",\"3488\":\"Software Development\",\"4846\":\"Software Development\",\"3561\":\"Software Development\",\"224\":\"Software Development\",\"793\":\"Software Development\",\"3531\":\"Software Development\",\"928\":\"Software Development\",\"3572\":\"Software Development\",\"3266\":\"Software Development\",\"3844\":\"Software Development\",\"3521\":\"Software Development\",\"3582\":\"Software Development\",\"3349\":\"Software Development\",\"3275\":\"Software Development\",\"3279\":\"Software Development\",\"3481\":\"Software Development\",\"3378\":\"Software Development\",\"3403\":\"Software Development\",\"3260\":\"Software Development\",\"3409\":\"Software Development\",\"1242\":\"Software Development\"}}"